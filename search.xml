<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>『零基础学Java语言-浙江大学-翁恺』 第1周 计算</title>
    <url>/shoka/program/note/java/course01_week01/</url>
    <content><![CDATA[<blockquote>
<p>以下为个人学习笔记和习题整理<br />
课程：零基础学Java语言-浙江大学-翁恺 @ 中国大学MOOC<br />
<a href="https://www.icourse163.org/course/ZJU-1001541001" target="_blank" rel="noopener">https://www.icourse163.org/course/ZJU-1001541001</a></p>
</blockquote>
<h1 id="课堂笔记"><a class="markdownIt-Anchor" href="#课堂笔记"></a> 课堂笔记</h1>
<h2 id="读输入-字符串输出"><a class="markdownIt-Anchor" href="#读输入-字符串输出"></a> 读输入、字符串输出</h2>
<pre class="code-container"><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util</span><span class="token punctuation">.</span><span class="token class-name">Scanner</span><span class="token punctuation">;</span></span><br><span class="line"><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span></span><br><span class="line"><span class="token class-name">Scanner</span> in <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span></span><br><span class="line"><span class="token comment">// 输入Scan之后，按下键盘 Alt + “/” 键，Eclipse下自动补全。</span></span><br><span class="line"></span><br><span class="line"><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span><span class="token function">nextLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><br><span class="line"><span class="token comment">// 让in这个对象做读入下一行的动作，结果交给System.out这个对象去打印一行。</span></span><br><span class="line"></span><br><span class="line"><span class="token comment">// 字符串的 + 用来连接两个字符串形成更长的字符串。</span></span><br><span class="line"><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Hello"</span> <span class="token operator">+</span> <span class="token string">" world."</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><br><span class="line"><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Hello"</span> <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><br><span class="line"><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Hello"</span> <span class="token operator">+</span> <span class="token number">2</span> <span class="token operator">+</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><br><span class="line"><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">+</span> <span class="token number">3</span> <span class="token operator">+</span> <span class="token string">"Hello"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><br></pre></td></tr></table></figure></pre>
<p>tips：</p>
<ul>
<li><code>System.out.println</code> 会换行，<code>System.out.print</code> 则不会换行</li>
<li>出现警告：<code>Resource leak: 'in' is never closed</code>，可以在函数的最后加入</li>
</ul>
<pre class="code-container"><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">in<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//释放</span></span><br></pre></td></tr></table></figure></pre>
<h2 id="变量"><a class="markdownIt-Anchor" href="#变量"></a> 变量</h2>
<ul>
<li>
<p><strong>形式</strong>：&lt;类型名称&gt; &lt;变量名称&gt; = &lt;初始值&gt;<br />
<code>int price, amount; // 同时定义两个变量</code><br />
<code>int price = 0; // 定义变量并赋值</code><br />
<code>int price, amount = 100, age;</code></p>
</li>
<li>
<p><strong>类型名称</strong>：Java是一种<strong>强类型语言</strong>，所有变量在使用前必须定义或声明，所有变量必须具有确定的数据类型。数据类型表示在变量中可以存放什么样的数据，程序运行过程中也不能改变变量的类型。</p>
</li>
<li>
<p><strong>变量名称</strong>：又称标识符，只能由字母、数字、下划线构成，数字不能出现在第一个位置。此外，Java的保留字也不能用作标识符。</p>
</li>
<li>
<p>Java的保留字列表</p>
</li>
</ul>
<table>
<thead>
<tr>
<th>abstract</th>
<th>do</th>
<th>implements</th>
<th>protected</th>
<th>throws</th>
</tr>
</thead>
<tbody>
<tr>
<td>boolean</td>
<td>double</td>
<td>import</td>
<td>public</td>
<td>transient</td>
</tr>
<tr>
<td>break</td>
<td>else</td>
<td>instanceof</td>
<td>return</td>
<td>true</td>
</tr>
<tr>
<td>byte</td>
<td>extends</td>
<td>int</td>
<td>short</td>
<td>try</td>
</tr>
<tr>
<td>case</td>
<td>false</td>
<td>interface</td>
<td>static</td>
<td>void</td>
</tr>
<tr>
<td>catch</td>
<td>final</td>
<td>long</td>
<td>strictfp</td>
<td>volatile</td>
</tr>
<tr>
<td>char</td>
<td>finally</td>
<td>native</td>
<td>super</td>
<td></td>
</tr>
<tr>
<td>class</td>
<td>float</td>
<td>new</td>
<td>switch</td>
<td></td>
</tr>
<tr>
<td>const*</td>
<td>for</td>
<td>null</td>
<td>synchronized</td>
<td></td>
</tr>
<tr>
<td>continue</td>
<td>goto*</td>
<td>package</td>
<td>this</td>
<td></td>
</tr>
<tr>
<td>default</td>
<td>if</td>
<td>private</td>
<td>throw</td>
<td></td>
</tr>
</tbody>
</table>
<ul class="task-list">
<li>以下哪些标识符是符合规则的？</li>
<li class="task-list-item"><input type="checkbox" id="cbx_0" checked="true" disabled="true" /><label for="cbx_0"> currency</label></li>
<li class="task-list-item"><input type="checkbox" id="cbx_1" checked="true" disabled="true" /><label for="cbx_1"> lastName</label></li>
<li class="task-list-item"><input type="checkbox" id="cbx_2" checked="true" disabled="true" /><label for="cbx_2"> fireplace</label></li>
<li class="task-list-item"><input type="checkbox" id="cbx_3" disabled="true" /><label for="cbx_3"> _last_name</label></li>
<li class="task-list-item"><input type="checkbox" id="cbx_4" checked="true" disabled="true" /><label for="cbx_4"> xingmin</label></li>
<li class="task-list-item"><input type="checkbox" id="cbx_5" disabled="true" /><label for="cbx_5"> class</label></li>
<li class="task-list-item"><input type="checkbox" id="cbx_6" disabled="true" /><label for="cbx_6"> goto</label></li>
<li class="task-list-item"><input type="checkbox" id="cbx_7" disabled="true" /><label for="cbx_7"> 4ever</label></li>
<li class="task-list-item"><input type="checkbox" id="cbx_8" disabled="true" /><label for="cbx_8"> time-machine</label></li>
<li class="task-list-item"><input type="checkbox" id="cbx_9" disabled="true" /><label for="cbx_9"> Int</label></li>
<li class="task-list-item"><input type="checkbox" id="cbx_10" disabled="true" /><label for="cbx_10"> $12</label></li>
<li class="task-list-item"><input type="checkbox" id="cbx_11" disabled="true" /><label for="cbx_11"> 我是变量</label></li>
</ul>
<h2 id="常量-final"><a class="markdownIt-Anchor" href="#常量-final"></a> 常量 final</h2>
<pre class="code-container"><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="token keyword">final</span> <span class="token keyword">int</span> AMOUNT <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span></span><br><span class="line"><span class="token comment">// final是一个修饰符，表示这个变量的值一旦初始化，就不能再修改了。</span></span><br></pre></td></tr></table></figure></pre>
<h2 id="变量类型"><a class="markdownIt-Anchor" href="#变量类型"></a> 变量类型</h2>
<h3 id="整数-int"><a class="markdownIt-Anchor" href="#整数-int"></a> 整数 int</h3>
<pre class="code-container"><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="token keyword">int</span> price <span class="token operator">=</span> in<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><br></pre></td></tr></table></figure></pre>
<ul>
<li>如果用户输入的不是整数，则会报错 <code>java.util.InputMismatchException</code>。</li>
<li>程序要求读入多个数字时，可以在一行输入，中间用空格分开，也可以多行输入。</li>
<li>每次召唤<code>in.nextInt()</code>，它就等待用户输入一个整数。</li>
<li>两个整数的运算结果只能是整数。</li>
<li>在Java中，<code>10</code>和<code>10.0</code>是完全不同的数。</li>
</ul>
<h3 id="浮点数-double"><a class="markdownIt-Anchor" href="#浮点数-double"></a> 浮点数 double</h3>
<ul>
<li><strong>浮点数运算有误差</strong>：由于二进制的自身限制，浮点计算需要将十进制先转换为二进制，然后对二进制数进行计算，因此导致误差。</li>
</ul>
<pre class="code-container"><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token number">1.2</span><span class="token operator">-</span><span class="token number">1.1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><br><span class="line"><span class="token comment">// 结果为 0.09999999999999987</span></span><br></pre></td></tr></table></figure></pre>
<ul>
<li>整数类型不能表达有小数部分的数；整数运算速度快，占内存小；日常中整数运算多。</li>
</ul>
<h2 id="赋值运算"><a class="markdownIt-Anchor" href="#赋值运算"></a> 赋值运算</h2>
<h3 id="强制类型转换"><a class="markdownIt-Anchor" href="#强制类型转换"></a> 强制类型转换</h3>
<ul>
<li>浮点数和整数放在一起运算时，Java会将整数转换成浮点数，然后进行浮点数运算。</li>
<li>强制性转换的优先级高于四则运算。</li>
</ul>
<pre class="code-container"><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="token keyword">double</span> a <span class="token operator">=</span> <span class="token number">1.0</span><span class="token punctuation">;</span></span><br><span class="line"><span class="token keyword">double</span> b <span class="token operator">=</span> <span class="token number">2.0</span><span class="token punctuation">;</span></span><br><span class="line"><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>a<span class="token operator">/</span>b<span class="token punctuation">;</span> <span class="token comment">//会报错</span></span><br><span class="line"><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>a<span class="token operator">/</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//不会报错</span></span><br></pre></td></tr></table></figure></pre>
<h3 id="运算符优先级"><a class="markdownIt-Anchor" href="#运算符优先级"></a> 运算符优先级</h3>
<ul>
<li>单目运算符<code>+</code> <code>-</code> 优先级最高</li>
<li>结合关系一般自左向右，单目+ -和赋值=自右向左。</li>
</ul>
<pre class="code-container"><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">result <span class="token operator">=</span> a <span class="token operator">=</span> b <span class="token operator">=</span> <span class="token number">3</span> <span class="token operator">+</span> c<span class="token punctuation">;</span></span><br><span class="line">result <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span></span><br><span class="line">result <span class="token operator">=</span> <span class="token punctuation">(</span>result <span class="token operator">=</span> result <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">6</span> <span class="token operator">*</span> <span class="token punctuation">(</span>result <span class="token operator">=</span> <span class="token number">3</span> <span class="token operator">+</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span></span><br></pre></td></tr></table></figure></pre>
<h3 id="复合赋值"><a class="markdownIt-Anchor" href="#复合赋值"></a> 复合赋值</h3>
<ul>
<li>5个算术运算符，<code>+ - * / %</code>，可以和赋值运算符 <code>=</code> 结合起来，形成复合赋值运算。注意，两个运算符中间不要有空格。</li>
</ul>
<pre class="code-container"><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">total <span class="token operator">+=</span> <span class="token punctuation">(</span>sum<span class="token operator">+</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">;</span></span><br><span class="line">total <span class="token operator">=</span> total <span class="token operator">+</span> <span class="token punctuation">(</span>sum<span class="token operator">+</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">;</span></span><br><span class="line"></span><br><span class="line">total <span class="token operator">*</span> <span class="token operator">=</span> sum<span class="token operator">+</span><span class="token number">12</span><span class="token punctuation">;</span></span><br><span class="line">total <span class="token operator">=</span> total<span class="token operator">*</span><span class="token punctuation">(</span>sum<span class="token operator">+</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><br><span class="line"></span><br><span class="line">total <span class="token operator">/=</span> <span class="token number">12</span><span class="token operator">+</span><span class="token number">6</span><span class="token punctuation">;</span></span><br><span class="line">total <span class="token operator">=</span> total <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token number">12</span><span class="token operator">+</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><br></pre></td></tr></table></figure></pre>
<ul>
<li>递增递减运算符 <code>++</code> <code>--</code>，给变量+1或-1</li>
<li>前缀后缀：</li>
</ul>
<pre class="code-container"><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">a <span class="token operator">=</span> <span class="token number">14</span><span class="token punctuation">;</span></span><br><span class="line">t1 <span class="token operator">=</span> a<span class="token operator">++</span><span class="token punctuation">;</span> <span class="token comment">// t1先被赋值为 a 即14， a自加到 15</span></span><br><span class="line">t2 <span class="token operator">=</span> <span class="token operator">++</span>a<span class="token punctuation">;</span> <span class="token comment">// a先自加到 15，t2被赋值为 a 即 15</span></span><br></pre></td></tr></table></figure></pre>
<h1 id="编程题"><a class="markdownIt-Anchor" href="#编程题"></a> 编程题</h1>
<h2 id="题目1-温度转换5分"><a class="markdownIt-Anchor" href="#题目1-温度转换5分"></a> 题目1. 温度转换（5分）</h2>
<ul>
<li>
<p><strong>题目内容</strong><br />
写一个将华氏温度转换成摄氏温度的程序，转换的公式是：</p>
<p><code>°F = (9/5)*°C + 32</code></p>
<p>其中C表示摄氏温度，F表示华氏温度。</p>
<p>程序的输入是一个整数，表示华氏温度。输出对应的摄氏温度，也是一个整数。</p>
<p>提示，为了把计算结果的浮点数转换成整数，需要使用下面的表达式：</p>
<p><code>(int)x;</code></p>
<p>其中x是要转换的那个浮点数。</p>
<p><em>注意：除了题目要求的输出，不能输出任何其他内容，比如输入时的提示，输出时的说明等等都不能。这道题目要求转换后的数字，程序就只能输出这个数字，除此之外任何内容都不能输出。</em></p>
</li>
<li>
<p><strong>输入格式</strong><br />
一个整数。</p>
</li>
<li>
<p><strong>输出格式</strong><br />
一个整数。</p>
</li>
<li>
<p><strong>输入样例</strong><br />
100</p>
</li>
<li>
<p><strong>输出样例</strong><br />
37</p>
</li>
</ul>
<h3 id="解题代码"><a class="markdownIt-Anchor" href="#解题代码"></a> 解题代码</h3>
<pre class="code-container"><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util</span><span class="token punctuation">.</span><span class="token class-name">Scanner</span><span class="token punctuation">;</span></span><br><span class="line"></span><br><span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span></span><br><span class="line"></span><br><span class="line">	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span></span><br><span class="line">		<span class="token class-name">Scanner</span> in <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span></span><br><span class="line">		</span><br><span class="line">		<span class="token comment">// 获得输入的整数</span></span><br><span class="line">		<span class="token keyword">int</span> fahrenheit <span class="token operator">=</span> in<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><br><span class="line">		<span class="token comment">// 计算摄氏度</span></span><br><span class="line">		<span class="token keyword">double</span> centigrade <span class="token operator">=</span> <span class="token punctuation">(</span>fahrenheit <span class="token operator">-</span> <span class="token number">32</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token number">9</span> <span class="token operator">/</span> <span class="token number">5.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><br><span class="line">		<span class="token comment">// 将浮点数转换为整数输出</span></span><br><span class="line">		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>centigrade<span class="token punctuation">)</span><span class="token punctuation">;</span></span><br><span class="line">	<span class="token punctuation">}</span></span><br><span class="line"></span><br><span class="line"><span class="token punctuation">}</span></span><br></pre></td></tr></table></figure></pre>
]]></content>
      <categories>
        <category>编程</category>
        <category>自考笔记</category>
        <category>04747 Java语言程序设计</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>笔记</tag>
      </tags>
  </entry>
</search>

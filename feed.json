{
    "version": "https://jsonfeed.org/version/1",
    "title": "優萌初華",
    "subtitle": "有夢書架",
    "icon": "https://shoka.lostyu.me/images/favicon.ico",
    "description": "琉璃的医学 & 编程笔记",
    "home_page_url": "https://shoka.lostyu.me",
    "items": [
        {
            "id": "https://shoka.lostyu.me/computer-science/mse/itmd-510/week-5/",
            "url": "https://shoka.lostyu.me/computer-science/mse/itmd-510/week-5/",
            "title": "Week 5. Inheritance",
            "date_published": "2020-09-24T08:52:15.000Z",
            "content_html": "<h1 id=\"notes\"><a class=\"anchor\" href=\"#notes\">#</a> Notes</h1>\n<p>The Four CornerStones of OOP!<br />\nOOP 的四个基石！</p>\n<ul>\n<li>Abstraction (vs. Interfaces)<br />\n 抽象（与接口）</li>\n<li>Polymorphism (many shapes and forms)<br />\n 多态性（许多形状和形式）</li>\n<li>Inheritance (Type/subtype)<br />\n 继承（类型 / 子类型）</li>\n<li>Encapsulation (data hiding)<br />\n 封装（数据隐藏）</li>\n</ul>\n",
            "tags": [
                "计算机科学",
                "Master of Software Engineering",
                "ITMD 510. Object-Oriented App Develop",
                "Java"
            ]
        },
        {
            "id": "https://shoka.lostyu.me/computer-science/mse/itmd-534/lecture-3/",
            "url": "https://shoka.lostyu.me/computer-science/mse/itmd-534/lecture-3/",
            "title": "Lecture 3. How to organize and use data from contextual inquiry",
            "date_published": "2020-09-23T12:16:25.000Z",
            "content_html": "<h1 id=\"what-to-do-with-all-data\"><a class=\"anchor\" href=\"#what-to-do-with-all-data\">#</a> What to do with all data?</h1>\n<p>如何处理所有数据？</p>\n<p>How to organize and use data from contextual inquiry?<br />\n 如何组织和使用情境访谈的数据</p>\n<h2 id=\"recommended-technique\"><a class=\"anchor\" href=\"#recommended-technique\">#</a> Recommended technique</h2>\n<p>Use <span class=\"orange\">Graphical Models (diagrams)</span><br />\n 推荐技术：使用图形模型</p>\n<ul>\n<li>Integrate<br />\n 整合</li>\n<li>Summarize<br />\n 总结</li>\n<li>Point back to the data<br />\n 指向数据</li>\n<li>Help inspire and guide design<br />\n 帮助启发和指导设计</li>\n<li>Provide shared focus<br />\n 提供共同的焦点</li>\n<li>Provide an intermediate deliverable outside design team<br />\n 提供一个中间交付的外部设计团队</li>\n</ul>\n<p>&quot;Opinions are cheap but insights are priceless.&quot;<br />\n 意见不多，但见识却多无价</p>\n<h2 id=\"why-graphical-为什么用图表\"><a class=\"anchor\" href=\"#why-graphical-为什么用图表\">#</a> Why Graphical 为什么用图表</h2>\n<ul>\n<li>Displays whole picture at once<br />\n 一次显示整个图片</li>\n<li>Reveals patterns<br />\n 显示图案</li>\n<li>Forces summarization and conciseness<br />\n 力求简洁</li>\n<li>Multiple models provides different perspectives<br />\n 多种模型提供不同的观点</li>\n</ul>\n<h2 id=\"affinity-diagram-亲和图\"><a class=\"anchor\" href=\"#affinity-diagram-亲和图\">#</a> Affinity Diagram 亲和图</h2>\n<ul>\n<li>Write down each quote/observation on a slip of paper<br />\n 将每个报价 / 观察结果记在纸条上</li>\n<li>Put up on board<br />\n 贴在墙上</li>\n<li>Coalesce items that have affinity<br />\n 具有亲和力的合并项\n<ul>\n<li>If they are saying similar things about an issue<br />\n 如果他们对某个问题有类似的发言</li>\n</ul>\n</li>\n<li>Give names to different groups (colors too)<br />\n 为不同的组命名（颜色也是）</li>\n<li>Continue grouping subgroups<br />\n 继续分组子组</li>\n<li>A hierarchy will be formed<br />\n 将形成一个层次结构</li>\n</ul>\n<blockquote>\n<p>Beyer &amp; Holtzblatt call this process &quot;Contextual Design&quot;</p>\n</blockquote>\n<ul>\n<li>\n<p>After collecting data – we go to the models<br />\n 收集数据后，进入模型</p>\n<ul>\n<li>Affinity diagrams are more important for teams and when there are lots of ideas<br />\n 亲和图对于团队以及何时有新主意很重要</li>\n</ul>\n</li>\n<li>\n<p>You will make the models directly from your transcripts<br />\n 你可以直接从笔记中制作模型。</p>\n</li>\n</ul>\n<p><img data-src=\"https://i.loli.net/2020/10/03/K2GCa1jk6xR9TVM.jpg\" alt=\"\" /></p>\n<h1 id=\"models\"><a class=\"anchor\" href=\"#models\">#</a> Models</h1>\n<ul>\n<li>\n<p>Flow Model<br />\n 流程模型<br />\n Communication and coordination necessary to perform task<br />\n 执行任务所需的沟通和协调</p>\n</li>\n<li>\n<p>Social / Cultural Model<br />\n 社会 / 文化模型<br />\n Constraints on work due to policy, culture, or values<br />\n 由于政策，文化或价值观而对工作造成的限制</p>\n</li>\n<li>\n<p>Artifact Model<br />\n 器物模型<br />\n Physical things used and created<br />\n 使用和创建的物理事物</p>\n</li>\n<li>\n<p>Physical Model<br />\n 物理模型<br />\n Layout of work environment as it affects the work.<br />\n 工作环境的布局，因为它会影响工作。</p>\n</li>\n<li>\n<p>Sequence / Step-by-Step Model<br />\n 顺序 / 逐步模型</p>\n<ul>\n<li>Detailed work steps<br />\n 详细的工作步骤</li>\n<li>&quot;Step by Step Task Interaction Model&quot;<br />\n 分步任务交互模型</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"in-all-models\"><a class=\"anchor\" href=\"#in-all-models\">#</a> In All Models</h2>\n<p>ALWAYS label everything you put on the model with the line-number in the transcript (or time on the video/audio, if no transcript).<br />\n 始终使用笔记中的行号，标记放在模型上的所有内容（如果没有笔记，则使用视频 / 音频的时间）。</p>\n<p>This allows you to get back to the raw data to see if a different interpretation is possible.<br />\n 这可以让你找回原始数据，并查看是否有其他解释。</p>\n<p>If there is no pointer back, then it is an unsupported Assumption and subject to additional scrutiny.<br />\n 如果没有指针返回，则表示它是一个不受支持的假设，需要进行额外的检查。</p>\n<p>Don’t make things up –show only what is available in the data<br />\n 不要整理 —— 只显示数据中可用的内容</p>\n<h2 id=\"breakdownbarriers-细分障碍\"><a class=\"anchor\" href=\"#breakdownbarriers-细分障碍\">#</a> Breakdown/Barriers 细分 / 障碍</h2>\n<ul>\n<li>\n<p>Problems that interfere with normal operation<br />\n 干扰正常运行的问题</p>\n</li>\n<li>\n<p>Represented in most models<br />\n 代表大多数型号</p>\n</li>\n<li>\n<p>Key opportunities and issues for design<br />\n 设计的主要机会和问题</p>\n</li>\n<li>\n<p>Often shown in red with a &quot;lightning bolt&quot;<br />\n 通常以 “闪电” 的形式显示为红色</p>\n</li>\n</ul>\n<p><img data-src=\"https://i.loli.net/2020/10/03/8buV2tnEKIPk3oc.png\" alt=\"\" /></p>\n<h3 id=\"additional-example\"><a class=\"anchor\" href=\"#additional-example\">#</a> Additional Example</h3>\n<ul>\n<li>New example: Giving a presentation</li>\n</ul>\n<p><img data-src=\"https://i.loli.net/2020/10/03/rVZmBMU1LWawDKn.jpg\" alt=\"\" /></p>\n<ul>\n<li>From the paper: 来自论文\n<ul>\n<li>Karen Cross, Adrienne Warmack, and Brad Myers.<br />\n&quot;Lessons Learned: Using Contextual Inquiry Analysis to Improve PDA Control of Presentations&quot;<br />\n 经验教训：用语境查询分析改善 PDA 控制的演讲</li>\n<li>Results influenced design of SlideShow Commander remote control product for mobile phones<br />\n 结果影响了手机上的幻灯片遥控产品的设计</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"flow-model-流程模型\"><a class=\"anchor\" href=\"#flow-model-流程模型\">#</a> Flow Model 流程模型</h2>\n<ul>\n<li>\n<p>Communication and coordination necessary to perform tasks<br />\n 执行任务所需的沟通和协调</p>\n<ul>\n<li>Work flow 工作流</li>\n<li>Who talks to whom? Who gives what to whom?<br />\n 谁与谁在对话？谁给了什么给谁？</li>\n</ul>\n</li>\n<li>\n<p>Key <em>roles</em> of individuals or groups<br />\n 个人或团体的关键作用</p>\n</li>\n<li>\n<p>Key <em>responsibilities</em> of that person with respect to the tasks<br />\n 该人在任务方面的主要职责</p>\n</li>\n<li>\n<p><em>Flow</em> of communication and artifacts, shown as arrows<br />\n 通信和工件流，如箭头所示</p>\n</li>\n<li>\n<p>Artifacts passed around<br />\n 工件传递</p>\n</li>\n<li>\n<p>Actions along the way<br />\n 沿途操作</p>\n</li>\n<li>\n<p>Places that things or people go<br />\n 要去的地方</p>\n</li>\n<li>\n<p>Breakdowns<br />\n 故障</p>\n</li>\n</ul>\n<h3 id=\"flow-model-structure-结构\"><a class=\"anchor\" href=\"#flow-model-structure-结构\">#</a> Flow Model Structure 结构</h3>\n<ul>\n<li>\n<p>Circles and/or icons = people or groups by role<br />\n 圆圈和 / 或图表 ➡️ 按角色分类的人或组</p>\n</li>\n<li>\n<p>Boxes = things (artifacts), places, files, etc.<br />\n 盒子 ➡️ 事物（物件）、位置、文件等</p>\n</li>\n<li>\n<p>Arrows = flow<br />\n 箭头 ➡️ 流向</p>\n</li>\n<li>\n<p>Red lightening bolts = breakdowns<br />\n 红色闪电标志 ➡️ 故障</p>\n</li>\n<li>\n<p>Times refer to time codes in video<br />\n 时间是视频中的时间码</p>\n<ul>\n<li>Could also refer to lines of a transcript<br />\n 也可以参考笔记的行号</li>\n<li><code>(A)</code>  = <ins>A</ins>ssumption 假设 = interpretation 解释\n<ul>\n<li>Note: not for team-member's opinions about the UI<br />\n 注意：不适用于团队成员对用户界面的看法</li>\n<li>Instead (A) is for assumptions about what userdid<br />\n 相反 (A) 是关于用户使用什么的假设</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>Note: you (interviewer) are never in any model<br />\n 注意：你作为采访者，永远不会参与任何模型</p>\n</blockquote>\n<h3 id=\"flow-model-components-组成\"><a class=\"anchor\" href=\"#flow-model-components-组成\">#</a> Flow Model Components 组成</h3>\n<h4 id=\"general\"><a class=\"anchor\" href=\"#general\">#</a> General</h4>\n<ul>\n<li>How do job responsibilities get assigned to people?<br />\n 如何分配工作职责给大家？</li>\n<li>How do they get help?<br />\n 大家如何获得帮助</li>\n<li>How do new tasks get assigned, and how are they carried out?<br />\n 如何分配新任务，以及如何执行它们？</li>\n<li>Coordination: where did each artifact come from and where does it go?<br />\n 协调：每个物件从何而来？\n<ul>\n<li>Problems with coordination: forgetting, timing, steps<br />\n 协调问题：遗忘，时间安排，步骤</li>\n</ul>\n</li>\n<li>Creates the &quot;bird's eye view&quot; of organizational structure<br />\n 创建组织结构的 “鸟瞰图”</li>\n</ul>\n<h4 id=\"web-网站\"><a class=\"anchor\" href=\"#web-网站\">#</a> Web 网站</h4>\n<ul>\n<li>NOT flow chart of pages visited<br />\n 没有访问页面的流程图</li>\n<li>How information and command flow among the site(s)<br />\n 信息和命令如何在站点之间流动</li>\n</ul>\n<h3 id=\"flow-model-example\"><a class=\"anchor\" href=\"#flow-model-example\">#</a> Flow Model Example</h3>\n<p><img data-src=\"https://i.loli.net/2020/10/03/H1NUKGpTPB3ilyf.jpg\" alt=\"cdw\" title=\"cdw\" /><br />\n<img data-src=\"https://i.loli.net/2020/10/03/LKCXvMo5VFUTjZp.jpg\" alt=\"stuttering\" title=\"stuttering\" /><br />\n<img data-src=\"https://i.loli.net/2020/10/03/EMYKdwQp1hvyqUH.jpg\" alt=\"ssc\" title=\"ssc\" /></p>\n<h2 id=\"social-model-社会模型\"><a class=\"anchor\" href=\"#social-model-社会模型\">#</a> Social Model 社会模型</h2>\n<ul>\n<li>\n<p>Culture of organization, family, community defines expectations, desires, policies, values and approach<br />\n 组织、家庭、社区的文化，定义了期望、欲望、政策、价值观和方法</p>\n</li>\n<li>\n<p>&quot;Culture is as invisible as water to a fish&quot;<br />\n 文化就像鱼的水一样看不见</p>\n<ul>\n<li>Pervasive, inescapable; yet invisible and intangible<br />\n 普遍存在，不可避免； 看不见，摸不着</li>\n</ul>\n</li>\n<li>\n<p>Types of influences:<br />\n 影响类型：</p>\n<ul>\n<li>Formal and informal policies<br />\n 正式和非正式政策</li>\n<li>Power of individuals and groups over each other<br />\n 个人和团体相互之间的力量</li>\n<li>Values of company or team<br />\n 公司或团队的价值观</li>\n<li>Work domain constraints<br />\n 工作领域限制</li>\n<li>Group's sense of identity<br />\n 集体的认同感</li>\n<li>People's emotions about what they do<br />\n 人对自己所做之事情的情感</li>\n<li>The style, values and preferences of individuals or teams<br />\n 个人或团队的风格，价值观和偏好</li>\n</ul>\n</li>\n<li>\n<p>More examples of what goes on social model:<br />\n 更多示例</p>\n<ul>\n<li>When acceptable to use a recording device<br />\n 当可接受使用记录设备时</li>\n<li>What friends might think<br />\n 朋友可能会怎么想</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"social-model-structure\"><a class=\"anchor\" href=\"#social-model-structure\">#</a> Social Model Structure</h3>\n<ul>\n<li>\n<p>Ovals for &quot;Influencers&quot;: individuals or groups, internal or external<br />\n 椭圆形 ➡️ “影响者”：内部或外部的个人或团体</p>\n</li>\n<li>\n<p>Thought bubbles for feelings/concerns that they actually expressed<br />\n 思想泡泡 ➡️ 他们实际表达的感受 / 担忧</p>\n</li>\n<li>\n<p>Arrows for direction of influence<br />\n 箭头 ➡️ 影响的方向</p>\n<ul>\n<li>Labels for samples of dialog showing type of influence and attitudes<br />\n 标签 ➡️ 样本的对话框，显示影响的类型和态度\n<ul>\n<li>Worded as commands<br />\n 文字 ➡️ 命令</li>\n</ul>\n</li>\n<li>Also show &quot;pushback&quot; –influence in other direction<br />\n 同时显示 “回推” ➡️ 对其他方向的影响</li>\n</ul>\n</li>\n<li>\n<p>Breakdowns<br />\n 故障</p>\n<ul>\n<li>In relationships among people<br />\n 在人与人的关系中</li>\n<li>No need to repeat previously shown problems<br />\n 无需重复先前提过的问题</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>NOTE: Not allowed to make stuff up!<br />\nJust what you actually have data to support!<br />\n 注意：不允许美化！只要实际需要支持的数据！</p>\n</blockquote>\n<h3 id=\"social-model-example\"><a class=\"anchor\" href=\"#social-model-example\">#</a> Social Model Example</h3>\n<p><img data-src=\"https://i.loli.net/2020/10/03/T8DAmik3YFqlBd5.png\" alt=\"cdw\" title=\"cdw\" /><br />\n<img data-src=\"https://i.loli.net/2020/10/03/mPFQ3BkzJgdW6nG.jpg\" alt=\"stuttering\" title=\"stuttering\" /><br />\n<img data-src=\"https://i.loli.net/2020/10/03/bkQuNDt4iAsTCzx.jpg\" alt=\"ssc\" title=\"ssc\" /></p>\n<h2 id=\"artifact-model-工件模型\"><a class=\"anchor\" href=\"#artifact-model-工件模型\">#</a> Artifact Model 工件模型</h2>\n<ul>\n<li>\n<p>Artifacts: What people create, modify and use as part of tasks<br />\n 工件：人们在任务中创建、修改和使用的内容</p>\n</li>\n<li>\n<p>Reveal traces of people’s work practices<br />\n 揭示人们工作习惯的痕迹</p>\n</li>\n<li>\n<p>Examples:</p>\n<ul>\n<li>Handwritten notes and signatures on hardcopy project plans -&gt; information flow and approval<br />\n 硬拷贝项目计划上的手写注释和签名 -&gt; 信息流和批准</li>\n<li>Fancy formatting on spreadsheet -&gt; looks are important<br />\n 电子表格上的精美格式 -&gt; 外观很重要</li>\n<li>Screen shots showing problematic features<br />\n 屏幕截图显示有问题的功能</li>\n</ul>\n</li>\n<li>\n<p>Model = drawing, photograph or copy of real artifact<br />\n 模型 = 实际工件的图纸、照片或副本</p>\n</li>\n<li>\n<p>Annotate with observations<br />\n 注释与观测</p>\n</li>\n</ul>\n<h3 id=\"artifact-model-example\"><a class=\"anchor\" href=\"#artifact-model-example\">#</a> Artifact Model Example</h3>\n<p><img data-src=\"https://i.loli.net/2020/10/03/4vYOWk9oLc1dhIT.png\" alt=\"cdw\" title=\"cdw\" /><br />\n<img data-src=\"https://i.loli.net/2020/10/03/QUbX6kyqEdtgoil.jpg\" alt=\"stuttering\" title=\"stuttering\" /><br />\n<img data-src=\"https://i.loli.net/2020/10/03/AgrOk9nzyMiWfCe.jpg\" alt=\"stuttering\" title=\"stuttering\" /><br />\n<img data-src=\"https://i.loli.net/2020/10/03/jnNCtPaZGwrVmKR.jpg\" alt=\"stuttering\" title=\"stuttering\" /></p>\n<h2 id=\"physical-model-物理模型\"><a class=\"anchor\" href=\"#physical-model-物理模型\">#</a> Physical Model 物理模型</h2>\n<ul>\n<li>\n<p>Way the physical environment affects tasks<br />\n 物理环境影响任务的方式</p>\n<ul>\n<li>E.g, placement of items on a desk<br />\n 例如，将物品放在桌子上</li>\n<li>Proximity of printers<br />\n 邻近打印机</li>\n<li>Can't hold a device with a keyboard while standing up<br />\n 站立时无法手持键盘设备</li>\n</ul>\n</li>\n<li>\n<p>In presentation example, where people are and layout of environment<br />\n 在演示示例中，人在哪里以及环境的布局</p>\n</li>\n</ul>\n<blockquote>\n<p>Note: Physical model not always relevant or needed<br />\nSeems less important for web, unless mobile<br />\n 注意：物理模型并非始终相关或需要<br />\n对于网站似乎就不太重要，除非是移动设备</p>\n</blockquote>\n<h3 id=\"physical-model-components\"><a class=\"anchor\" href=\"#physical-model-components\">#</a> Physical Model Components</h3>\n<ul>\n<li>Places in which work occurs<br />\n 工作场所</li>\n<li>Physical structures which limit or define the space<br />\n 限制或定义空间的物理结构</li>\n<li>Usage and movement within the space<br />\n 空间内的使用和移动</li>\n<li>Hardware and other artifacts used<br />\n 使用的硬件和其他工件</li>\n<li>Layout of tools and artifacts<br />\n 工具和工件的布局</li>\n<li>Positions of people within environment<br />\n 人们在环境中的位置</li>\n<li>Breakdowns due to physical environment<br />\n 由于物理环境造成的故障</li>\n</ul>\n<h3 id=\"physical-model-example\"><a class=\"anchor\" href=\"#physical-model-example\">#</a> Physical Model Example</h3>\n<p><img data-src=\"https://i.loli.net/2020/10/05/FsSBWwNURtrIvCq.jpg\" alt=\"ssc\" title=\"ssc\" /></p>\n<h2 id=\"sequence-model-序列模型\"><a class=\"anchor\" href=\"#sequence-model-序列模型\">#</a> Sequence Model 序列模型</h2>\n<ul>\n<li>Similar to the Flow Model<br />\n 与流程模型相似</li>\n<li><em>Steps</em> taken to complete a task<br />\n 踏踏实实地完成任务</li>\n<li><em>Triggers</em> that cause the step to happen<br />\n 导致步骤发生的触发器\n<ul>\n<li>E.g., at a particular time; when something else happens<br />\n 例如，在特定时间； 当其他事情发生时</li>\n</ul>\n</li>\n<li><em>Intent</em> is key to understanding the steps<br />\n 意图是理解步骤的关键\n<ul>\n<li>Also called the goal<br />\n 也称为目标</li>\n<li>Why each step is performed, and why in that order<br />\n 为什么要执行每个步骤，以及为什么要按顺序进行</li>\n</ul>\n</li>\n<li>Arrows to show order of the steps<br />\n 箭头显示步骤顺序\n<ul>\n<li>Can have loops<br />\n 可以有循环</li>\n</ul>\n</li>\n<li>Breakdowns in communication or coordination<br />\n 沟通或协调失误</li>\n</ul>\n<h3 id=\"sequence-model-components\"><a class=\"anchor\" href=\"#sequence-model-components\">#</a> Sequence Model Components</h3>\n<ul>\n<li>Can choose level of detail depending on focus (what investigating)<br />\n 可以根据重点，选择详细程度（进行调查）\n<ul>\n<li>E.g., for writing a letter:<br />\n 例如，写一封信：\n<ul>\n<li>High-level (functional level): Find most recent letter written to same person, open it, delete date, replace with new date, delete contents, type new contents, …<br />\n 高级（功能级别）：查找写给同一个人的最新字母，打开它，删除日期，替换为新日期，删除内容，键入新内容，…</li>\n<li>Low level (user interface level): Switch windows explorer to details view, Sort files by date, double-click on top item, check &quot;To:&quot; to see if correct person, click and drag across date field, …<br />\n 低级别（用户界面级别）：将 Windows 资源管理器切换到详细信息视图，按日期对文件排序，双击顶部项目，选中 “收件人：” 以查看是否正确的人，单击并在日期字段中拖动，…</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Notice hesitations and errors<br />\n 注意犹豫和错误\n<ul>\n<li>Interrupt and ask why or what expected<br />\n 中断，并询问原因或期望</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"sequence-model-example\"><a class=\"anchor\" href=\"#sequence-model-example\">#</a> Sequence Model Example</h3>\n<p><img data-src=\"https://i.loli.net/2020/10/05/TinG7lFmWNxBaLV.jpg\" alt=\"cdw\" title=\"cdw\" /></p>\n<h2 id=\"creating-models-创建模型\"><a class=\"anchor\" href=\"#creating-models-创建模型\">#</a> Creating Models 创建模型</h2>\n<ul>\n<li>\n<p>Create models generalizing over all interviewees<br />\n 建立涵盖所有受访者的模型</p>\n<ul>\n<li>&quot;Consolidated&quot; models<br />\n “合并” 模型</li>\n<li>Barrier summaries<br />\n 屏障摘要</li>\n<li>Key Idea: Induce generalizations from concrete data<br />\n 关键思想：从具体数据中得出概括\n<ul>\n<li>Don't rely on intuition alone<br />\n 不要只凭直觉</li>\n<li>Don't deduce from logical abstractions<br />\n 不要从逻辑抽象中推断</li>\n<li>Example:\n<ul>\n<li>Logic says system manager will diagnose the reason behind a system failure.<br />\n 逻辑表示系统管理员将诊断系统故障的原因。</li>\n<li>Actual practice: System manager tries standard fixes first (like reboot) &amp; diagnoses only if necessary<br />\n 实际做法：系统管理员首先尝试进行标准修复（例如重新启动）并仅在必要时进行诊断</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>Main goal: Deduce the intent<br />\n 主要目标：推论意图</p>\n</li>\n</ul>\n<h2 id=\"what-to-do-with-models-模型的用处\"><a class=\"anchor\" href=\"#what-to-do-with-models-模型的用处\">#</a> What to do with Models 模型的用处</h2>\n<ul>\n<li>User data drives innovation<br />\n 用户数据推动创新\n<ul>\n<li>Solve problems (breakdowns) identified in models<br />\n 解决模型中发现的问题（故障）</li>\n<li>Grounded brainstorming<br />\n 头脑风暴</li>\n</ul>\n</li>\n<li>Flow model<br />\n 流程模型\n<ul>\n<li>Eliminate flows, roles, redundant data entry<br />\n 消除流程，角色，冗余数据输入</li>\n</ul>\n</li>\n<li>Social / Cultural model<br />\n 社会 / 文化模型\n<ul>\n<li>Increase communication, reinforce positive values<br />\n 增加沟通，增强正面价值</li>\n</ul>\n</li>\n<li>Artifact model:<br />\n 工件模型\n<ul>\n<li>Guide requirements, metaphors, remove screen problems<br />\n 指导要求，隐喻，消除屏幕问题</li>\n</ul>\n</li>\n<li>Physical model:<br />\n 物理模型\n<ul>\n<li>Depend only on what is available, reduce motion, improve flow of artifacts<br />\n 仅取决于可用的东西，减少运动，改善伪影的流动</li>\n</ul>\n</li>\n<li>Sequence model:<br />\n 序列模型\n<ul>\n<li>Eliminate, automate steps<br />\n 消除步骤并使其自动化</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"usability-engineering-可用性工程\"><a class=\"anchor\" href=\"#usability-engineering-可用性工程\">#</a> Usability Engineering 可用性工程</h1>\n<ul>\n<li>Parallel with &quot;software engineering&quot;<br />\n 与 “软件工程” 并行</li>\n<li>Make use of usability more like engineering:<br />\n 像工程一样使用可用性：</li>\n<li>&quot;Engineering&quot; “工程学”\n<ul>\n<li>Measurable, process-oriented<br />\n 可衡量的，面向过程的</li>\n<li>Not just &quot;art&quot;<br />\n 不只是 “艺术”</li>\n</ul>\n</li>\n<li>Term coined by John Bennett in the 1980's<br />\nJohn Bennett 在 1980 年代创造的术语</li>\n<li>ISO 13407 &amp; 13529 standards discuss UE process<br />\nISO 13407 和 13529 标准，评估 UE 流程</li>\n</ul>\n<h2 id=\"usability-engineering-steps-设计思维的步骤\"><a class=\"anchor\" href=\"#usability-engineering-steps-设计思维的步骤\">#</a> Usability Engineering steps 设计思维的步骤</h2>\n<ol>\n<li>Study the users and their tasks<br />\n 研究用户及其任务</li>\n<li>Study the competition<br />\n 研究比赛</li>\n<li>Set usability goals<br />\n 设定可用性目标</li>\n<li>Participatory Design<br />\n 参与式设计</li>\n<li>Coordinating the Total Interface for Consistency<br />\n 协调总接口的一致性\n<ul>\n<li>Include documentation, help, etc.<br />\n 包括文档，帮助等。</li>\n</ul>\n</li>\n<li>Guidelines and Heuristic Evaluation<br />\n 准则和启发式评估\n<ul>\n<li>Evaluate your interface according to the guidelines.<br />\n 根据指南评估您的界面。</li>\n</ul>\n</li>\n<li>Make prototypes of the system early and quickly<br />\n 尽早快速制作系统原型</li>\n<li>Empirical testing<br />\n 实证检验</li>\n<li>Iterative design with usability analysis<br />\n 具有可用性分析的迭代设计</li>\n<li>Collect feedback from field use<br />\n 收集现场使用的反馈</li>\n</ol>\n<h2 id=\"know-the-user\"><a class=\"anchor\" href=\"#know-the-user\">#</a> Know the User</h2>\n<ul>\n<li>Study the intended users and the use of the product<br />\n 研究目标用户和产品的使用\n<ul>\n<li>Best if developers go and interview them personally<br />\n 最好是开发人员亲自去采访他们</li>\n</ul>\n</li>\n<li>Difficult because<br />\n 困难包括\n<ul>\n<li>May want to hide the developers<br />\n 可能要隐藏开发人员</li>\n<li>Reluctance of sales people<br />\n 销售人员的不情愿</li>\n<li>Reluctance of users<br />\n 用户的不情愿</li>\n</ul>\n</li>\n<li>User Characteristics<br />\n 用户特征\n<ul>\n<li>Work experience, education level, age, previous computer experience<br />\n 工作经验，学历，年龄，以前的计算机经验</li>\n<li>Time for learning, training<br />\n 学习，培训时间</li>\n<li>Available hardware (monitor size, acceptance of plugins, cell-phones vs. desktop)<br />\n 可用的硬件（显示器大小，接受插件，手机与台式机的对比）</li>\n<li>Social context of use<br />\n 使用的社会环境</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"personas-用户画像\"><a class=\"anchor\" href=\"#personas-用户画像\">#</a> Personas 用户画像</h2>\n<ul>\n<li>Popularized by Alan Cooper 由艾伦・库珀推广</li>\n<li>User archetype you can use to help guide design decisions<br />\n 用户原型可以用来帮助指导设计决策</li>\n<li>Created after contextual inquiry or equivalent<br />\n 经过情境访谈或等效查询后创建</li>\n<li>Summarizes properties of a group of users<br />\n 汇总一组用户的属性</li>\n<li>Use: helps keep designers &amp; implementers focused on user needs.<br />\n 使用：帮助设计师和实施者专注于用户需求。</li>\n<li>Include: behavior patterns, goals, skills, attitudes, and environment, with a few fictional personal details to bring the persona to life<br />\n 包括：行为模式，目标，技能，态度和环境，以及一些虚构的个人详细信息，使人物形象栩栩如生</li>\n<li>Have a small number for each product<br />\n 每个产品都有少量\n<ul>\n<li>One for each important group of users<br />\n 每个重要用户组一个</li>\n</ul>\n</li>\n</ul>\n<p>From: <span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5zdGVwdHdvLmNvbS5hdS9wYXBlcnMva21jX3BlcnNvbmFzLw==\">http://www.steptwo.com.au/papers/kmc_personas/</span></p>\n<p>Bob is 52 years old and works as a mechanic with an organisation offering road service to customers when their car breaks down. He has worked in the job for the past 12 years and knows it well. Many of the younger mechanics ask Bob for advice when they meet up in the depot as he always knows the answer to tricky mechanical problems. Bob likes sharing his knowledge with the younger guys, as it makes him feel a valued part of the team.</p>\n<p>Bob works rolling day and night shifts and spends his shifts attending breakdowns and lockouts (when customers lock their keys in the car). About 20% of the jobs he attends are complex and he occasionally needs to refer to his standard issue manuals. Bob tries to avoid using the manuals in front of customers as he thinks it gives the impression he doesn't know what he's doing.</p>\n<p>Bob has seen many changes over the years with the company and has tried his best to move with the times. However he found it a bit daunting when a new computer was installed in his van several years ago, and now he has heard rumoursthat the computer is going to be upgraded to one with a bigger screen that's meant to be faster and better.</p>\n<p>Bob's been told that he will be able to access the intranet on the new computer. He has heard about the intranet and saw once in an early version on his manager's computer. He wonders if he will be able to find out want'sgoing on in the company more easily, especially as customers' seem to know more about the latest company news than he does when he turns up at a job. This can be embarrassing and has been a source of frustration for Bob throughout his time with the company.</p>\n<p>Bob wonders if he will be able to cope with the new computer system. He doesn't mind asking his grandchildren for help when he wants to send an email to his brother overseas, but asking the guys at work for help is another story.</p>\n<h1 id=\"task-analysis\"><a class=\"anchor\" href=\"#task-analysis\">#</a> Task Analysis</h1>\n<ul>\n<li>What tasks the users will do?<br />\n 用户将执行哪些任务？</li>\n<li>Involve users in this<br />\n 让用户参与其中</li>\n<li>Important to include exceptions and error conditions<br />\n 重要的是要包含异常和错误条件</li>\n<li>Many different kinds and variations on Task Analyses<br />\n 任务分析的许多不同种类和变体\n<ul>\n<li>Nielsen's (in the book Designing Web Usability: The Practice of Simplicity)<br />\n《设计 Web 可用性：简单实践》 - Nielsen</li>\n<li>&quot;Hierarchical Task Analysis&quot;<br />\n 分层任务分析</li>\n<li>(Better to use CI)<br />\n 最好使用 CI</li>\n</ul>\n</li>\n<li>Need tasks to design CIs, usability analysis, scenarios<br />\n 需要任务来设计 CI，可用性分析和方案</li>\n</ul>\n<h2 id=\"task-inventory-任务清单\"><a class=\"anchor\" href=\"#task-inventory-任务清单\">#</a> Task Inventory 任务清单</h2>\n<p><img data-src=\"https://i.loli.net/2020/10/05/pHyfF1z78OYPXM5.jpg\" alt=\"Task Inventory\" /></p>\n<h2 id=\"user-centered-task-analysis-以用户为中心的任务分析\"><a class=\"anchor\" href=\"#user-centered-task-analysis-以用户为中心的任务分析\">#</a> User Centered Task Analysis 以用户为中心的任务分析</h2>\n<ul>\n<li>Based on what user will do<br />\n 根据用户的意愿\n<ul>\n<li>Not what system will do<br />\n 没有什么系统会做</li>\n</ul>\n</li>\n<li>Not a list of system features<br />\n 未列出系统功能</li>\n<li>High-level 高水平</li>\n<li>Nothing about how to accomplish at user level<br />\n 关于如何在用户级别完成操作\n<ul>\n<li>No discussion of web pages, buttons, filling in fields, etc.<br />\n 不讨论网页，按钮，填写字段等。</li>\n</ul>\n</li>\n<li>Example, company YYY menu structure based on functions rather than tasks =&gt; Inefficient for every task!<br />\n 例如，公司 YYY 菜单结构基于功能而不是任务 =&gt; 效率低下！</li>\n</ul>\n<h2 id=\"components-of-task-analysis-任务分析的组成\"><a class=\"anchor\" href=\"#components-of-task-analysis-任务分析的组成\">#</a> Components of Task Analysis 任务分析的组成</h2>\n<ul>\n<li>Goals:<br />\n 目标：\n<ul>\n<li>What are the actions this task is supposed to accomplish?<br />\n 该任务应完成的动作是什么？</li>\n<li>Remember: not howit will be done, just what<br />\n 请记住：不是怎么做，而是</li>\n<li>Think alouds reveal why<br />\n 大胆想出原因</li>\n</ul>\n</li>\n<li>Information needs<br />\n 信息需求\n<ul>\n<li>What does the user need to know or view to do this task?<br />\n 用户需要知道或查看哪些内容才能执行此任务？</li>\n<li>Includes what needs to be on the screen.<br />\n 包括屏幕上需要显示的内容。</li>\n<li>Both:<br />\n 两者：\n<ul>\n<li>What does the system need to show?<br />\n 系统需要显示什么？</li>\n<li>What does the user need to know?<br />\n 用户需要知道什么？</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"scenarios-of-task-analysis-任务分析的方案\"><a class=\"anchor\" href=\"#scenarios-of-task-analysis-任务分析的方案\">#</a> Scenarios of Task Analysis 任务分析的方案</h2>\n<ul>\n<li>Scenarios (stories) of typical uses:<br />\n 典型场景（故事）\n<ul>\n<li>Related to software engineering &quot;use cases&quot;<br />\n 有关软件工程的 “用例”</li>\n<li>Specific example of how a user might use the system.<br />\n 用户如何使用系统的特定示例</li>\n<li>One scenario for each major class of users doing each kind of important task<br />\n 每个主要类别的用户都需要执行一种重要任务的场景</li>\n<li>Will want to make those tasks efficient and easy<br />\n 想要使那些任务高效且容易</li>\n<li>What is important to optimize?<br />\n 什么是最重要的优化？</li>\n<li>Will significantly affect the design<br />\n 会严重影响设计</li>\n<li>Try to include lots of exceptional cases<br />\n 尝试包含很多例外情况</li>\n<li>Shows how the interface will be used<br />\n 显示如何使用界面</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"functional-analysis-功能分析\"><a class=\"anchor\" href=\"#functional-analysis-功能分析\">#</a> Functional Analysis 功能分析</h2>\n<ul>\n<li>What really needs to be done<br />\n 真正需要做什么</li>\n<li>Not just the way users are doing it now<br />\n 不只是用户现在的操作方式\n<ul>\n<li>May be a more efficient or more appropriate way to achieve same task<br />\n 可能是完成相同任务的更有效或更合适的方法</li>\n</ul>\n</li>\n<li>Usually, companies are good at this<br />\n 通常，公司擅长于此\n<ul>\n<li>However, may include extra functions that are not useful<br />\n 但是，可能包括一些没有用的额外功能</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"competitive-analysis-竞品分析\"><a class=\"anchor\" href=\"#competitive-analysis-竞品分析\">#</a> Competitive Analysis 竞品分析</h2>\n<ul>\n<li>&quot;Know the competition&quot;<br />\n“知道竞品”</li>\n<li>For usability and function<br />\n 为了可用性和功能</li>\n<li>Read trade-press reviews of products or web sites<br />\n 阅读产品或网站的贸易新闻评论</li>\n<li>Visit competitor's web sites<br />\n 访问竞争对手的网站\n<ul>\n<li>Also, web sites for related products<br />\n 以及，相关产品的网站</li>\n</ul>\n</li>\n<li>Importance of various features, issues<br />\n 各种功能，问题的重要性\n<ul>\n<li>Pictures, navigation, search, prices, shipping, metaphors<br />\n 图片，导航，搜索，价格，运输，隐喻</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"goal-setting-目标设定\"><a class=\"anchor\" href=\"#goal-setting-目标设定\">#</a> Goal Setting 目标设定</h2>\n<ul>\n<li>What does it mean to be &quot;easy to use&quot;?<br />\n“易于使用” 是什么意思？</li>\n<li>Some proposed definitions:<br />\n 一些建议的定义：\n<ul>\n<li>&quot;I like it&quot;<br />\n“我喜欢”</li>\n<li>&quot;I always do it that way&quot;<br />\n“我总是那样做”</li>\n<li>&quot;That is the way the xxx system does it&quot;<br />\n“这就是 xxx 系统的处理方式”</li>\n<li>&quot;It is easy to implement&quot;<br />\n“易于实施”</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"improved-改善\"><a class=\"anchor\" href=\"#improved-改善\">#</a> Improved 改善</h3>\n<ul>\n<li>\n<p>Objective Criteria<br />\n 客观标准</p>\n<ul>\n<li>Can be learned in less than 2 minutes<br />\n 不到 2 分钟即可学会</li>\n<li>User will perform 2 error-free purchases per session<br />\n 用户每次会话将执行 2 次无错购买</li>\n<li>The error rate will be lower than 2 per 10 operations<br />\n 每 10 次操作的错误率将低于 2</li>\n<li>Tasks will be performed in 30% of the time it takes using the competitor’s system<br />\n 使用竞争对手的系统将在 30％的时间内完成任务</li>\n<li>Users will have a high satisfaction with the system as measured by a survey.<br />\n 通过问卷调查，用户会对系统高度满意。</li>\n</ul>\n</li>\n<li>\n<p>Explicit, specific, measurable metrics.<br />\n 明确，具体，可衡量的指标。</p>\n</li>\n<li>\n<p>Allows objective decision making.<br />\n 允许客观决策。</p>\n</li>\n<li>\n<p>Tradeoffs, so have to pick relevant metrics<br />\n 权衡，所以必须选择相关指标</p>\n</li>\n<li>\n<p>Some measures:<br />\n 一些措施：</p>\n<ul>\n<li>Learnability: Time to learn how to do specific tasks (at a specific proficiency)<br />\n 学习能力：时间来学习如何执行特定的任务（以特定的熟练程度）</li>\n<li>Efficiency: (Expert) Time to execute benchmark (typical) tasks. Throughput.<br />\n 效率：（专家）执行基准（典型）任务的时间。 吞吐量。</li>\n<li>Errors: Error rate per task. Time spent on errors. Error severity.<br />\n 错误：每个任务的错误率。 花在错误上的时间。 错误严重性。</li>\n<li>Lots of measures from web analytics:<br />\n 网络分析中的许多措施：\n<ul>\n<li>Abandonment rates, Completion rates, Clickthroughs,% completions, etc.<br />\n 放弃率，完成率，点击率，完成率等。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>Subjective satisfaction: Questionnaire.<br />\n 主观满意度：问卷。</p>\n</li>\n</ul>\n<h2 id=\"financial-impact-财务影响\"><a class=\"anchor\" href=\"#financial-impact-财务影响\">#</a> Financial Impact 财务影响</h2>\n<ul>\n<li>Prove It! 证明给我看！</li>\n<li>Demonstrates the importance of usability<br />\n 展示可用性的重要性</li>\n<li>#users * their salary per hour * #hours on system = cost of system per hour<br />\n＃个用户 * 他们每小时的薪水 *＃个系统小时数 = 每小时系统成本</li>\n<li>Estimate savings of reduced training, error time, need for support staff, etc.<br />\n 估计减少培训、减少错误时间、需要支持人员等，而节省的费用。</li>\n<li>Tells how much time to spend on usability<br />\n 告诉您要花多少时间在可用性上</li>\n<li>Whole books on this topic:<br />\n 有关此主题的整本书：\n<ul>\n<li>Randolph G. Bias and Deborah J. Mayhew, Eds.Cost-Justifying Usability: An Update for the Internet Age, Second Edition. Morgan Kaufmann, 2005<br />\n 成本合理性：互联网时代的更新</li>\n<li>Randolph G. Bias and Deborah J. Mayhew, Cost-Justifying Usability, Boston: Academic Press, 1994.<br />\n 合理成本可用性</li>\n</ul>\n</li>\n</ul>\n",
            "tags": [
                "计算机科学",
                "Master of Software Engineering",
                "ITMD 534. Human Computer Interaction",
                "人机交互"
            ]
        },
        {
            "id": "https://shoka.lostyu.me/computer-science/mse/itmd-534/lecture-2/",
            "url": "https://shoka.lostyu.me/computer-science/mse/itmd-534/lecture-2/",
            "title": "Lecture 2. Contextual Inquiry",
            "date_published": "2020-09-18T11:56:45.000Z",
            "content_html": "<h1 id=\"how-to-innovate\"><a class=\"anchor\" href=\"#how-to-innovate\">#</a> How to Innovate</h1>\n<table>\n<tbody>\n<tr>\n<td>Contextual Inquiry</td>\n<td>A vs. B studies</td>\n</tr>\n<tr>\n<td>Contextual Analysis (Design)</td>\n<td>Questionnaires</td>\n</tr>\n<tr>\n<td>Paper prototypes</td>\n<td>Surveys</td>\n</tr>\n<tr>\n<td>Think-aloud protocols</td>\n<td>Interaction Relabeling</td>\n</tr>\n<tr>\n<td>Heuristic Evaluation</td>\n<td>Log analysis</td>\n</tr>\n<tr>\n<td>Story Boarding</td>\n<td>Focus groups</td>\n</tr>\n<tr>\n<td>Affinity diagrams (WAAD)</td>\n<td>Card sorting</td>\n</tr>\n<tr>\n<td>Personas</td>\n<td>Diary studies</td>\n</tr>\n<tr>\n<td>Wizard of Oz</td>\n<td>Improvisation</td>\n</tr>\n<tr>\n<td>Task analysis</td>\n<td>Use cases</td>\n</tr>\n<tr>\n<td>Story Boarding</td>\n<td>Scenarios</td>\n</tr>\n<tr>\n<td>Cognitive Walkthrough</td>\n<td>Cognitive Dimensions</td>\n</tr>\n<tr>\n<td>KLM and GOMS (CogTool)</td>\n<td>&quot;Speed Dating&quot;</td>\n</tr>\n<tr>\n<td>Video prototyping</td>\n</tr>\n<tr>\n<td>Body storming</td>\n</tr>\n<tr>\n<td>Expert interviews</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"contextual-inquiry-情境访谈\"><a class=\"anchor\" href=\"#contextual-inquiry-情境访谈\">#</a> Contextual Inquiry 情境访谈</h1>\n<dl>\n<dt>Definition:</dt>\n<dd>A kind of &quot;ethnographic&quot; or &quot;participatory design&quot; method<br />\n 一种人种学方法或参与式设计<br />\n Combines aspects of other methods: 结合其他几种方法\n<ul>\n<li>Interviewing, think-aloud protocols, participant/observer in the context of the work<br />\n 面试，思考型协议，工作背景下的参与者 / 观察者</li>\n<li>User is given control of interview where the interviewer learns from the interviewee in an open ended way<br />\n 给予用户访问控制权</li>\n<li>Possible to derive objective conclusions<br />\n 可能得出客观的结论</li>\n</ul>\n</dd>\n</dl>\n<ul>\n<li>\n<p>Interpretive field research method 解释性现场研究方法</p>\n</li>\n<li>\n<p>Depends on conversations with users in the context of their work<br />\n 取决于与他们工作的背景</p>\n</li>\n<li>\n<p>Used to define requirements, plans and designs.<br />\n 用于定义需求，计划和设计。<br />\nDiscover the real requirements of the work<br />\n 发现工作的真正需求</p>\n</li>\n<li>\n<p>Drives the creative process: 推动创作过程</p>\n<ul>\n<li>In original design 原创设计</li>\n<li>In considering new features or functionality 在考虑新功能时</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"context-情景\"><a class=\"anchor\" href=\"#context-情景\">#</a> Context 情景</h2>\n<dl>\n<dt>Definition:</dt>\n<dd>The interrelated conditions within which something occurs or exists<br />\nsth 发生或存在相关的条件</dd>\n</dl>\n<ul>\n<li>\n<p>Understand work in its natural environment 真实环境中的工作</p>\n<ul>\n<li>Go to the user 基于用户</li>\n<li>Observe real work 观察实际工作</li>\n<li>Use real examples and artifacts 使用真实的例子和产品<br />\n &quot;Artifact&quot;: An object created by human workmanship 由人工制作的对象</li>\n<li>Interview while she/he is working 工作期间的面谈</li>\n<li>More reliable than asking them 比提问更有效</li>\n</ul>\n</li>\n<li>\n<p>Context exists even when not a &quot;work&quot; activity</p>\n<ul>\n<li>Use &quot;work&quot; here just to mean &quot;doing something&quot;</li>\n<li>Can be home, entertainment, etc.</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"context-elements-情景元素\"><a class=\"anchor\" href=\"#context-elements-情景元素\">#</a> Context Elements 情景元素</h2>\n<ul>\n<li>User's work space 用户的工作空间</li>\n<li>User's work 用户的工作内容</li>\n<li>User's workarounds 用户的解决方法</li>\n<li>User's work intentions 用户的工作意图</li>\n<li>User's words (language used) 用户的文字（使用的语言）</li>\n<li>Tools used 使用的工具</li>\n<li>How people work together 人们如何一起工作</li>\n<li>Business goals 业务目标</li>\n<li>Organizational and cultural structure 组织文化结构</li>\n</ul>\n<h2 id=\"why-context\"><a class=\"anchor\" href=\"#why-context\">#</a> Why Context</h2>\n<ul>\n<li>\n<p>Design complete work process 设计完整的工作流程</p>\n<ul>\n<li>Fits into &quot;fabric&quot; of entire operations<br />\n 适合整个运营的 &quot;结构&quot;</li>\n<li>Not just &quot;point solutions&quot; to specific problems<br />\n 不仅仅是针对特定问题的 &quot;解决方案&quot;</li>\n</ul>\n</li>\n<li>\n<p>Integration! 整合</p>\n<ul>\n<li>Consistency, effectiveness, efficiency, coherent<br />\n 一致性，有效性，效率，连贯性</li>\n</ul>\n</li>\n<li>\n<p>Design from data 根据数据进行设计</p>\n<ul>\n<li>Not just opinions, negotiation<br />\n 不只是意见，谈判</li>\n<li>Not just a list of features<br />\n 不只是功能列表</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"ci-difference\"><a class=\"anchor\" href=\"#ci-difference\">#</a> CI Difference</h2>\n<table>\n<tbody>\n<tr>\n<td>\n<p>Interviews, Surveys, Focus Groups<br />\n 访谈，调查，焦点小组</p>\n</td>\n<td>\n<p>Contextual Inquiry<br />\n 情境访谈</p>\n</td>\n</tr>\n<tr>\n<td>\n<p>Summary data &amp; abstractions<br />\n 摘要数据和抽象</p>\n</td>\n<td>\n<p>Ongoing experience &amp; concrete data<br />\n 持续的经验和具体数据</p>\n</td>\n</tr>\n<tr>\n<td>\n<p>What customers <strong>say</strong><br />\n 客户怎么说</p>\n</td>\n<td>\n<p>What users <strong>do</strong><br />\n 用户做什么</p>\n</td>\n</tr>\n<tr>\n<td>\n<p><strong>Subjective</strong><br />\n 主观</p>\n</td>\n<td>\n<p><strong>Objective</strong><br />\n 客观</p>\n</td>\n</tr>\n<tr>\n<td>\n<p>Limited by reliability of human memory<br />\n 受人类记忆可靠性的限制</p>\n</td>\n<td>\n<p>Spontaneous, as it happens<br />\n 自发发生</p>\n</td>\n</tr>\n<tr>\n<td>\n<p>What customers <strong>think</strong> they want<br />\n 客户认为他们想要什么</p>\n</td>\n<td>\n<p>What users actually <strong>need</strong><br />\n 用户实际需要什么</p>\n</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"ci-quick-review-video\"><a class=\"anchor\" href=\"#ci-quick-review-video\">#</a> CI Quick Review Video</h2>\n<p>Contextual inquiry can be considered as three parts.<br />\n 情境访谈可以分为三个部分。</p>\n<ol>\n<li>\n<p>The first is identifying the users.<br />\n 首先是识别用户。</p>\n<p>Trust the identifying users' your goal should be to visit enough of the right people together, quality data without being swamped.<br />\n 你的目标应该是访问足够多的合适的人，高质量的数据不被淹没。<br />\nEvery project is different.<br />\nBut my rule of thumb is to visit around six people and at least two from each significantly different user group.<br />\n 我的经验是访问大约六个人，每个明显不同的用户组至少有两个人。\t<br />\nYou also need to consider budget as the rule of thumb. Visiting six people will probably take two or three days of planning and organizing, three days for the visits and two or three days of analysis.<br />\n 你还需要考虑预算。拜访六个人可能需要 2-3 天的计划和组织，\t3 天的访问，和 2-3 天的分析。\t<br />\nIt's time well spent, but it's a considerable undertaking. Squeezing your timeframe may be a false economy.<br />\n 这很花时间，但这是一项相当大的任务。压缩你的时间可能是一种错误的节约。</p>\n</li>\n<li>\n<p>The second is scheduling and conducting visits.<br />\n 第二是安排和进行访问。</p>\n<p>Don't underestimate the effort and scheduling. Some people may be reluctant to commit too much time, so make sure you clearly communicate the benefits.<br />\n 不要低估努力和时间安排。有些人可能不愿意花太多时间，所以要确保你清楚地传达了好处。<br />\nGenerally, when our visit is likely to be acceptable, particularly if people understand what you were doing and make their life. But always let users know what to expect, that is that you want to observe them carrying out their regular to absence, prepare materials such as consent forms, questionnaires, and scripts in advance, and make sure any recording equipment is working.<br />\n 一般来说，我们的访问可能是可以接受的，特别是如果人们理解你在做什么，并改善他们的生活。但是要让用户知道期望什么，就是你要观察他们通常缺少什么，提前准备好同意书、问卷和脚本等材料，确保所有录音设备都正常工作。<br />\nTake a colleague with you on the visits to discuss your observations and put their implications. Or take someone who, again, value from visiting users, a business person, or develop perhaps,<br />\n 带一位同事与你一起访问，讨论观察结果，记录他们的影响。或者带上那些重视访问用户、业务人员或开发人员的人。<br />\nLimit visits to two per day. This gives you time to write up your notes and assimilate, learn, take detailed notes and sketches, and write them up as soon as possible after each visit<br />\n 将访问限制为每天两次。这让你有时间写笔记，吸收，学习，做详细的笔记和草图，并在每次就诊后尽快写下来。<br />\nyou know should contain what you saw, what was said, what was done, what artifacts were used on interruptions occurred.<br />\n 应该包含你所看到的，说了什么，做了什么，在发生中断时使用了什么工件。</p>\n</li>\n<li>\n<p>Finally, we come to analyzing the data.<br />\n 最后，我们来分析数据。<br />\nFor small projects, you might be able to use spreadsheet or do a card sport. That's my preferred approach.<br />\n 对于小型项目，您可以使用电子表格或进行卡片运动。这是我首选的方法。<br />\nFor large data sets. It's news programs such as NVIVO or dedoose, although these are the steep learning curve,  optimal workshops, new tool Reframer, or maybe worth checking out.<br />\n 对于大型数据，一些新的项目，如 NVIVO or dedoose，虽然这些都是陡峭的学习曲线，最佳研讨会，新的工具 Reframer，或许可能值得一看。<br />\nYou may want to create persona. As for scenario to communicate what you found, you may need to create a service man for service blueprint if you work in more effort projects. The main thing is to ensure that the data you gathered his mind for your immediate needs communicates well to stakeholders and has retained for future reuse. However you end up with the key is to get out and spend time with users.<br />\n 您可能想要创建角色。如果您在更多的项目中工作，为了传达所发现的内容方案，您可能需要为服务蓝图创建一个服务人员。主要是确保您为您的即时需求而收集的数据，能够很好地与利益相关者沟通，并保留下来，供将来重用。然而，你最终得到的关键是走出去，花时间与用户在一起。<br />\nIf you do this with an inquiring and flexible mind, you'll reap many benefits. And your designs will be all the better for your effort.<br />\n 如果你带着一颗好奇和灵活的心去做这件事，你会得到很多好处。你的努力会让你的设计变得更好。</p>\n</li>\n</ol>\n<p><img data-src=\"https://i.loli.net/2020/09/23/atlJXUhsBT2d36z.png\" alt=\"CI Quick Review\" /></p>\n<h2 id=\"who\"><a class=\"anchor\" href=\"#who\">#</a> Who?</h2>\n<h3 id=\"users\"><a class=\"anchor\" href=\"#users\">#</a> Users</h3>\n<ul>\n<li>Between 6–20<br />\n6-20 个用户</li>\n<li>Representative of different roles<br />\n 代表不同的角色</li>\n</ul>\n<blockquote>\n<p>Note: may not be people who will be doing the purchasing of the system<br />\nE.g., if for an enterprise; public kiosk</p>\n</blockquote>\n<h3 id=\"interviewers\"><a class=\"anchor\" href=\"#interviewers\">#</a> Interviewers</h3>\n<p>&quot;Cross-functional&quot; team<br />\n 采访者：跨职能团队</p>\n<ul>\n<li>Designers 设计师</li>\n<li>UI specialists UI 专家</li>\n<li>Product managers 产品经理</li>\n<li>Marketing 销售</li>\n<li>Technical people 技术人员</li>\n</ul>\n<h2 id=\"partnership-合作关系\"><a class=\"anchor\" href=\"#partnership-合作关系\">#</a> Partnership 合作关系</h2>\n<p>The whole approach to this study is that establishing of course sort of like a partnership.<br />\n 这项研究的整个方法是建立一种伙伴关系。</p>\n<p><img data-src=\"https://i.loli.net/2020/09/23/5m6x2f73kuNIhtv.jpg\" alt=\"Partnership\" /></p>\n<dl>\n<dt>Definition:</dt>\n<dd>A relationship characterized by close cooperation 紧密合作的关系</dd>\n</dl>\n<ul>\n<li>Build an equitable relationship with the user 与用户建立公平的关系</li>\n<li>Suspend your assumptions and beliefs 暂停你的假设和信念</li>\n<li>Invite the user into the inquiry process 邀请用户参加调查流程</li>\n</ul>\n<h3 id=\"why-are-partnerships-important\"><a class=\"anchor\" href=\"#why-are-partnerships-important\">#</a> Why are Partnerships Important?</h3>\n<ul>\n<li>\n<p>Information is obtained through a <em>dialog</em><br />\n 通过 <em>对话</em> 获取信息</p>\n</li>\n<li>\n<p>The user is the <em>expert</em>.<br />\n 用户是 <em>专家</em></p>\n</li>\n<li>\n<p>Not a conventional interview or consultant relationship<br />\n 不是常规的采访或顾问关系</p>\n</li>\n<li>\n<p>Alternative way to view the relationship: <span class=\"orange\">Master/Apprentice</span><br />\n 查看关系的另一种方法：师徒</p>\n<ul>\n<li>The user is the &quot;master craftsman&quot; at his/her work<br />\n 用户是其工作中的 &quot;大师级工匠&quot;</li>\n<li>You are the apprentice trying to learn<br />\n 你是尝试学习的学徒</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"establishing-partnership-建立合作关系\"><a class=\"anchor\" href=\"#establishing-partnership-建立合作关系\">#</a> Establishing Partnership 建立合作关系</h3>\n<ul>\n<li>Share control 分享控制</li>\n<li>Use open-ended questions that invite users to talk:<br />\n 使用邀请用户交谈的开放式问题\n<ul>\n<li>&quot;What are you doing?&quot;<br />\n 你在做什么</li>\n<li>&quot;Is that what you expect?&quot;<br />\n 这是你期望的吗</li>\n<li>&quot;Why are you doing...?&quot;<br />\n 你为什么要做...</li>\n</ul>\n</li>\n<li>Let the user lead the conversation<br />\n 让用户主持对话</li>\n<li>Listen!<br />\n 倾听</li>\n<li>Pay attention to communication that is non-verbal<br />\n 注意非语言的交流</li>\n</ul>\n<h2 id=\"recording-and-noting-记录\"><a class=\"anchor\" href=\"#recording-and-noting-记录\">#</a> Recording and Noting 记录</h2>\n<h3 id=\"do-record-interview\"><a class=\"anchor\" href=\"#do-record-interview\">#</a> Do record interview</h3>\n<ul>\n<li>Video recordings 录像</li>\n<li>Screen capture software with laptop microphone for user<br />\n 带有麦克风的屏幕捕获软件</li>\n</ul>\n<h3 id=\"when-to-take-notes\"><a class=\"anchor\" href=\"#when-to-take-notes\">#</a> When to take notes?</h3>\n<ul>\n<li>Note taking can help you pay closer attention 帮助提高注意力</li>\n<li>Notes lead to faster turn-around 加快周转速度</li>\n<li>Do not let it interfere with interviewing 不要让记笔记干扰采访<br />\n Usually would use a second person 笔记通常由另一个人记录</li>\n</ul>\n<h3 id=\"how-to-record\"><a class=\"anchor\" href=\"#how-to-record\">#</a> How to record?</h3>\n<ul>\n<li>What the user says – in quotes 用户说的话，用引号引起来</li>\n<li>What the user does – plain text 用户的工作，纯文本</li>\n<li>Your interpretation –in parentheses 你的解释，放在括号中</li>\n<li>Write fast! 快速记录</li>\n</ul>\n<h1 id=\"task-analysis\"><a class=\"anchor\" href=\"#task-analysis\">#</a> Task analysis</h1>\n<h2 id=\"defining-tasks-定义任务\"><a class=\"anchor\" href=\"#defining-tasks-定义任务\">#</a> Defining Tasks 定义任务</h2>\n<ul>\n<li>\n<p>In a real Contextual Inquiry, <em>user</em> decides the tasks<br />\n 用户决定任务<br />\n Investigate real-world tasks, needs, context<br />\n 调查实际任务，需求，情景</p>\n</li>\n<li>\n<p>But you still must decide the <em>focus</em><br />\n 仍然必须确定重点<br />\n What tasks you want to observe that are relevant to your product plan<br />\n 你想要观察的任务，与你的产品计划有关</p>\n</li>\n</ul>\n<h2 id=\"test-tasks-任务测试\"><a class=\"anchor\" href=\"#test-tasks-任务测试\">#</a> Test Tasks 任务测试</h2>\n<ul>\n<li>\n<p>Task design is difficult part of usability testing<br />\n 任务设计是可用性测试中的困难部分</p>\n</li>\n<li>\n<p>Representative of &quot;real&quot; tasks<br />\n 代表 &quot;实际&quot; 任务</p>\n<ul>\n<li>Sufficiently realistic and compelling so users are motivated to finish<br />\n 足够逼真和引人入胜，使用户有动力完成</li>\n<li>Can let users create their own tasks if relevant<br />\n 如果相关，可以让用户创建自己的任务</li>\n</ul>\n</li>\n<li>\n<p>Appropriate difficulty and coverage<br />\n 适当的难度和覆盖范围</p>\n<ul>\n<li>Should last about 2 min.<br />\n 应该持续约 2 分钟。</li>\n<li>for expert, less than 30 min.<br />\n 对于专家，少于 30 分钟。</li>\n<li>for novice Short enough to be finished, but not trivial.<br />\n 对于新手，足够短，可以完成，但不琐碎</li>\n</ul>\n</li>\n<li>\n<p>Tasks nothumorous, frivolous, or offensive<br />\n 任务不幽默，轻浮或令人反感</p>\n</li>\n<li>\n<p>Easy task first, progressively harder<br />\n 轻松完成任务，逐步提高难度</p>\n<ul>\n<li>But better if independent<br />\n 但如果独立则更好</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>Remember: No tasking their opinions.<br />\n 没有要求他们发表意见。</p>\n</blockquote>\n<h1 id=\"personas-角色\"><a class=\"anchor\" href=\"#personas-角色\">#</a> Personas 角色</h1>\n<ul>\n<li>Popularized by Alan Cooper 由这个人推广的一种方法</li>\n<li>User archetype you can use to help guide design decisions<br />\n 是一种用户原型，可以用来帮助指导设计决策</li>\n<li>Created after contextual inquiry or equivalent<br />\n 在情境访谈后创建</li>\n<li>Summarizes properties of a group of users<br />\n 汇总一组用户的属性</li>\n<li>Use: helps keep designers &amp; implementers focused on user needs.<br />\n 使用：帮助使设计师和实施者专注于用户需求。</li>\n<li>Include: behavior patterns, goals, skills, attitudes, and environment, with a few fictional personal details to bring the persona to life<br />\n 包括：行为模式、目标、技能、态度和环境，以及一些虚构的个人详细信息，使人物形象栩栩如生</li>\n<li>Have a small number for each product<br />\n 每个产品都有少量\n<ul>\n<li>One for each important group of users<br />\n 每个重要用户组一个</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"user-persona\"><a class=\"anchor\" href=\"#user-persona\">#</a> User + Persona</h2>\n<ul>\n<li>Description of user and what user wishes to do<br />\n 用户说明以及用户希望做什么</li>\n<li>Be specific/detailed, even give names and picture<br />\n 要具体 / 详细，甚至给出名字和图片</li>\n<li>Three personas for ATM usage follow<br />\n 使用 ATM 的三个角色\n<ul>\n<li>Adapted from User Interface Design and Evaluation<br />\n 改编自用户界面设计和评估</li>\n<li>The Open University<br />\n 开放大学</li>\n</ul>\n</li>\n<li>Developed by Cooper (1999)<br />\n 库珀开发（1999）</li>\n</ul>\n<h3 id=\"felix-teenage-atm-user\"><a class=\"anchor\" href=\"#felix-teenage-atm-user\">#</a> Felix – Teenage ATM User</h3>\n<p>Felix is 13 and gets pocket money each week. He spends it with his friends, so doesn't make regular deposits. He does receive gifts for his birthday, Christmas, etc. and saves that money for special purchases, such as a computer games console or trendy clothes. He has an ATM card allowing him make withdrawals when needed for his purchases.</p>\n<h3 id=\"sandra-young-adult\"><a class=\"anchor\" href=\"#sandra-young-adult\">#</a> Sandra – Young Adult</h3>\n<p>Sandra is 30, is married to Jason, has two children Todd(6) and Carly Carly (18 months). They live in a subdivision that is about three miles from the town center, where the bank and stores are located. Jason uses the car for work, and works long hours, leaving at 6:45 am and returning at 8:00 pm. Sandra does not drive, so has to use public transportation. She tries to run errands and shop while Todd is in school, so she only has to take Carly to town with her. She typically needs to make two trips to town each week to get everything done. She uses a stroller with Carly, and the bank is one flight up via escalator, so she prefers to use the ATM outside the first floor, even though there is no canopy to protect customers from bad weather.</p>\n<h3 id=\"marvin-middle-ageto-senior\"><a class=\"anchor\" href=\"#marvin-middle-ageto-senior\">#</a> Marvin – Middle Ageto Senior</h3>\n<p>Marvin is 68 years old, and his social security is deposited into his bank account at the start of each month. He goes to the bank every week, withdrawing enough cash for the week for miscellaneous expenditure. Regular bills are paid by check.<br />\nHe stands in line for a live teller, as he prefers the social interaction to using an ATM, even though his new artificial hip makes standing in line uncomfortable. He does not have an<br />\nATM card.</p>\n<h2 id=\"initial-questions-起始问题\"><a class=\"anchor\" href=\"#initial-questions-起始问题\">#</a> Initial Questions 起始问题</h2>\n<p>First, assure the users that <span class=\"orange\">not testing them</span><br />\n 确保用户未对其进行测试</p>\n<ul>\n<li>You are testing the product, and you want to find problems<br />\n 您正在测试产品，并且想要查找问题</li>\n</ul>\n<p>Find out the <span class=\"orange\">context</span> through initial questions<br />\n 通过最初的问题找出背景</p>\n<ul>\n<li>\n<p><span class=\"orange\">When</span> would you normally do this kind of task?<br />\n 你通常在何时执行此类任务？</p>\n</li>\n<li>\n<p><span class=\"orange\">Who</span> would be involved in making the decisions?<br />\n 谁将参与决策？</p>\n</li>\n<li>\n<p><span class=\"orange\">What</span> would influence any decisions?<br />\n 什么会影响任何决定？</p>\n</li>\n<li>\n<p>How would you know what to do?<br />\n 你如何知道该怎么办？</p>\n<ul>\n<li>What <span class=\"orange\">information</span> would you use to help decide?<br />\n 您将使用哪些信息来帮助做出决定？</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"test-scripts-测试脚本\"><a class=\"anchor\" href=\"#test-scripts-测试脚本\">#</a> Test Scripts 测试脚本</h2>\n<ul>\n<li>\n<p>Useful to have a script<br />\n 有用的脚本</p>\n<ul>\n<li>Make sure say everything you want<br />\n 确保说出所有想要的内容</li>\n<li>Make sure all users get same instructions<br />\n 确保所有用户都获得相同的说明</li>\n</ul>\n</li>\n<li>\n<p>Should read instructions out loud<br />\n 应该大声朗读说明</p>\n<ul>\n<li>Ask if users have any questions<br />\n 询问用户是否有任何问题</li>\n</ul>\n</li>\n<li>\n<p>Make sure instructions provide goals only in a general way, and doesn't give away information<br />\n 确保说明仅通过一般的方式，不会泄露信息</p>\n<ul>\n<li>Describe the resultand not the steps<br />\n 描述结果而不是步骤</li>\n<li>Avoid product names and technical terms that appear on the web site<br />\n 避免在网站上出现产品名称和技术术语\n<ul>\n<li>Don't give away the vocabulary<br />\n 不要放弃词汇量</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>Example:<br />\n&quot;The clock should have the right time&quot;;<br />\n 时钟应有正确的时间<br />\n not: &quot;Use the hours and minutes buttons to set the time&quot;<br />\n 使用小时和分钟按钮设置时间</p>\n</li>\n</ul>\n<h2 id=\"alternative-to-ci-ci的替代方法\"><a class=\"anchor\" href=\"#alternative-to-ci-ci的替代方法\">#</a> Alternative to CI CI 的替代方法</h2>\n<ul>\n<li>\n<p>For intermittent tasks<br />\n 对于间歇性任务</p>\n<ul>\n<li>In-context cued recall<br />\n 根据情景提示召回</li>\n<li>Activity logs<br />\n 活动日志</li>\n</ul>\n</li>\n<li>\n<p>For uninterruptible tasks<br />\n 对于不间断的任务</p>\n<ul>\n<li>Post-observation inquiry<br />\n 观察后查询</li>\n</ul>\n</li>\n<li>\n<p>For extremely long or multi-person tasks<br />\n 对于极长或多人的任务</p>\n<ul>\n<li>Artifact walkthrough<br />\n 神器演练</li>\n</ul>\n</li>\n<li>\n<p>New technology within current work<br />\n 当前工作中的新技术</p>\n<ul>\n<li>Future Scenario<br />\n 未来场景</li>\n</ul>\n</li>\n<li>\n<p>Prototype or prior version exists<br />\n 存在原型或先前版本</p>\n<ul>\n<li>Prototype/Test drive<br />\n 原型 / 试驾</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"ci-example-from-cmu\"><a class=\"anchor\" href=\"#ci-example-from-cmu\">#</a> CI Example from CMU</h1>\n<p>电子商务站点的示例会话</p>\n<p>Issues to observe<br />\n 要注意的问题</p>\n<ul>\n<li>Interview of work in progress, in &quot;context&quot;<br />\n 在 “情景” 中采访正在进行的工作</li>\n<li>Actual session of doing a task<br />\n 执行任务的实际时间\n<ul>\n<li>Not an interview asking about possible tasks, etc.<br />\n 不要在采访中询问可能的任务，等。</li>\n<li>Note that focusing on expert behavior &amp; breakdowns<br />\n 请注意，关注专家 行为和故障</li>\n</ul>\n</li>\n<li>Questions to clarify about routine, motivations<br />\n 要澄清有关日常活动，动机的问题\n<ul>\n<li>Why do certain actions: need intentfor actions<br />\n 为什么要采取某些行动：需要采取行动的意图</li>\n<li>Notice problems (&quot;breakdowns&quot;)<br />\n 注意问题（“故障”）</li>\n</ul>\n</li>\n<li>Notice what happens that causes users to do something (&quot;triggers&quot;)<br />\n 注意会导致用户采取行动的情况（“触发器”）\n<ul>\n<li>E.g. appearance of error messages, other feedback, external events (phone ringing), etc.<br />\n 例如错误消息的出现，其他反馈，外部事件（电话响铃）等</li>\n</ul>\n</li>\n</ul>\n",
            "tags": [
                "计算机科学",
                "Master of Software Engineering",
                "ITMD 534. Human Computer Interaction",
                "人机交互"
            ]
        },
        {
            "id": "https://shoka.lostyu.me/computer-science/mse/itmd-510/week-4/",
            "url": "https://shoka.lostyu.me/computer-science/mse/itmd-510/week-4/",
            "title": "Week 4. Arrays and the ArrayList Class",
            "date_published": "2020-09-16T12:52:15.000Z",
            "content_html": "<h1 id=\"notes\"><a class=\"anchor\" href=\"#notes\">#</a> Notes</h1>\n<p>Make use of methods to implement arrays. Arrays can be passed into parameter list and can be returned in the method block.<br />\n 利用方法实现数组。 数组可以传递到参数列表中，并可以在方法块中返回。<br />\nEx.</p>\n<ol>\n<li>Create array 创建数组</li>\n<li>Print array 打印数组</li>\n<li>Sort array (swapping elements by position) 对数组排序（按位置交换元素）</li>\n<li>Search array 搜索数组</li>\n<li>Highest value in array 数组中的最大值</li>\n<li>Lowest value in array 数组中的最小值</li>\n<li>Remove item (s) from array 从数组中删除元素</li>\n<li>Update item (s) from array 从数组更新元素</li>\n</ol>\n<h2 id=\"arrays-vs-arraylists-intro\"><a class=\"anchor\" href=\"#arrays-vs-arraylists-intro\">#</a> Arrays vs ArrayLists intro</h2>\n<p>A challenge – merge two arrays together!<br />\nHave method to take in two arrays and return the merged array in sorted order.<br />\n 将两个数组合并在一起！<br />\n想办法接受两个数组，并按顺序合并数组。</p>\n<h3 id=\"method-1\"><a class=\"anchor\" href=\"#method-1\">#</a> Method 1</h3>\n<pre class=\"info\"><code>Check sizes of each array ( arrays X and Y )\nSet size of new array to be merged ( array M )\nLoop thru each array based on length of each array\nTrack current position of merged array M\nStore each array value into new array M \nReturn array M</code></pre><figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token function\">mergeArray</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>arrayX<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>arrayY<span class=\"token punctuation\">)</span>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token comment\">//  The size of the new array will be the sum of arrayX and arrayY sizes</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arrayM <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span>arrayX<span class=\"token punctuation\">.</span>length <span class=\"token operator\">+</span> arrayY<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> currentPos <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token comment\">//  Loop 1</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">&lt;</span> arrayX<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>           arrayM<span class=\"token punctuation\">[</span>currentPos<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> arrayX<span class=\"token punctuation\">[</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token comment\">//  loop 2 </span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>         <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">&lt;</span> arrayY<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span>   </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            arrayM<span class=\"token punctuation\">[</span>currentPos<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> arrayY<span class=\"token punctuation\">[</span>j<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">return</span> arrayM<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"method-2\"><a class=\"anchor\" href=\"#method-2\">#</a> Method 2</h3>\n<p>ArrayList use case for merging 2 arrays</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ArrayList</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">//merge two arrays into an ArrayList</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">MyMerge</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> args<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> a <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Simple Array of integers 1 thru 4</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> b <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Simple Array of integers 5 thru 10</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token comment\">// Use dynamic Array list to hold merge of a and b 1 thru 10</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> arrMerge <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> a<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// Loop thru array a and merge all items in a</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            arrMerge<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> b<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// Loop thru array b and merge all items from b</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            arrMerge<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>arrMerge<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Print Contents of final merged array</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><blockquote>\n<p>Result:<br />\n <code>[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]</code></p>\n</blockquote>\n<h2 id=\"sort-search\"><a class=\"anchor\" href=\"#sort-search\">#</a> sort &amp; search</h2>\n<p>Java built in methods can do the trick!</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token operator\">*</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> bSearch2 <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">int</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>myArray<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span>myArray<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">int</span> result <span class=\"token operator\">=</span> <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">binarySearch</span><span class=\"token punctuation\">(</span>myArray<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>result <span class=\"token operator\">>=</span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> <span class=\"token string\">\"Is found \"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"Is not found \"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                     <span class=\"token string\">\" \\nfound at position \"</span> <span class=\"token operator\">+</span> result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>Bsearch trace revisited follows…<br />\n<img data-src=\"https://i.loli.net/2020/09/24/InyO9YFPSkh8Wvc.png\" alt=\"\" /></p>\n<h3 id=\"optimizing-code\"><a class=\"anchor\" href=\"#optimizing-code\">#</a> Optimizing code</h3>\n<p>Finding the next best value in array <em>if present</em>!</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// classic case – BUT include next best value if Key is not present or found.</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">BSearch</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> <span class=\"token function\">bs</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> key<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">int</span> lo <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">int</span> hi <span class=\"token operator\">=</span> a<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">int</span> mid<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>lo <span class=\"token operator\">&lt;=</span> hi<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token comment\">// Key is in a[lo..hi] or not present.</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            mid <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>hi <span class=\"token operator\">+</span> lo<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>key <span class=\"token operator\">&lt;</span> a<span class=\"token punctuation\">[</span>mid<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> hi <span class=\"token operator\">=</span> mid <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>key <span class=\"token operator\">></span> a<span class=\"token punctuation\">[</span>mid<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> lo <span class=\"token operator\">=</span> mid <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token keyword\">else</span> <span class=\"token keyword\">return</span> mid<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">return</span> lo<span class=\"token operator\">==</span>hi <span class=\"token operator\">?</span> mid <span class=\"token operator\">:</span> hi <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>         </pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">int</span> arr <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">12</span><span class=\"token punctuation\">,</span><span class=\"token number\">16</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token comment\">//sort the array</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span> <span class=\"token function\">bs</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//search for key item 2 from list </span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">abs</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"split-function-working-in-conjunction-with-an-array\"><a class=\"anchor\" href=\"#split-function-working-in-conjunction-with-an-array\">#</a> Split function working in conjunction with an array</h2>\n<p>拆分函数与数组结合使用</p>\n<p>The string  <code>split()</code>  method breaks a given string (&quot;tokenizes&quot;) around matches of the given regular expression.</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">String</span> line <span class=\"token operator\">=</span> <span class=\"token string\">\"a,b,c\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\">String</span> splitter<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> line<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\",\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// traverse data</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">// traditional loop</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> splitter<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>splitter<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">// or use for enhanced or \"for each\" loop</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> sObj <span class=\"token operator\">:</span> splitter<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>sObj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><blockquote>\n<p>Result:<br />\n 结果均为</p>\n<pre class=\"info\"><code>a\nb\nc</code></pre></blockquote>\n<h1 id=\"lab\"><a class=\"anchor\" href=\"#lab\">#</a> Lab</h1>\n<ul>\n<li>\n<p>PROJECT<br />\nBank record generations</p>\n</li>\n<li>\n<p>Objective<br />\nTo write a program that parses and processes bank data from a file.</p>\n</li>\n</ul>\n<h2 id=\"project-description\"><a class=\"anchor\" href=\"#project-description\">#</a> PROJECT DESCRIPTION</h2>\n<p>Bank of IIT has gotten their hands on some interesting data which will allow for possible loans to various clients from various regions.</p>\n<p>Accompanying the labs specs is a csv (comma separated value) file named<br />\n <code>bank-Detail.csv</code>  which contains valuable raw data to allow the bank to process loans based on client details from the file.</p>\n<p>You need to parse the data and print record data for future loan considerations.</p>\n<h2 id=\"project-details\"><a class=\"anchor\" href=\"#project-details\">#</a> Project Details</h2>\n<ol>\n<li>\n<p>Create an abstract class called  <code>Client.java</code>  to allow for three abstract methods the bank needs to process. Name your methods  <code>readData()</code> ,  <code>processData()</code>  and  <code>printData()</code> . No arguments are needed for your methods.</p>\n</li>\n<li>\n<p>Create a  <code>BankRecords.java</code>  file which will utilize the Client asbtract methods and generate ultimately the client records from the csv file.</p>\n<p>The client file has the following header information</p>\n<pre class=\"info\"><code>id &#123;string&#125; \nage &#123;numeric&#125;\nsex &#123;FEMALE,MALE&#125;\nregion &#123;INNER_CITY,TOWN,RURAL,SUBURBAN&#125;\nincome &#123;numeric&#125;\nmarried &#123;NO,YES&#125;\nchildren &#123;0,1,2,3&#125;\ncar &#123;NO,YES&#125;\nsave_act &#123;NO,YES&#125;\ncurrent_act &#123;NO,YES&#125;\nmortgage &#123;NO,YES&#125;\npep &#123;YES,NO&#125;</code></pre><p>Create instance fields with appropriate data types for each header item above in your class. Include getter and setters for each instance field.</p>\n</li>\n<li>\n<p>Include code definitions for each method declared in your Client class as follows</p>\n<ul>\n<li>Your  <code>readData()</code>  method should read in all the record data from the csv file in your path into an ArrayList.</li>\n<li>Your  <code>processData()</code>  method should take all the record data from your ArrayList and add the data into each of your instance fields via your setters. Use an array of objects to store record data for each instance field.</li>\n<li>Your  <code>printData()</code>  method should print the first 25 records for various fields to the console via your getters. Print records for the following fields:  <code>ID</code> ,  <code>AGE</code> ,  <code>SEX</code> ,  <code>REGION</code> ,  <code>INCOME</code> , and  <code>MORTGAGE</code> .</li>\n</ul>\n</li>\n<li>\n<p>Include headings in your print detail.Printing record detail should be in a neat columnar style format.</p>\n</li>\n</ol>\n<blockquote>\n<p>Make sure to include a try catch block when reading any file!<br />\nInclude also proper exception handling.<br />\nInclude your project’s entire source code/csv file into a zip file, and in a separate Word file, your output snapshot/program description/source code as well.</p>\n</blockquote>\n<h2 id=\"objectives\"><a class=\"anchor\" href=\"#objectives\">#</a> Objectives</h2>\n<h3 id=\"uml-design-of-classes\"><a class=\"anchor\" href=\"#uml-design-of-classes\">#</a> UML Design of classes</h3>\n<pre class=\"mermaid\"><svg id=\"mermaid-1601977047990\" width=\"100%\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" height=\"405\" style=\"max-width: 260.6875px;\" viewBox=\"-20 -20 260.6875 405\"><g></g><defs><marker id=\"extensionStart\" class=\"extension\" refX=\"0\" refY=\"7\" markerWidth=\"190\" markerHeight=\"240\" orient=\"auto\"><path d=\"M 1,7 L18,13 V 1 Z\"></path></marker></defs><defs><marker id=\"extensionEnd\" refX=\"19\" refY=\"7\" markerWidth=\"20\" markerHeight=\"28\" orient=\"auto\"><path d=\"M 1,1 V 13 L18,7 Z\"></path></marker></defs><defs><marker id=\"compositionStart\" class=\"extension\" refX=\"0\" refY=\"7\" markerWidth=\"190\" markerHeight=\"240\" orient=\"auto\"><path d=\"M 18,7 L9,13 L1,7 L9,1 Z\"></path></marker></defs><defs><marker id=\"compositionEnd\" refX=\"19\" refY=\"7\" markerWidth=\"20\" markerHeight=\"28\" orient=\"auto\"><path d=\"M 18,7 L9,13 L1,7 L9,1 Z\"></path></marker></defs><defs><marker id=\"aggregationStart\" class=\"extension\" refX=\"0\" refY=\"7\" markerWidth=\"190\" markerHeight=\"240\" orient=\"auto\"><path d=\"M 18,7 L9,13 L1,7 L9,1 Z\"></path></marker></defs><defs><marker id=\"aggregationEnd\" refX=\"19\" refY=\"7\" markerWidth=\"20\" markerHeight=\"28\" orient=\"auto\"><path d=\"M 18,7 L9,13 L1,7 L9,1 Z\"></path></marker></defs><defs><marker id=\"dependencyStart\" class=\"extension\" refX=\"0\" refY=\"7\" markerWidth=\"190\" markerHeight=\"240\" orient=\"auto\"><path d=\"M 5,7 L9,13 L1,7 L9,1 Z\"></path></marker></defs><defs><marker id=\"dependencyEnd\" refX=\"19\" refY=\"7\" markerWidth=\"20\" markerHeight=\"28\" orient=\"auto\"><path d=\"M 18,7 L9,13 L14,7 L9,1 Z\"></path></marker></defs><g id=\"classid-BankRecords-0\" class=\"classGroup\" transform=\"translate(34.84375,0 )\"><rect x=\"0\" y=\"0\" width=\"147.59375\" height=\"248\" class=\" \"></rect><text y=\"15\" x=\"0\"><tspan class=\"title\" x=\"43.609375\">BankRecords</tspan></text><line x1=\"0\" y1=\"21\" y2=\"21\" x2=\"147.59375\"></line><text x=\"5\" y=\"31\" fill=\"white\" class=\"classText\"><tspan x=\"5\">new BankRecords</tspan><tspan x=\"5\" dy=\"10\">array: ArrayList&lt;List&lt;String&gt;&gt;</tspan><tspan x=\"5\" dy=\"10\">-id:string</tspan><tspan x=\"5\" dy=\"10\">-age:int</tspan><tspan x=\"5\" dy=\"10\">-sex:String</tspan><tspan x=\"5\" dy=\"10\">-region:String</tspan><tspan x=\"5\" dy=\"10\">-income:double</tspan><tspan x=\"5\" dy=\"10\">-married:String</tspan><tspan x=\"5\" dy=\"10\">-children:int</tspan><tspan x=\"5\" dy=\"10\">-car:String</tspan><tspan x=\"5\" dy=\"10\">-save_act:String</tspan><tspan x=\"5\" dy=\"10\">-current_act:String</tspan><tspan x=\"5\" dy=\"10\">-mortgage:String</tspan><tspan x=\"5\" dy=\"10\">-pep:String</tspan></text><line x1=\"0\" y1=\"167\" y2=\"167\" x2=\"147.59375\"></line><text x=\"5\" y=\"182\" fill=\"white\" class=\"classText\"><tspan x=\"5\">+getId()</tspan><tspan x=\"5\" dy=\"10\">+getAge()</tspan><tspan x=\"5\" dy=\"10\">+setId(id:String)</tspan><tspan x=\"5\" dy=\"10\">+setAge(age:int)</tspan><tspan x=\"5\" style=\"font-style:italic;\" dy=\"10\">+readData()</tspan><tspan x=\"5\" style=\"font-style:italic;\" dy=\"10\">+processData()</tspan><tspan x=\"5\" style=\"font-style:italic;\" dy=\"10\">+printData()</tspan></text></g><g id=\"classid-Client-1\" class=\"classGroup\" transform=\"translate(0,298 )\"><rect x=\"0\" y=\"0\" width=\"81.9375\" height=\"67\" class=\" \"></rect><text y=\"15\" x=\"0\"><tspan class=\"title\" x=\"27.1171875\">Client</tspan></text><line x1=\"0\" y1=\"21\" y2=\"21\" x2=\"81.9375\"></line><text x=\"5\" y=\"31\" fill=\"white\" class=\"classText\"></text><line x1=\"0\" y1=\"26\" y2=\"26\" x2=\"81.9375\"></line><text x=\"5\" y=\"41\" fill=\"white\" class=\"classText\"><tspan x=\"5\" style=\"font-style:italic;\">+readData()</tspan><tspan x=\"5\" style=\"font-style:italic;\" dy=\"10\">+processData()</tspan><tspan x=\"5\" style=\"font-style:italic;\" dy=\"10\">+printData()</tspan></text></g><g id=\"classid-BankRecordsTest-2\" class=\"classGroup\" transform=\"translate(131.9375,308 )\"><rect x=\"0\" y=\"0\" width=\"88.75\" height=\"47\" class=\" \"></rect><text y=\"15\" x=\"0\"><tspan class=\"title\" x=\"5\">BankRecordsTest</tspan></text><line x1=\"0\" y1=\"21\" y2=\"21\" x2=\"88.75\"></line><text x=\"5\" y=\"31\" fill=\"white\" class=\"classText\"></text><line x1=\"0\" y1=\"26\" y2=\"26\" x2=\"88.75\"></line><text x=\"5\" y=\"41\" fill=\"white\" class=\"classText\"><tspan x=\"5\">+main()</tspan></text></g><path d=\"M52.32309144295302,248L50.43070120246085,252.16666666666666C48.53831096196868,256.3333333333333,44.753530480984345,264.6666666666667,42.86114024049217,273C40.96875,281.3333333333333,40.96875,289.6666666666667,40.96875,293.8333333333333L40.96875,298\" id=\"edge0\" class=\"relation\" marker-end=\"url(#dependencyEnd)\"></path><path d=\"M164.95815855704697,248L166.85054879753915,252.16666666666666C168.74293903803132,256.3333333333333,172.52771951901568,264.6666666666667,174.42010975950782,274.6666666666667C176.3125,284.6666666666667,176.3125,296.3333333333333,176.3125,302.1666666666667L176.3125,308\" id=\"edge1\" class=\"relation\"></path></svg></pre><ol>\n<li>\n<p><code>Client.java</code>  source setup</p>\n<p>Create class file as abstract</p>\n<p>Include 3 abstract methods <em>inheritable</em> for your BankRecords class.</p>\n<p>Ex. of abstract method.</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">abstract</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Client</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">abstract</span> <span class=\"token keyword\">void</span> <span class=\"token function\">readData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//read file detail</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>       </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\">//finish remaining methods</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></li>\n<li>\n<p><code>BankRecords.java</code>  source setup</p>\n<ul>\n<li>\n<p>Add .csv source file to your project folder<br />\nTake your .csv file and add it to the <ins>root</ins> of your project folder.</p>\n</li>\n<li>\n<p>Create necessary class variables</p>\n</li>\n</ul>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">//setup static objects for IO processing</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">//array of BankRecords objects</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">static</span> <span class=\"token class-name\">BankRecords</span> robjs<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BankRecords</span><span class=\"token punctuation\">[</span><span class=\"token number\">600</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">//arraylist to hold spreadsheet rows &amp; columns</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">static</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">List</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span> array <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">//instance fields</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> id<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> age<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">/*create remaining instance fields with appropriate data types*/</span></pre></td></tr></table></figure><ul>\n<li>Generate getters &amp; setters for ALL your <em>instance</em> fields<br />\nFrom your menu go to Source &gt; Generate Getters and Setters…</li>\n</ul>\n<div class=\"note info\">\n<p>even though we don’t need all getters and setters for this lab, we may need them in subsequent labs!</p>\n</div>\n<ul>\n<li>\n<p>Setup class functions to perform the following tasks</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>Read data from spreadsheet</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">readData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token class-name\">BufferedReader</span> br<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\">//initialize reader object and set file path to root of project</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    br <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BufferedReader</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">FileReader</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">File</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"bank-Detail.csv\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token class-name\">String</span> line<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token comment\">//read each record in csv file</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>line <span class=\"token operator\">=</span> br<span class=\"token punctuation\">.</span><span class=\"token function\">readLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token comment\">//parse each record in csv file by a comma ( , )</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token comment\">//into a list stored in the arraylist-> Arrays</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        array<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">asList</span><span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\",\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token function\">processData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//call function for processing record data</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>Process data from arraylist</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">processData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\">//create index for array while iterating thru arraylist</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">int</span> idx<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\">//create for each loop to cycle thru arraylist of values </span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\">//and PASS that data into your record objects' setters </span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> rowData<span class=\"token operator\">:</span> array<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token comment\">//initialize array of objects</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        robjs<span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BankRecords</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token comment\">//call setters below and populate them, item by item</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        robjs<span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">setId</span><span class=\"token punctuation\">(</span>rowData<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//get 1st column</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        robjs<span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">setAge</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>rowData<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//get 2nd column</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token comment\">/*continue processing arraylist item values into each array object -> robjs[] by index*/</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        idx<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token function\">printData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//call function to print objects held in memory</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>Print data from array</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">printData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>                    </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token comment\">//1. Set appropriate headings for displaying first 25 records</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token comment\">//2. Create for loop and print each record objects instance data </span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token comment\">//3. Within for loop use appropriate formatting techniques to print out record detail  </span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ol>\n<h3 id=\"error-trappings\"><a class=\"anchor\" href=\"#error-trappings\">#</a> Error trappings!</h3>\n<p>Make sure to include appropriate exception handling with try catch blocks for any file being processed.</p>\n<p>*Make use of such runtime exceptions such as FileNotFoundException or other possible exceptions that may occur during the processing of any file(s).</p>\n<h3 id=\"print-formatting-hints\"><a class=\"anchor\" href=\"#print-formatting-hints\">#</a> Print formatting hints</h3>\n<p>Use various print formatting for printing detailed record information especially to make output look professional and columnar like with the format specifier % symbol followed by a converter.</p>\n<p>Popular converters to use include:</p>\n<table>\n<tbody>\n<tr>\n<td><code>%f</code></td>\n<td>float</td>\n</tr>\n<tr>\n<td><code>%d</code></td>\n<td>int</td>\n</tr>\n<tr>\n<td><code>%s</code></td>\n<td>string</td>\n</tr>\n<tr>\n<td><code>%n</code></td>\n<td>newline</td>\n</tr>\n</tbody>\n</table>\n<p>Ex. of an appropriate heading that can be printed may be as follows:</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ID\\t\\tAGE\\t\\tSEX\\t\\tREGION\\t\\tINCOME\\t\\tMORTGAGE\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure>",
            "tags": [
                "计算机科学",
                "Master of Software Engineering",
                "ITMD 510. Object-Oriented App Develop",
                "Java"
            ]
        },
        {
            "id": "https://shoka.lostyu.me/computer-science/mse/itmd-510/week-3/",
            "url": "https://shoka.lostyu.me/computer-science/mse/itmd-510/week-3/",
            "title": "Week 3. Learning about Classes and Objects",
            "date_published": "2020-09-13T01:16:05.000Z",
            "content_html": "<h1 id=\"notes\"><a class=\"anchor\" href=\"#notes\">#</a> Notes</h1>\n<h2 id=\"object-oriented-design\"><a class=\"anchor\" href=\"#object-oriented-design\">#</a> Object Oriented Design</h2>\n<dl>\n<dt>Class</dt>\n<dd>contains fields and methods.</dd>\n<dt>Fields</dt>\n<dd>are <ins>related</ins> items that are stored within an object of the class, and define the object’s state.</dd>\n<dt>Methods</dt>\n<dd>are actions or behaviors that may be performed by an object of the class.</dd>\n</dl>\n<p>When developing an object-oriented application, one of your first tasks is to identify the classes that you will need to create (your domain). Typically, your goal is to identify the different types of real-world objects that are <ins>present</ins> in the problem, and then create classes for those types of objects within your application.</p>\n<p>Over the years, software professionals have developed numerous techniques for finding the classes in a given problem. One simple and popular technique involves the following steps:</p>\n<ol>\n<li>Get a <ins>written description</ins> of the problem domain.</li>\n<li>Identify all the <ins>nouns</ins> (including pronouns and noun phrases) in the description.<br />\nEach of these is a <ins>potential class</ins>.</li>\n<li><span class=\"red\">Refine</span> the list to include only the classes that are <ins>relevant to the problem</ins>.</li>\n</ol>\n<h2 id=\"what-to-include-in-a-class\"><a class=\"anchor\" href=\"#what-to-include-in-a-class\">#</a> What to include in a class?</h2>\n<p>If a noun represents a type of item that would not have any identifiable fields or methods, then it can probably be eliminated from the list. To help determine whether a noun represents an item that would have fields and methods, ask the following questions about it:</p>\n<ul>\n<li>Would you use a group of related values to represent the item’s state?</li>\n<li>Are there any obvious actions to be performed by the item?</li>\n</ul>\n<h2 id=\"example-of-a-problem-domain\"><a class=\"anchor\" href=\"#example-of-a-problem-domain\">#</a> Example of a problem domain</h2>\n<p>Suppose we are programming an application that the manager of Joe’s Automotive Shop will use to print service quotes for customers. Here is a description that an expert, perhaps Joe himself, might have written:</p>\n<pre class=\"info\"><code>Joe’s Automotive Shop services foreign cars, and specializes in servicing cars made by Mercedes, Porsche, and BMW. When a customer brings a car to the shop, the manager gets the customer’s name, address, and telephone number. Then the manager determines the make, model, and year of the car, and gives the customer a service quote. The service quote shows the estimated parts charges, estimated labor charges, sales tax, and total estimated charges.</code></pre><p>The problem domain description should include any of the following:</p>\n<ul>\n<li>Physical objects such vehicles, machines, or products</li>\n<li>Any role played by a person, such as manager, employee, customer, teacher, student, etc</li>\n<li>The results of a business event, such as a customer order, or in this case a service quote</li>\n<li>Recordkeeping items, such as customer histories and payroll record</li>\n</ul>\n<p>Identifying All of the nouns (possible classes!!)</p>\n<p>The next step is to identify all of the nouns and noun phrases. (If the description contains pronouns, include them too.) Here’s another look at the previous problem domain description. This time the nouns and noun phrases appear in bold.</p>\n<blockquote>\n<p><strong>Joe's Automotive Shop</strong> services <strong>foreign cars</strong> , and specializes in servicing <strong>cars</strong> made by <strong>Mercedes</strong> , <strong>Porsche</strong> , and <strong>BMW</strong>. When a <strong>customer</strong> brings a <strong>car</strong> to the <strong>shop</strong> , the <strong>manager</strong> gets the <strong>customer's name</strong> , <strong>address</strong> , and <strong>telephone number</strong>. Then the <strong>manager</strong> determines the <strong>make</strong> , <strong>model</strong> , and <strong>year</strong> of the <strong>car</strong> , and gives the <strong>customer</strong> a <strong>service quote</strong>. The <strong>service quote</strong> shows the <strong>estimated parts charges</strong> , <strong>estimated labor charges</strong> , <strong>sales tax</strong> , and <strong>total estimated charges</strong>.</p>\n</blockquote>\n<p>Notice above that some of the nouns are repeated.</p>\n<p>List now nouns without duplication.  Refine list as well.  Eliminate redundancies. Eliminate possible primitive types.</p>\n<table>\n<tbody>\n<tr>\n<td>address</td>\n<td>foreign cars</td>\n<td>Porsche</td>\n</tr>\n<tr>\n<td>BMW</td>\n<td>Joe's Automotive Shop</td>\n<td>sales tax</td>\n</tr>\n<tr>\n<td>car</td>\n<td>make</td>\n<td>service quote</td>\n</tr>\n<tr>\n<td>cars</td>\n<td>manager</td>\n<td>shop</td>\n</tr>\n<tr>\n<td>customer</td>\n<td>Mercedes</td>\n<td>telephone number</td>\n</tr>\n<tr>\n<td>estimated labor charges</td>\n<td>model</td>\n<td>total estimated charges</td>\n</tr>\n<tr>\n<td>estimated parts charges</td>\n<td>name</td>\n<td>year</td>\n</tr>\n</tbody>\n</table>\n<p>True class attributes!! Needed classes remain as follows…</p>\n<table>\n<tbody>\n<tr>\n<td><s>address</s></td>\n<td><s>foreign cars</s></td>\n<td><s>Porsche</s></td>\n</tr>\n<tr>\n<td><s>BMW</s></td>\n<td><s>Joe's Automotive Shop</s></td>\n<td><s>sales tax</s></td>\n</tr>\n<tr>\n<td><strong class=\"red\">car</strong></td>\n<td><s>make</s></td>\n<td><strong class=\"red\">service quote</strong></td>\n</tr>\n<tr>\n<td><s>cars</s></td>\n<td><s>manager</s></td>\n<td><s>shop</s></td>\n</tr>\n<tr>\n<td><strong class=\"red\">customer</strong></td>\n<td><s>Mercedes</s></td>\n<td><s>telephone number</s></td>\n</tr>\n<tr>\n<td><s>estimated labor charges</s></td>\n<td><s>model</s></td>\n<td><s>total estimated charges</s></td>\n</tr>\n<tr>\n<td><s>estimated parts charges</s></td>\n<td><s>name</s></td>\n<td><s>year</s></td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"review\"><a class=\"anchor\" href=\"#review\">#</a> Review</h1>\n<ol>\n<li class=\"quiz\">\n<p>Methods that operate on an object's fields are called</p>\n<ul class=\"options\">\n<li>Private methods</li>\n<li class=\"correct\">Instance methods</li>\n<li>Instance variables</li>\n<li>Public methods</li>\n</ul>\n</li>\n<li class=\"quiz\">\n<p>A constructor</p>\n<ul class=\"options\">\n<li>Has return type of void</li>\n<li>Always accepts two arguments</li>\n<li>Always has an access specifier of private</li>\n<li class=\"correct\">Has the same name as the class</li>\n</ul>\n</li>\n<li class=\"quiz false\">\n<p>A method that gets a value from a class's field but does not change it is known as a mutator method.</p>\n</li>\n<li class=\"quiz\">\n<p>Given the code below, what is the value of finalAmount when it is displayed?</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Order</span> <span class=\"token punctuation\">&#123;</span>    </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> orderNum<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token keyword\">private</span> <span class=\"token keyword\">double</span> orderAmount<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token keyword\">private</span> <span class=\"token keyword\">double</span> orderDiscount<span class=\"token punctuation\">;</span>    </pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token keyword\">public</span> <span class=\"token class-name\">Order</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> orderNumber<span class=\"token punctuation\">,</span> <span class=\"token keyword\">double</span> orderAmt<span class=\"token punctuation\">,</span><span class=\"token keyword\">double</span> orderDisc<span class=\"token punctuation\">)</span>    <span class=\"token punctuation\">&#123;</span>    </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      orderNum <span class=\"token operator\">=</span> orderNumber<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      orderAmount <span class=\"token operator\">=</span> orderAmt<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      orderDiscount <span class=\"token operator\">=</span> orderDisc<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>   <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">getOrderAmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      <span class=\"token keyword\">return</span> orderAmount<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>   <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">getOrderDisc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>      <span class=\"token keyword\">return</span> orderDiscount<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span>        </pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CustomerOrder</span>    <span class=\"token punctuation\">&#123;</span>        </pre></td></tr><tr><td data-num=\"20\"></td><td><pre>   <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>    </pre></td></tr><tr><td data-num=\"21\"></td><td><pre>      <span class=\"token keyword\">int</span> ordNum <span class=\"token operator\">=</span> <span class=\"token number\">1234</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>      <span class=\"token keyword\">double</span> ordAmount <span class=\"token operator\">=</span> <span class=\"token number\">580.00</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>      <span class=\"token keyword\">double</span> discountPer <span class=\"token operator\">=</span> <span class=\"token number\">.1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>      <span class=\"token class-name\">Order</span> order<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>      <span class=\"token keyword\">double</span> finalAmount <span class=\"token operator\">=</span> order<span class=\"token punctuation\">.</span><span class=\"token function\">getOrderAmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>             order<span class=\"token punctuation\">.</span><span class=\"token function\">getOrderAmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> order<span class=\"token punctuation\">.</span><span class=\"token function\">getOrderDisc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>      <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Final order amount = $\"</span> <span class=\"token operator\">+</span> </pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                         finalAmount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span>    </pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul class=\"options\">\n<li>580.00</li>\n<li>528.00</li>\n<li class=\"correct\">There is no value because the object order has not been created</li>\n<li>There is no value because the constructor has an error</li>\n</ul>\n</li>\n<li class=\"quiz\">\n<p>In UML diagrams, this symbol indicates that a member is private.</p>\n<ul class=\"options\">\n<li><code>#</code></li>\n<li class=\"correct\"><code>-</code> </li>\n<li><code>+</code></li>\n<li><code>\\</code></li>\n</ul>\n</li>\n<li class=\"quiz essay\">\n<p>What is Data Hiding, how why is it important, in other words, why consider it for any instance fields of a class?</p>\n<blockquote>\n<ul>\n<li>What is Data Hiding?<br />\nAllows direct access and any allowed changes to the objects internal data by the class object itself. Create private fields to allow for data hiding.</li>\n<li>how why is it important?<br />\nData hiding is important because classes are typically used as components in large software systems, involving a team of programmers.<br />\nData hiding helps enforce the integrity of an object's internal data.</li>\n</ul>\n</blockquote>\n</li>\n<li class=\"quiz essay\">\n<p>What is stale data and how would avoid it?</p>\n<blockquote>\n<ul>\n<li>What is stale data?<br />\nStale data is simply data that may not be recent and hence may not be good for any calculations involving up to date information from the given data source (ex. instance variable (field)).</li>\n<li>how would avoid it?<br />\nTo avoid stale data, it is best to calculate the value of that data within a method rather than store it in a variable.</li>\n</ul>\n</blockquote>\n</li>\n<li class=\"quiz essay\">\n<p>Distinguish between a no-argument constructor and a default constructor.  How are constructors distinguished from normal methods of a class?</p>\n<blockquote>\n<p>A constructor that does not accept arguments is known as a no-arg constructor.<br />\nIt usually intializes class level variables.<br />\nThe default constructor is a constructor that the Java compiler adds to your code if no explicit constructor is available. The default constructor is consider a no-arg constructor.<br />\nEx. no-arg constructor programmer defined</p>\n</blockquote>\n<div class=\"note default\">\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token class-name\">Rectangle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    length <span class=\"token operator\">=</span> width <span class=\"token operator\">=</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></div>\n</li>\n<li class=\"quiz essay\">\n<p>What are overloaded methods?  Why may they be used in a program?</p>\n<blockquote>\n<p>It is where two or more methods (incl. the constructor) in a class have the same name but differ in their parameter lists.<br />\nThey are popular because of the increased readability of the code and thus cleaniness of the code base. Moreover method overloading is important because sometimes you need several <ins>different ways</ins> to perform <ins>the same</ins> operation (ex. adding two doubles versus two ints).</p>\n</blockquote>\n</li>\n<li class=\"quiz essay\">\n<p>Given the code below how would a compiler now which method to call at runtime? Hint- check out what binding and method signatures mean in the chapter.</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> num1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> num2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">int</span> sum <span class=\"token operator\">=</span> num1 <span class=\"token operator\">+</span> num2<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">return</span> sum<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> add <span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> str1<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> str2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token class-name\">String</span> combined <span class=\"token operator\">=</span> str1 <span class=\"token operator\">+</span> str2<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">return</span> combined<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><blockquote>\n<p>The compiler knows which version of the overloaded method to trigger at run time by the differing metho signature, that is by the differences in the parameter list.<br />\nEx. of differing parameter lists of method calls<br />\n <code>add(int, int)</code> <br />\n <code>add(double,double)</code> <br />\nThe process of matching a method call with the correct method is known as binding.  Again the compiler uses the method signature to determine which version of the overloaded method to bind the call to.</p>\n</blockquote>\n</li>\n</ol>\n",
            "tags": [
                "计算机科学",
                "Master of Software Engineering",
                "ITMD 510. Object-Oriented App Develop",
                "Java"
            ]
        },
        {
            "id": "https://shoka.lostyu.me/computer-science/mse/itmd-510/week-2/",
            "url": "https://shoka.lostyu.me/computer-science/mse/itmd-510/week-2/",
            "title": "Week 2. A First Look at Classes",
            "date_published": "2020-09-01T01:16:05.000Z",
            "content_html": "<h1 id=\"notes\"><a class=\"anchor\" href=\"#notes\">#</a> Notes</h1>\n<h2 id=\"use-case-scenario-uml\"><a class=\"anchor\" href=\"#use-case-scenario-uml\">#</a> Use Case Scenario (UML)</h2>\n<p><img data-src=\"https://i.loli.net/2020/09/13/8M5d1SwiqzlsrD7.png\" alt=\"\" /><br />\n<img data-src=\"https://i.loli.net/2020/09/13/pKy2YunrgkUtDqI.png\" alt=\"\" /></p>\n<h2 id=\"class-diagram-uml\"><a class=\"anchor\" href=\"#class-diagram-uml\">#</a> Class Diagram (UML)</h2>\n<p><img data-src=\"https://i.loli.net/2020/09/13/LaU2PE7xJvTdcF6.png\" alt=\"\" /><br />\n<img data-src=\"https://i.loli.net/2020/09/13/mSjV1HFiTWIE2tq.png\" alt=\"\" /></p>\n<h2 id=\"consider-an-application-sample-run-of-actions\"><a class=\"anchor\" href=\"#consider-an-application-sample-run-of-actions\">#</a> Consider an Application sample run of actions</h2>\n<pre class=\"info\"><code>Automated Teller Machine\nChoose 1 for Withdraw\nChoose 2 for Deposit\nChoose 3 for Check Balance\nChoose 4 for EXIT\nChoose the operation you want to perform:1\nEnter money to be withdrawn:2000\nPlease collect your money\n \nAutomated Teller Machine\nChoose 1 for Withdraw\nChoose 2 for Deposit\nChoose 3 for Check Balance\nChoose 4 for EXIT\nChoose the operation you want to perform:3\nBalance : 3000\n \nAutomated Teller Machine\nChoose 1 for Withdraw\nChoose 2 for Deposit\nChoose 3 for Check Balance\nChoose 4 for EXIT\nChoose the operation you want to perform:4</code></pre><figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> BANKATM <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> args<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">double</span> balance <span class=\"token operator\">=</span> <span class=\"token number\">5000</span><span class=\"token punctuation\">,</span> withdraw<span class=\"token punctuation\">,</span> deposit<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token class-name\">Scanner</span> s <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Automated Teller Machine\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Choose 1 for Withdraw\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Choose 2 for Deposit\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Choose 3 for Check Balance\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Choose 4 for EXIT\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Choose the operation you want to perform: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token keyword\">int</span> n <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                <span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Enter money to be withdrawn:\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                withdraw <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>balance <span class=\"token operator\">>=</span> withdraw<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                    balance <span class=\"token operator\">=</span> balance <span class=\"token operator\">-</span> withdraw<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Please collect your money\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Insufficient Balance\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>              </pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre> </pre></td></tr><tr><td data-num=\"32\"></td><td><pre>                <span class=\"token keyword\">case</span> <span class=\"token number\">2</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Enter money to be deposited:\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>                deposit <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>                balance <span class=\"token operator\">=</span> balance <span class=\"token operator\">+</span> deposit<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Your Money has been successfully depsited\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre> </pre></td></tr><tr><td data-num=\"40\"></td><td><pre>                <span class=\"token keyword\">case</span> <span class=\"token number\">3</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Balance : \"</span><span class=\"token operator\">+</span>balance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre> </pre></td></tr><tr><td data-num=\"45\"></td><td><pre>                <span class=\"token keyword\">case</span> <span class=\"token number\">4</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>                s<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"learning-about-classes-and-objects\"><a class=\"anchor\" href=\"#learning-about-classes-and-objects\">#</a> Learning about Classes and Objects</h2>\n<p>A class is a blueprint consisting of an idea. Think of it like a data structure.</p>\n<blockquote>\n<p>EX. Creating a building, making a cake, registering students, gradebook, simpleInterest…..</p>\n</blockquote>\n<p>A class also is an Abstract Data Type.</p>\n<blockquote>\n<p>EX.  <code>public Class Building ….</code> <br />\nwhere Building becomes the datatype!</p>\n</blockquote>\n<p>Create a Building object (variable)</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">Building</span> stuartObj <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Building</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// where stuartObj is of type Building</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token class-name\">Building</span> lsObj <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Building</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// where lsObj is of type Building</span></pre></td></tr></table></figure><blockquote>\n<p>Objects can be REPRESENTATIVES of the class.</p>\n</blockquote>\n<p>What kind of offerings does the class have for its objects??</p>\n<p>ENTER METHODS!!          (METHODS ARE BEHAVIORS OF THE CLASS)</p>\n<p>ENTER ATTRIBUTES!!      (DATA VALUES THAT AN INDIVIDUAL OBJECT HAVE OF THE CLASS)</p>\n<h1 id=\"lab\"><a class=\"anchor\" href=\"#lab\">#</a> Lab</h1>\n<ul>\n<li>PROJECT<br />\nBank account simulator program</li>\n<li>Objective<br />\nTo write a program that performs various bank transactions.</li>\n</ul>\n<h2 id=\"project-description\"><a class=\"anchor\" href=\"#project-description\">#</a> PROJECT DESCRIPTION</h2>\n<p>Bank of IIT has contacted you to write, compile and execute a complete program that creates bank account information and executes various transaction details for their clients.</p>\n<p>Your program will prompt users for options such as creating an initial balance, entering deposits or withdrawals. Also, your program will allow for the printing of account information including interest at various interest rates.</p>\n<p>Use any loops, user defined methods, conditional and relational logic and the basics of OOP to accomplish the objectives of this program.</p>\n<p><ins>Error trapping</ins> will be part of your grade so don’t forget to include some basic error trapping logic!  Always comment your code thoroughly and include brief program descriptions as well where applicable for your source files for maximum points.</p>\n<h2 id=\"project-details\"><a class=\"anchor\" href=\"#project-details\">#</a> Project Details</h2>\n<p>For this program you will create <strong>two</strong> separate Java files within your package, namely  <code>AccountHolder</code>  and  <code>AccountHolderTest</code> .</p>\n<p>The  <code>AccountHolder</code>  file <ins>must</ins> include the following class field members and data methods to allow for transaction processing.</p>\n<table>\n<thead>\n<tr>\n<th>Field Name</th>\n<th>Field Type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>annualInterestRate</td>\n<td>static / double</td>\n</tr>\n<tr>\n<td>balance</td>\n<td>double</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th>*Method Name</th>\n<th>Method (Instance)</th>\n<th>Argument</th>\n<th>Return Type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>AccountHolder</td>\n<td>Constructor</td>\n<td>double</td>\n<td>none</td>\n</tr>\n<tr>\n<td>deposit</td>\n<td>Instance</td>\n<td>double</td>\n<td>void</td>\n</tr>\n<tr>\n<td>withdrawal</td>\n<td>Instance</td>\n<td>double</td>\n<td>void</td>\n</tr>\n<tr>\n<td>monthlyInterest</td>\n<td>Instance</td>\n<td>void</td>\n<td>void</td>\n</tr>\n<tr>\n<td>getBalance</td>\n<td>Instance</td>\n<td>void</td>\n<td>double</td>\n</tr>\n</tbody>\n</table>\n<p>*assume all methods are declared as public</p>\n<p>Of course if you would like to add any extra fields or methods in your class(es) feel free<br />\nto do so.</p>\n<p>Coding detail for your methods must include the following:</p>\n<ol>\n<li>\n<p>Allow the Constructor to accept an argument representing an initial balance for the Account holder. Set your balance member equal to the value passed in via the class constructor.<br />\n<span class=\"red\">Balances cannot start off negative! Include an error message if this is the situation.</span></p>\n</li>\n<li>\n<p>Define in your monthlyInterest method body, an assignment statement to update the account holders’ balance to be affected as follows:</p>\n<p><code>balance += balance * (annualInterestRate / 12.0);</code></p>\n</li>\n<li>\n<p>For your deposit &amp; withdrawal methods, either have your method body either increase or decrease the holder’s current balance accordingly.</p>\n<p>An added rule to follow here:</p>\n<p>Disallow the withdrawal account balance to drop below $50.</p>\n</li>\n<li>\n<p>Include comments on what your method is to perform (ex. any data to be received and what to return back to the calling environment).</p>\n</li>\n</ol>\n<p>For your AccountHolderTest file, include any local variables in your main method to work the application. Include the following transactional detail from your main method, to be executed in the following order for runtime needs. Run your program twice and follow details below and snapshot your results for each run. Label snapshots accordingly in your documentation.</p>\n<h3 id=\"snapshot-1-run-1\"><a class=\"anchor\" href=\"#snapshot-1-run-1\">#</a> Snapshot 1 – run #1</h3>\n<ol>\n<li>\n<p>Create an AccountHolder object and prompt the user for an initial account balance and have the balance passed into the AccountHolder constructor.</p>\n</li>\n<li>\n<p>Allow the interest for the bank to be initially set at 4%. This can be hard coded in.</p>\n</li>\n<li>\n<p>Prompt the user to enter in a deposit amount.</p>\n</li>\n<li>\n<p>Prompt the user for a withdrawal amount. Show an example when a user enters a withdrawal that will drop their balance below $50. Display a message stating that a balance cannot go below $50.</p>\n</li>\n<li>\n<p>Display the ending or updated balance with included interest amount applied.</p>\n</li>\n</ol>\n<h3 id=\"snapshot-2-run-2\"><a class=\"anchor\" href=\"#snapshot-2-run-2\">#</a> Snapshot 2 – run #2</h3>\n<ol>\n<li>\n<p>Prompt the user for an initial account balance.  Include a negative starting balance<br />\nentry and thus allow for a positive value only to be accepted.</p>\n</li>\n<li>\n<p>Allow the interest for the bank to be initially set at 4%. This can be hard coded in.</p>\n</li>\n<li>\n<p>Prompt the user to enter in a deposit amount.</p>\n</li>\n<li>\n<p>Prompt the user for a withdrawal amount.</p>\n</li>\n<li>\n<p>Display the ending or updated balance with included interest amount applied.</p>\n</li>\n</ol>\n<h2 id=\"objectives-general-tips\"><a class=\"anchor\" href=\"#objectives-general-tips\">#</a> Objectives / General Tips</h2>\n<h3 id=\"uml-of-classes\"><a class=\"anchor\" href=\"#uml-of-classes\">#</a> UML of classes</h3>\n<pre class=\"mermaid\"><svg id=\"mermaid-1601977060336\" width=\"100%\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" height=\"235\" style=\"max-width: 208.390625px;\" viewBox=\"-20 -20 208.390625 235\"><g></g><defs><marker id=\"extensionStart\" class=\"extension\" refX=\"0\" refY=\"7\" markerWidth=\"190\" markerHeight=\"240\" orient=\"auto\"><path d=\"M 1,7 L18,13 V 1 Z\"></path></marker></defs><defs><marker id=\"extensionEnd\" refX=\"19\" refY=\"7\" markerWidth=\"20\" markerHeight=\"28\" orient=\"auto\"><path d=\"M 1,1 V 13 L18,7 Z\"></path></marker></defs><defs><marker id=\"compositionStart\" class=\"extension\" refX=\"0\" refY=\"7\" markerWidth=\"190\" markerHeight=\"240\" orient=\"auto\"><path d=\"M 18,7 L9,13 L1,7 L9,1 Z\"></path></marker></defs><defs><marker id=\"compositionEnd\" refX=\"19\" refY=\"7\" markerWidth=\"20\" markerHeight=\"28\" orient=\"auto\"><path d=\"M 18,7 L9,13 L1,7 L9,1 Z\"></path></marker></defs><defs><marker id=\"aggregationStart\" class=\"extension\" refX=\"0\" refY=\"7\" markerWidth=\"190\" markerHeight=\"240\" orient=\"auto\"><path d=\"M 18,7 L9,13 L1,7 L9,1 Z\"></path></marker></defs><defs><marker id=\"aggregationEnd\" refX=\"19\" refY=\"7\" markerWidth=\"20\" markerHeight=\"28\" orient=\"auto\"><path d=\"M 18,7 L9,13 L1,7 L9,1 Z\"></path></marker></defs><defs><marker id=\"dependencyStart\" class=\"extension\" refX=\"0\" refY=\"7\" markerWidth=\"190\" markerHeight=\"240\" orient=\"auto\"><path d=\"M 5,7 L9,13 L1,7 L9,1 Z\"></path></marker></defs><defs><marker id=\"dependencyEnd\" refX=\"19\" refY=\"7\" markerWidth=\"20\" markerHeight=\"28\" orient=\"auto\"><path d=\"M 18,7 L9,13 L14,7 L9,1 Z\"></path></marker></defs><g id=\"classid-AccountHolder-0\" class=\"classGroup\" transform=\"translate(0,0 )\"><rect x=\"0\" y=\"0\" width=\"168.390625\" height=\"98\" class=\" \"></rect><text y=\"15\" x=\"0\"><tspan class=\"title\" x=\"49.1953125\">AccountHolder</tspan></text><line x1=\"0\" y1=\"21\" y2=\"21\" x2=\"168.390625\"></line><text x=\"5\" y=\"31\" fill=\"white\" class=\"classText\"><tspan x=\"5\">-balance : double</tspan><tspan x=\"5\" dy=\"10\">+annualInterestRate : double</tspan></text><line x1=\"0\" y1=\"47\" y2=\"47\" x2=\"168.390625\"></line><text x=\"5\" y=\"62\" fill=\"white\" class=\"classText\"><tspan x=\"5\">+AccountHolder(balance : double)</tspan><tspan x=\"5\" dy=\"10\">+deposit(balance : double)</tspan><tspan x=\"5\" dy=\"10\">+withdrawal(balance : double)</tspan><tspan x=\"5\" dy=\"10\">+monthlyInterest()</tspan></text></g><g id=\"classid-AccountHolderTest-1\" class=\"classGroup\" transform=\"translate(35.0234375,148 )\"><rect x=\"0\" y=\"0\" width=\"98.34375\" height=\"47\" class=\" \"></rect><text y=\"15\" x=\"0\"><tspan class=\"title\" x=\"5\">AccountHolderTest</tspan></text><line x1=\"0\" y1=\"21\" y2=\"21\" x2=\"98.34375\"></line><text x=\"5\" y=\"31\" fill=\"white\" class=\"classText\"></text><line x1=\"0\" y1=\"26\" y2=\"26\" x2=\"98.34375\"></line><text x=\"5\" y=\"41\" fill=\"white\" class=\"classText\"><tspan x=\"5\">+main()</tspan></text></g><path d=\"M84.1953125,98L84.1953125,102.16666666666667C84.1953125,106.33333333333333,84.1953125,114.66666666666667,84.1953125,123C84.1953125,131.33333333333334,84.1953125,139.66666666666666,84.1953125,143.83333333333334L84.1953125,148\" id=\"edge0\" class=\"relation\"></path></svg></pre><h3 id=\"accessing-data\"><a class=\"anchor\" href=\"#accessing-data\">#</a> Accessing data</h3>\n<p>2 ways to access data</p>\n<ol>\n<li>\n<p>For static members (fields)<br />\n <code>ClassName.staticmember</code></p>\n<p>Ex.</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">AccountHolder</span><span class=\"token punctuation\">.</span>annualInterestRate <span class=\"token operator\">=</span> <span class=\"token number\">.04</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n<li>\n<p>For instance members (fields)<br />\n <code>objectName.method()</code></p>\n</li>\n</ol>\n<h3 id=\"the-constructor\"><a class=\"anchor\" href=\"#the-constructor\">#</a> The Constructor</h3>\n<p>When object is created the Constructor is called automatically.</p>\n<p>Ex.</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">AccountHolder</span> accObj1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AccountHolder</span><span class=\"token punctuation\">(</span>balance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"error-trappings\"><a class=\"anchor\" href=\"#error-trappings\">#</a> Error trappings!</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>balance <span class=\"token operator\">&lt;</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>         <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">IllegalArgumentException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"balance must be non-negative\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>other:</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    balance <span class=\"token operator\">=</span> sc<span class=\"token punctuation\">.</span><span class=\"token function\">nextDouble</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>balance <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Pls. reenter a positive beginning balance\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">else</span> </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"avoiding-self-referential-assigning\"><a class=\"anchor\" href=\"#avoiding-self-referential-assigning\">#</a> Avoiding Self-Referential assigning!</h3>\n<p>*Use this (which refers to a current object’s instance) keyword in a method to avoid self referential integrity!<br />\n <code>this.balance = balance;</code></p>\n<p>ex.</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// constructor, creates a new account with the specified balance</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token class-name\">AccountHolder</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span> balance<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>balance <span class=\"token operator\">=</span> balance<span class=\"token punctuation\">;</span>      <span class=\"token comment\">//assign local variable to class member </span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"print-formatting\"><a class=\"anchor\" href=\"#print-formatting\">#</a> Print formatting</h3>\n<p>Use various print formatting with the format specifier  <code>%</code>  symbol followed by a converter.</p>\n<p>Popular converters to use include:</p>\n<table>\n<tbody>\n<tr>\n<td><code>%f</code></td>\n<td>float</td>\n</tr>\n<tr>\n<td><code>%d</code></td>\n<td>int</td>\n</tr>\n<tr>\n<td><code>%s</code></td>\n<td>string</td>\n</tr>\n<tr>\n<td><code>%n</code></td>\n<td>newline</td>\n</tr>\n</tbody>\n</table>\n<p>Ex.</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$%.2f\"</span><span class=\"token punctuation\">,</span> balance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//print currency style</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span>format <span class=\"token punctuation\">(</span><span class=\"token string\">\"%-10s%n\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Total balance\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"code\"><a class=\"anchor\" href=\"#code\">#</a> code</h2>\n<p><img data-src=\"https://i.loli.net/2020/09/13/OPJnGdpUAZ9v3fq.png\" alt=\"Snapshot 1\" title=\"Snapshot 1 – run #1\" /><br />\n<img data-src=\"https://i.loli.net/2020/09/13/eY973H5Psbx8FGU.png\" alt=\"Snapshot 2\" title=\"Snapshot 2 – run #2\" /></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>AccountHolder.java</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AccountHolder</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\">// class level data members</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">double</span> balance<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">static</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">double</span> annualInterestRate<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\">/* class methods */</span>    </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>     * constructor method</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>     * Create a new account with the specified balance</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>     * </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>     * @param balance</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">AccountHolder</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span> balance<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>balance <span class=\"token operator\">=</span> balance<span class=\"token punctuation\">;</span> <span class=\"token comment\">// assign local variable to class member </span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>     * Set a deposit</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>     * </pre></td></tr><tr><td data-num=\"21\"></td><td><pre>     * @param balance</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">deposit</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span> balance<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>balance <span class=\"token operator\">+=</span> balance<span class=\"token punctuation\">;</span>   <span class=\"token comment\">//ADD to existing BALANCE local variable</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>     * Set a withdrawal</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>     * </pre></td></tr><tr><td data-num=\"30\"></td><td><pre>     * @param balance</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">withdrawal</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span> balance<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token comment\">/* Check the existing balance!!!</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>         * DO NOT allow the balance to go below $50</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>         */</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>balance <span class=\"token operator\">-</span> balance <span class=\"token operator\">&lt;</span> <span class=\"token number\">50.0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">IllegalArgumentException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Disallow the withdrawal account balance to drop below $50.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>balance <span class=\"token operator\">-=</span> balance<span class=\"token punctuation\">;</span>   <span class=\"token comment\">//SUBTRACT from existing BALANCE local variable</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"46\"></td><td><pre>     * Monthly Interest</pre></td></tr><tr><td data-num=\"47\"></td><td><pre>     * </pre></td></tr><tr><td data-num=\"48\"></td><td><pre>     * update the account holders’ balance based on annualInterestRate / 12.0</pre></td></tr><tr><td data-num=\"49\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">monthlyInterest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        balance <span class=\"token operator\">+=</span> balance <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>annualInterestRate <span class=\"token operator\">/</span> <span class=\"token number\">12.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    <span class=\"token comment\">// getters</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">double</span> <span class=\"token function\">getBalance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>        <span class=\"token keyword\">return</span> balance<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>AccountHolderTest.java</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">InputMismatchException</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AccountHolderTest</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token comment\">//set up program local variables</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token class-name\">Scanner</span> in <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">double</span> balance <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Automated Teller Machine\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token comment\">// prompt the user for an initial account balance </span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Please enter your initial balance: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                balance <span class=\"token operator\">=</span> in<span class=\"token punctuation\">.</span><span class=\"token function\">nextDouble</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>balance <span class=\"token operator\">&lt;</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// Balances cannot start off negative</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                    <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">IllegalArgumentException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Balance must be non-negative. Please re-enter a positive beginning balance.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">InputMismatchException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>err<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Illegal value. Please re-enter a double.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                in<span class=\"token punctuation\">.</span><span class=\"token function\">nextLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>err<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token comment\">//set AccountHolder object</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token class-name\">AccountHolder</span> accObj <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AccountHolder</span><span class=\"token punctuation\">(</span>balance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token comment\">//set interest rate at 4%</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token class-name\">AccountHolder</span><span class=\"token punctuation\">.</span>annualInterestRate <span class=\"token operator\">=</span> <span class=\"token number\">.04</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\nA new account created successfully. Initial balance \"</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>                <span class=\"token operator\">+</span> <span class=\"token string\">\"is $%.2f.\\n\"</span> <span class=\"token punctuation\">,</span> balance <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//new line</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        <span class=\"token comment\">// Operation selector</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>            <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Choose 1 for Deposit\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Choose 2 for Withdraw\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Choose 3 for Check Balance\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Choose 4 for EXIT\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Choose the operation you want to perform: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>                </pre></td></tr><tr><td data-num=\"55\"></td><td><pre>                <span class=\"token keyword\">int</span> n <span class=\"token operator\">=</span> in<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>                </pre></td></tr><tr><td data-num=\"57\"></td><td><pre>                <span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>                    <span class=\"token comment\">// set a deposit</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>                    <span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>                    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>                    </pre></td></tr><tr><td data-num=\"61\"></td><td><pre>                        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>                            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//new line</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>                            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Please enter a deposit: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>                            </pre></td></tr><tr><td data-num=\"65\"></td><td><pre>                            balance <span class=\"token operator\">=</span> in<span class=\"token punctuation\">.</span><span class=\"token function\">nextDouble</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>                            accObj<span class=\"token punctuation\">.</span><span class=\"token function\">deposit</span><span class=\"token punctuation\">(</span>balance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>                            </pre></td></tr><tr><td data-num=\"68\"></td><td><pre>                            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Your Money has been successfully depsited.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>                            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>                        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">InputMismatchException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>                            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>err<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Illegal value. Please re-enter a correct value.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>                            in<span class=\"token punctuation\">.</span><span class=\"token function\">nextLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>                        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>                    </pre></td></tr><tr><td data-num=\"76\"></td><td><pre>                    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>                    </pre></td></tr><tr><td data-num=\"78\"></td><td><pre>                    <span class=\"token comment\">// set a withdrawal</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>                    <span class=\"token keyword\">case</span> <span class=\"token number\">2</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>                    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>                    </pre></td></tr><tr><td data-num=\"81\"></td><td><pre>                        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>                            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//new line</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>                            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Please enter a withdrawal: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>                            </pre></td></tr><tr><td data-num=\"85\"></td><td><pre>                            balance <span class=\"token operator\">=</span> in<span class=\"token punctuation\">.</span><span class=\"token function\">nextDouble</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>                            accObj<span class=\"token punctuation\">.</span><span class=\"token function\">withdrawal</span><span class=\"token punctuation\">(</span>balance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>                            </pre></td></tr><tr><td data-num=\"88\"></td><td><pre>                            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Please collect your money.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>                            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>                        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">InputMismatchException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>                            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>err<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Illegal value. Please re-enter a correct value.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>                            in<span class=\"token punctuation\">.</span><span class=\"token function\">nextLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>                        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>                            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>err<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>                        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>                    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>     </pre></td></tr><tr><td data-num=\"99\"></td><td><pre>                    <span class=\"token comment\">// check balance</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>                    <span class=\"token keyword\">case</span> <span class=\"token number\">3</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>                    <span class=\"token comment\">// update the account holders’ balance with included interest amount applied</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>                    accObj<span class=\"token punctuation\">.</span><span class=\"token function\">monthlyInterest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>                    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\nBalance with interest applied \"</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>                            <span class=\"token operator\">+</span> <span class=\"token string\">\"= $%.2f \\n\"</span> <span class=\"token punctuation\">,</span> accObj<span class=\"token punctuation\">.</span><span class=\"token function\">getBalance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>                    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>                    </pre></td></tr><tr><td data-num=\"107\"></td><td><pre>                    <span class=\"token comment\">// exit the system</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>                    <span class=\"token keyword\">case</span> <span class=\"token number\">4</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>                    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\nThanks for using this system. See you next time.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>                    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>                    in<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>                    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>                    </pre></td></tr><tr><td data-num=\"114\"></td><td><pre>                    <span class=\"token keyword\">default</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>                    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>err<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\nChoosing the wrong option, please reselect.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>                    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"119\"></td><td><pre>                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//new line</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">InputMismatchException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>err<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Illegal value. Please re-enter a correct value.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>                in<span class=\"token punctuation\">.</span><span class=\"token function\">nextLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span>            </pre></td></tr><tr><td data-num=\"125\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "计算机科学",
                "Master of Software Engineering",
                "ITMD 510. Object-Oriented App Develop",
                "Java"
            ]
        },
        {
            "id": "https://shoka.lostyu.me/computer-science/mse/itmd-510/week-1/",
            "url": "https://shoka.lostyu.me/computer-science/mse/itmd-510/week-1/",
            "title": "Week 1. Java Fundamental / Best programming practices",
            "date_published": "2020-08-24T02:23:05.000Z",
            "content_html": "<h1 id=\"notes\"><a class=\"anchor\" href=\"#notes\">#</a> Notes</h1>\n<h2 id=\"best-programming-practices\"><a class=\"anchor\" href=\"#best-programming-practices\">#</a> Best programming practices</h2>\n<h3 id=\"what-is-a-program\"><a class=\"anchor\" href=\"#what-is-a-program\">#</a> What is a program</h3>\n<p>A program is a sequence of instructions that specifies how to perform a computation. The computation might be something mathematical, such as solving a system of mathematical equations or finding the roots of a polynomial, but it can also be a symbolic computation, such as searching and replacing text in a document or something graphical, like processing user input on an ATM device.</p>\n<h3 id=\"essence-or-workflow-of-a-program\"><a class=\"anchor\" href=\"#essence-or-workflow-of-a-program\">#</a> Essence or &quot;Workflow&quot; of a Program</h3>\n<pre class=\"mermaid graph\"><svg id=\"mermaid-1601977047242\" width=\"100%\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" height=\"71\" style=\"max-width: 807.1875px;\" viewBox=\"0 0 807.1875 71\"><g><g class=\"output\"><g class=\"clusters\"></g><g class=\"edgePaths\"><g class=\"edgePath LS-A LE-B\" id=\"L-A-B\" style=\"opacity: 1;\"><path class=\"path\" d=\"M204.734375,35.5L248.6640625,35.5L292.59375,35.5\" marker-end=\"url(#arrowhead14)\" style=\"fill:none\"></path><defs><marker id=\"arrowhead14\" viewBox=\"0 0 10 10\" refX=\"9\" refY=\"5\" markerUnits=\"strokeWidth\" markerWidth=\"8\" markerHeight=\"6\" orient=\"auto\"><path d=\"M 0 0 L 10 5 L 0 10 z\" class=\"arrowheadPath\" style=\"stroke-width: 1; stroke-dasharray: 1, 0;\"></path></marker></defs></g><g class=\"edgePath LS-B LE-C\" id=\"L-B-C\" style=\"opacity: 1;\"><path class=\"path\" d=\"M562.90625,35.5L613.171875,35.5L663.4375,35.5\" marker-end=\"url(#arrowhead15)\" style=\"fill:none\"></path><defs><marker id=\"arrowhead15\" viewBox=\"0 0 10 10\" refX=\"9\" refY=\"5\" markerUnits=\"strokeWidth\" markerWidth=\"8\" markerHeight=\"6\" orient=\"auto\"><path d=\"M 0 0 L 10 5 L 0 10 z\" class=\"arrowheadPath\" style=\"stroke-width: 1; stroke-dasharray: 1, 0;\"></path></marker></defs></g></g><g class=\"edgeLabels\"><g class=\"edgeLabel\" transform=\"translate(248.6640625,35.5)\" style=\"opacity: 1;\"><g transform=\"translate(-18.9296875,-9.5)\" class=\"label\"><rect rx=\"0\" ry=\"0\" width=\"38.0625\" height=\"18.546875\"></rect><text><tspan xml:space=\"preserve\" dy=\"1em\" x=\"1\">Input</tspan></text></g></g><g class=\"edgeLabel\" transform=\"translate(613.171875,35.5)\" style=\"opacity: 1;\"><g transform=\"translate(-25.265625,-9.5)\" class=\"label\"><rect rx=\"0\" ry=\"0\" width=\"50.734375\" height=\"18.546875\"></rect><text><tspan xml:space=\"preserve\" dy=\"1em\" x=\"1\">Output</tspan></text></g></g></g><g class=\"nodes\"><g class=\"node default\" id=\"flowchart-A-4\" transform=\"translate(106.3671875,35.5)\" style=\"opacity: 1;\"><rect rx=\"0\" ry=\"0\" x=\"-98.3671875\" y=\"-19.5\" width=\"196.734375\" height=\"39\" class=\"label-container\"></rect><g class=\"label\" transform=\"translate(0,0)\"><g transform=\"translate(-88.3671875,-9.5)\"><text style=\"\"><tspan xml:space=\"preserve\" dy=\"1em\" x=\"1\">A list of positive number</tspan></text></g></g></g><g class=\"node default\" id=\"flowchart-B-5\" transform=\"translate(427.75,35.5)\" style=\"opacity: 1;\"><rect rx=\"5\" ry=\"5\" x=\"-135.15625\" y=\"-27.5\" width=\"270.3125\" height=\"55\" class=\"label-container\"></rect><g class=\"label\" transform=\"translate(0,0)\"><g transform=\"translate(-125.15625,-17.5)\"><text style=\"\"><tspan xml:space=\"preserve\" dy=\"1em\" x=\"1\">Progress </tspan><tspan xml:space=\"preserve\" dy=\"1em\" x=\"1\"> find the largest number of the list</tspan></text></g></g></g><g class=\"node default\" id=\"flowchart-C-7\" transform=\"translate(731.3125,35.5)\" style=\"opacity: 1;\"><rect rx=\"0\" ry=\"0\" x=\"-67.875\" y=\"-19.5\" width=\"135.75\" height=\"39\" class=\"label-container\"></rect><g class=\"label\" transform=\"translate(0,0)\"><g transform=\"translate(-57.875,-9.5)\"><text style=\"\"><tspan xml:space=\"preserve\" dy=\"1em\" x=\"1\">A single number</tspan></text></g></g></g></g></g></g></svg></pre><dl>\n<dt>input</dt>\n<dd>Get data from the &quot;outside world&quot;. This might be reading data from the keyboard or a file, or even some kind of sensor like a microphone or GPS.</dd>\n<dt>process</dt>\n<dd>Perform computions by the CPU (Central Processing Unit) of the device</dd>\n<dt>output</dt>\n<dd>Display the results of the program on a screen or store them in a file or perhaps write them to a device like a speaker to play music or speak text.</dd>\n</dl>\n<h3 id=\"design-aspects-for-problem-solving\"><a class=\"anchor\" href=\"#design-aspects-for-problem-solving\">#</a> Design Aspects for problem solving</h3>\n<p><img data-src=\"https://i.loli.net/2020/09/12/BC5P3uYgKzwvDOT.png\" alt=\"\" /></p>\n<h3 id=\"basic-building-block-of-a-program\"><a class=\"anchor\" href=\"#basic-building-block-of-a-program\">#</a> Basic Building Block of a Program</h3>\n<p>Every program goes thru either or all of the following flows</p>\n<ol>\n<li>Sequential (Top Down execution)</li>\n<li>Selective (Decision making execution)</li>\n<li>Iterative or &quot;Loop repetition&quot;</li>\n</ol>\n<p><img data-src=\"https://i.loli.net/2020/09/12/fCatylRmzLjcvrK.png\" alt=\"\" /></p>\n<h2 id=\"java-fundamentals\"><a class=\"anchor\" href=\"#java-fundamentals\">#</a> Java Fundamentals</h2>\n<h3 id=\"variables\"><a class=\"anchor\" href=\"#variables\">#</a> Variables</h3>\n<p>Defined: a value stored in memory that can change</p>\n<ol>\n<li>\n<p>Declarations<br />\nEstablish good naming conventions!</p>\n<p>Ex.  <code>emp_Rate</code>   or  <code>empRate</code>    <code>empHours</code> ,  <code>empId</code></p>\n</li>\n<li>\n<p>Scope (variable visibility)</p>\n<p>Variables can be defined to be &quot;visible&quot; or seen at the local vs. class level (static).</p>\n</li>\n</ol>\n<h3 id=\"constants\"><a class=\"anchor\" href=\"#constants\">#</a> Constants</h3>\n<p>Defined: a value stored in memory that cannot change</p>\n<p>Use of keyword -&gt;  <code>final</code></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> ival <span class=\"token operator\">=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//value needed immediately upon declaration!</span></pre></td></tr></table></figure><h3 id=\"basic-data-types\"><a class=\"anchor\" href=\"#basic-data-types\">#</a> Basic Data Types</h3>\n<table>\n<thead>\n<tr>\n<th>Primitives (8)</th>\n<th>Reference or Class based examples</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>byte</td>\n<td>Random</td>\n</tr>\n<tr>\n<td>boolean</td>\n<td>String</td>\n</tr>\n<tr>\n<td>float</td>\n<td>Float</td>\n</tr>\n<tr>\n<td>double</td>\n<td>Double</td>\n</tr>\n<tr>\n<td>int</td>\n<td>Integer</td>\n</tr>\n<tr>\n<td>short</td>\n<td>Short</td>\n</tr>\n<tr>\n<td>long</td>\n<td>Long</td>\n</tr>\n<tr>\n<td>char</td>\n<td>Character</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> j<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> k<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">double</span> a <span class=\"token operator\">=</span> <span class=\"token number\">2.0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">double</span> b <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><span class=\"red\">Avoid a common pitfall!</span></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> result <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token operator\">/</span><span class=\"token number\">4</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//0 as truncation occurs</span></pre></td></tr></table></figure><h3 id=\"operators\"><a class=\"anchor\" href=\"#operators\">#</a> Operators</h3>\n<p>Know operator precedence and associativities!</p>\n<p>Order of operations (highest to lowest)</p>\n<ol>\n<li>Arithmetic</li>\n<li>Conditionals  <code>(</code>  and  <code>&amp;&amp;</code> , or  <code>||</code> , not  <code>!</code>  )</li>\n<li>Relational (  <code>&gt;</code> ,  <code>&lt;</code> ,  <code>&gt;=</code> ,  <code>&lt;=</code> ,  <code>!=</code> ,  <code>==</code>  )</li>\n</ol>\n<p>Keynote: use shortcut operators in assignment statements</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">++</span>count<span class=\"token punctuation\">;</span>  <span class=\"token comment\">//pre increment operator (change to variable takes place immediately) </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// vs.</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>count<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//post increment operator (change to variable takes place after assignment ends)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// same as</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>count <span class=\"token operator\">=</span> count <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// or</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>count<span class=\"token operator\">+=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><span class=\"red\">Avoid a common pitfall!</span> -Checking for equality!!</p>\n<p>FOR NUMERIC TYPES USE</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> a <span class=\"token operator\">=</span> <span class=\"token number\">12</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">(</span><span class=\"token number\">5</span> <span class=\"token operator\">==</span> a<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>FOR STRING TYPES USE EQUALS METHOD!</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">String</span> name1 <span class=\"token operator\">=</span> <span class=\"token string\">\"Joe\"</span><span class=\"token punctuation\">,</span> name2 <span class=\"token operator\">=</span> <span class=\"token string\">\"Jack\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">(</span>name1<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>name2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"conditionals\"><a class=\"anchor\" href=\"#conditionals\">#</a> Conditionals</h3>\n<h4 id=\"if-statements\"><a class=\"anchor\" href=\"#if-statements\">#</a> if statements</h4>\n<p>format:</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>a<span class=\"token operator\">></span>b<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre> <span class=\"token comment\">//if true do something</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre> <span class=\"token comment\">//if false do something else</span></pre></td></tr></table></figure><p>Make use of curly bracies  <code>&#123; &#125;</code>  to combine statements</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>Example</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>a<span class=\"token operator\">></span>b<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre> result <span class=\"token operator\">=</span> a<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Value = \"</span> <span class=\"token operator\">+</span> result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre> result <span class=\"token operator\">=</span> b<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Value = \"</span> <span class=\"token operator\">+</span> result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4 id=\"other-forms-multi-branched-nested\"><a class=\"anchor\" href=\"#other-forms-multi-branched-nested\">#</a> Other forms- multi branched, nested</h4>\n<p>if alternative – the CEO (Conditional Expression Operator)</p>\n<p>Known as a ternary operator  -    <code>? :</code></p>\n<p>format:  <code>conditon ? true expression : false expression</code></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>Example</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> result <span class=\"token operator\">=</span> a<span class=\"token operator\">></span>b <span class=\"token operator\">?</span> a <span class=\"token operator\">:</span> b<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// if statement equivalent</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>a<span class=\"token operator\">></span>b<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre> result <span class=\"token operator\">=</span> a<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre> result <span class=\"token operator\">=</span> b<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h4 id=\"truth-tables\"><a class=\"anchor\" href=\"#truth-tables\">#</a> Truth tables</h4>\n<table>\n<thead>\n<tr>\n<th colspan=\"2\">And  <code>&amp;&amp;</code>  Expression-  <code>a&gt;b &amp;&amp; b&gt;c</code></th>\n<th colspan=\"2\">Or  <code>||</code>  Expression-  <code>a&gt;b || b&gt;c</code></th>\n<th rowspan=\"2\">Not  <code>!</code>  Expression-  <code>!(a&gt;b)</code></th>\n</tr>\n<tr>\n<th>Cond.</th>\n<th>Result</th>\n<th>Cond.</th>\n<th>Result</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>T &amp;&amp; T</code></td>\n<td>T</td>\n<td><code>T || T</code></td>\n<td>T</td>\n<td><code>!T = F</code></td>\n</tr>\n<tr>\n<td><code>F &amp;&amp;  T</code></td>\n<td>F</td>\n<td><code>F || T</code></td>\n<td>T</td>\n<td><code>!F= T</code></td>\n</tr>\n<tr>\n<td><code>T &amp;&amp; F</code></td>\n<td>F</td>\n<td><code>T || F</code></td>\n<td>T</td>\n</tr>\n<tr>\n<td><code>F &amp;&amp; F</code></td>\n<td>F</td>\n<td><code>F || F</code></td>\n<td>F</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"loops\"><a class=\"anchor\" href=\"#loops\">#</a> Loops</h3>\n<p>while, do-while, for, for enhanced</p>\n<p>format:  <code>while (some condition holds true)</code></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>Example</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> count <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>count<span class=\"token operator\">&lt;</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre> <span class=\"token comment\">//do something</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre> count<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//increment counter variable</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"arrays\"><a class=\"anchor\" href=\"#arrays\">#</a> Arrays</h3>\n<ul>\n<li>\n<p>Index or subscript based</p>\n</li>\n<li>\n<p>Holds a series or list of values</p>\n</li>\n<li>\n<p>Can be fixed or dynamic</p>\n</li>\n<li>\n<p>Chief advantages<br />\nCan be sorted, searched, averaged, find max/min values, printed…</p>\n</li>\n<li>\n<p>Any disadvantages???</p>\n</li>\n</ul>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> array<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>array<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token number\">14</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//update array at subscript 2, element #3</span></pre></td></tr></table></figure><table>\n<thead>\n<tr>\n<th>Element number</th>\n<th>Subscript number (or index)</th>\n<th>Value at subscript position</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>0</td>\n<td>1</td>\n</tr>\n<tr>\n<td>2</td>\n<td>1</td>\n<td>2</td>\n</tr>\n<tr>\n<td>3</td>\n<td>2</td>\n<td>14</td>\n</tr>\n<tr>\n<td>4</td>\n<td>3</td>\n<td>4</td>\n</tr>\n<tr>\n<td>5</td>\n<td>4</td>\n<td>5</td>\n</tr>\n</tbody>\n</table>\n<p>Ex. Cycle thru array up to array length - 1</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> array<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h1 id=\"review\"><a class=\"anchor\" href=\"#review\">#</a> Review</h1>\n<h2 id=\"truefalse\"><a class=\"anchor\" href=\"#truefalse\">#</a> True/False</h2>\n<ol>\n<li class=\"quiz false\">\n<p>The first step to the problem-solving process is to implement the algorithm in a programming language, such as Java, and verify that the algorithm works.</p>\n<blockquote>\n<ol>\n<li>Define Problem 定义问题</li>\n<li>Create (suggest) a solution (s) 创建一个解决方案</li>\n<li>Code away!! 编写代码</li>\n<li>Test 测试</li>\n<li>Maintenance (ongoing) （持续）维护</li>\n</ol>\n</blockquote>\n</li>\n<li class=\"quiz false\">\n<p>The symbol  <code>'5'</code>  does not belong to the char data type because 5 is a digit.</p>\n<blockquote>\n<p>char letter = 'a';<br />\nString letter = &quot;a&quot;;</p>\n</blockquote>\n</li>\n<li class=\"quiz false\">\n<p>If  <code>++x</code>  is used in an expression, first the expression is evaluated, and then the value of  <code>x</code>  is incremented by  <code>1</code> .</p>\n<blockquote>\n<p><code>++x;</code>  same as =&gt;  <code>x = x + 1;</code> <br />\n <code>++x;</code> (先加再运算)<br />\n <code>x = x + 1;</code>  (update to variable occurs AFTER expression is evalutated 对变量的更新发生在表达式被赋值之后)</p>\n</blockquote>\n</li>\n<li class=\"quiz true\">\n<p>In Java,  <code>!</code> ,  <code>&amp;&amp;</code> , and  <code>||</code>  are called logical operators.</p>\n<blockquote>\n<ol>\n<li>Arithmetic 算数</li>\n<li>Conditional 条件</li>\n<li>Relational 关系</li>\n</ol>\n</blockquote>\n</li>\n<li class=\"quiz true\">\n<p>Suppose  <code>P</code>  and  <code>Q</code>  are logical expressions. The logical expression  <code>P &amp;&amp; Q</code>  is false if both  <code>P</code>  and  <code>Q</code>  are false.</p>\n<blockquote>\n<p>Ex.  <code>P</code>  =&gt;   <code>A&gt;B</code>    ,   <code>Q</code>  =&gt;  <code>A==2</code>  is  <code>P&amp;&amp;Q</code>  a true outcome</p>\n</blockquote>\n</li>\n<li class=\"quiz false\">\n<p>The output of the Java code, assuming that all variables are properly declared, is 32.</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>num <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>num <span class=\"token operator\">&lt;=</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   \tnum <span class=\"token operator\">=</span> num <span class=\"token operator\">+</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><blockquote>\n<p>Result:<br />\n15 20 25 30 35<br />\nEnding value is 35</p>\n</blockquote>\n<div class=\"note default\">\n<p>Loop Trace!</p>\n<table>\n<thead>\n<tr>\n<th>Loop count (cycle)</th>\n<th>Result (num)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>15</td>\n</tr>\n<tr>\n<td>2</td>\n<td>20</td>\n</tr>\n<tr>\n<td>3</td>\n<td>25</td>\n</tr>\n<tr>\n<td>4</td>\n<td>30</td>\n</tr>\n<tr>\n<td>5</td>\n<td>35</td>\n</tr>\n</tbody>\n</table>\n</div>\n</li>\n<li class=\"quiz false\">\n<p>A <span class=\"red\">constructor</span> has no type and is therefore a void method.</p>\n<blockquote>\n<p>译：构造函数没有类型，因此是一个空方法。<br />\nPURPOSE: SET THE OBJECT(S) TO AN INITIAL STATE.<br />\n 目的：将对象设置为初始状态。<br />\n构造函数没有 返回类型，所以没有 void。</p>\n</blockquote>\n</li>\n<li class=\"quiz true\">\n<p>Given the declaration</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">double</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> numList <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">double</span><span class=\"token punctuation\">[</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//0-19 INDICIE</span></pre></td></tr></table></figure><p>the statement</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>numList<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> numList<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> numList<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>updates the content of the thirteenth component of the array numList.</p>\n</li>\n<li class=\"quiz true\">\n<p>A subclass can override  <code>public</code>  methods of a superclass.</p>\n<blockquote>\n<p>子类可以重写父类的方法</p>\n</blockquote>\n</li>\n<li class=\"quiz true\">\n<p>If an exception occurs in a try block and that exception is caught by a catch block, then the remaining catch blocks associated with that try block are ignored.</p>\n<blockquote>\n<p>如果在一个 try 块中发生异常，并且该异常被 catch 块捕获，那么与该 try 块关联的其余 catch 块将被忽略。</p>\n</blockquote>\n</li>\n</ol>\n<h2 id=\"multiple-choice\"><a class=\"anchor\" href=\"#multiple-choice\">#</a> Multiple Choice</h2>\n<ol start=\"11\">\n<li class=\"quiz\">\n<p>To develop a program to solve a problem, you start by <span class=\"gap\"></span>.</p>\n<ul class=\"options\">\n<li class=\"correct\">analyzing the problem</li>\n<li>implementing the solution in Java</li>\n<li>designing the algorithm</li>\n<li>entering the solution into a computer system</li>\n</ul>\n<blockquote>\n<ul class=\"options\">\n<li class=\"correct\">分析问题</li>\n<li>用 JAVA 实现解决方案</li>\n<li>设计算法</li>\n<li>将解决方案输入计算机系统</li>\n</ul>\n</blockquote>\n</li>\n<li class=\"quiz\">\n<p>The first step in OOD is to identify the components called <span class=\"gap\"></span>.</p>\n<ul class=\"options\">\n<li>classes</li>\n<li class=\"correct\">objects</li>\n<li>methods</li>\n<li>data</li>\n</ul>\n<blockquote>\n<p>OOD：Object-Oriented Design，即面向对象设计</p>\n</blockquote>\n</li>\n<li class=\"quiz\">\n<p>Which of the following is a valid int value?</p>\n<ul class=\"options\">\n<li class=\"correct\"><code>3279</code> </li>\n<li><code>3,279</code></li>\n<li><code>3270.00</code></li>\n<li><code>-922337203684547758808</code></li>\n</ul>\n<blockquote>\n<p>For letter b response above, you can include a character like a comma ( , ) to be stored as a numeric value<br />\nFor letter c response above, you can't include a decimal ( . ) to be stored as a 'int' numeric value<br />\nFor letter d response above, the value is too large to be stored as an 'int'. Try coding the variable with that value as an assignment and see the error message.</p>\n</blockquote>\n</li>\n<li class=\"quiz\">\n<p>Which of the following is a valid statement?</p>\n<p>(i)  <code>int num = new int(67);</code> <br />\n(ii)  <code>String name = new (&quot;Doe&quot;);</code> <br />\n(iii)  <code>String name = &quot;Doe&quot;;</code></p>\n<ul class=\"options\">\n<li>Only (i)</li>\n<li>Only (i) and (ii)</li>\n<li class=\"correct\">Only (iii)</li>\n<li>Only (ii) and (iii)</li>\n</ul>\n<blockquote>\n<p>Syntax for ( i ) is invalid. Type should be Integer not 'int' when creating an integer type object<br />\nSyntax for ( ii ) s/b String name = new String (&quot;Doe&quot;);</p>\n</blockquote>\n</li>\n<li class=\"quiz\">\n<p>Declaring a class level variable as static means <span class=\"gap\"></span>.</p>\n<ul class=\"options\">\n<li>access is obtainable only thru a class object</li>\n<li class=\"correct\">any method (static, instance) can have access</li>\n<li>no methods can have access</li>\n<li>none of the above</li>\n</ul>\n<blockquote>\n<p>将类声明为静态意味着什么？</p>\n<ul class=\"options\">\n<li>只能通过类对象进行访问</li>\n<li class=\"correct\">任何方法 (静态、实例) 都可以访问</li>\n<li>没有方法可以访问</li>\n<li>以上都不正确</li>\n</ul>\n</blockquote>\n</li>\n<li class=\"quiz\">\n<p>Consider the following statements.</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">double</span> x<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\">String</span> y<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>y <span class=\"token operator\">=</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%.2f\"</span><span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>If  <code>x = 285.679</code> , what is the value of y?</p>\n<ul class=\"options\">\n<li><code>&quot;285.00&quot;</code></li>\n<li><code>&quot;285.680&quot;</code></li>\n<li class=\"correct\"><code>&quot;285.68&quot;</code> </li>\n<li><code>&quot;285.068&quot;</code></li>\n</ul>\n<blockquote>\n<p>保留两位小数</p>\n</blockquote>\n</li>\n<li class=\"quiz\">\n<p>What is the output of the following Java code?</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> x <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"positive \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"zero \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"negative\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul class=\"options\">\n<li>zero</li>\n<li>negative</li>\n<li class=\"correct\">zero negative</li>\n<li>positive zero negative</li>\n</ul>\n<blockquote>\n<p>Notice that the second statement although aligned under the  <code>if</code>  statement namely  <code>System.out.println(&quot;zero &quot;);</code>  executes no matter what as the  <code>if</code>  statement has no braces  <code>&#123; &#125;</code>  to encompass the 2nd  <code>println</code>  statement.<br />\n 尽管第二个语句 <code>System.out.println(&quot;zero &quot;);</code>  与  <code>if</code>  语句对齐，但 <code>if</code>  语句没有用大括号 <code>&#123;&#125;</code>  将第二个  <code>println</code>  语句括起来，因此它总是会被执行。</p>\n</blockquote>\n</li>\n</ol>\n<ul>\n<li>\n<p>For the executions using the compareTo built-in java method that follows (questions 18-20), outcomes are basically as follows</p>\n<p>If str1  &gt; str2 when comparing characters from (left to right each time) the outcome will be some positive number result<br />\nIf str1  &lt; str2 when comparing characters from (left to right each time) the outcome will be some negative number result<br />\nIf str1  == str2 when comparing characters from (left to right each time) the outcome will be 0.</p>\n<p>Comparisons like the above are good when sorting data.</p>\n</li>\n</ul>\n<ol start=\"18\">\n<li class=\"quiz\">\n<p>If str1 is &quot;Hello&quot; and str2 is &quot;Hi&quot;, which of the following could be a result of  <code>str1.compareTo(str2);</code> ?</p>\n<ul class=\"options\">\n<li>4</li>\n<li class=\"correct\">-4</li>\n<li>-1</li>\n<li>1</li>\n</ul>\n<blockquote>\n<p>Here when comparing<br />\nH e l l o with<br />\nH i<br />\nThe  <code>e</code>  and the  <code>i</code>  when comparing characters from each string from left to right show a lexographical difference of 4 characters.<br />\nAs str1 &gt; str2, a negative result appears by a distance of 4 characters yielding a -4.</p>\n</blockquote>\n</li>\n<li class=\"quiz\">\n<p>If str1 is &quot;Hello&quot; and str2 is &quot;Hi&quot;, which of the following could be a result of  <code>str2.compareTo(str1);</code> ?</p>\n<ul class=\"options\">\n<li class=\"correct\">4</li>\n<li>-4</li>\n<li>-1</li>\n<li>1</li>\n</ul>\n<blockquote>\n<p>Here similarly to question 18 result there is a difference of 4 characters, yielding a positive 4 as str2 is greater than str1.</p>\n</blockquote>\n</li>\n<li class=\"quiz\">\n<p>If str1 is &quot;Hello&quot; and str2 is &quot;Hello&quot;, which of the following could be a result of  <code>str1.compareTo(str2);</code> ?</p>\n<ul class=\"options\">\n<li>4</li>\n<li>-4</li>\n<li class=\"correct\">0</li>\n<li>1</li>\n</ul>\n<blockquote>\n<p>Here comparisons between string values (characters) are equal, hence the 0 outcome.</p>\n</blockquote>\n</li>\n</ol>\n",
            "tags": [
                "计算机科学",
                "Master of Software Engineering",
                "ITMD 510. Object-Oriented App Develop",
                "Java"
            ]
        },
        {
            "id": "https://shoka.lostyu.me/computer-science/note/theme-shoka-doc/special/",
            "url": "https://shoka.lostyu.me/computer-science/note/theme-shoka-doc/special/",
            "title": "Step.4 主题特殊功能",
            "date_published": "2020-08-13T13:45:48.000Z",
            "content_html": "<div class=\"note primary\">\n<p><a href=\"/computer-science/note/theme-shoka-doc/\">🚀快速开始</a> - <a href=\"/computer-science/note/theme-shoka-doc/dependents/\">💌依赖插件</a> - <a href=\"/computer-science/note/theme-shoka-doc/config/\">📌基本配置</a> - <a href=\"/computer-science/note/theme-shoka-doc/display/\">🌈界面显示</a> - <a href=\"/computer-science/note/theme-shoka-doc/special/\"><strong>🦄特殊功能</strong></a></p>\n</div>\n<div class=\"note info\">\n<p>以下介绍可以使用的 markdown 或者标签代码。<br />\n功能大部分基于 <code>hexo-renderer-multi-markdown-it</code>  渲染器，尤其是代码块的显示，与默认渲染器不兼容。</p>\n</div>\n<h1 id=\"links-链接块\"><a class=\"anchor\" href=\"#links-链接块\">#</a>  <code>links</code>  链接块</h1>\n<p>本功能参考 NexT，基于 Hexo Tag 功能，用来建立友链或其他网址链接功能。</p>\n<p>文章中的使用格式：</p>\n<ol>\n<li>使用 <code>links</code>  标签块，包围 <code>yml</code>  语法书写的内容，字段包括</li>\n</ol>\n<table>\n<tbody>\n<tr>\n<td><code>site</code></td>\n<td>站点名称</td>\n<td>必填</td>\n</tr>\n<tr>\n<td><code>owner</code></td>\n<td>管理员名字</td>\n<td>可选，默认为 <code>site</code>  的值</td>\n</tr>\n<tr>\n<td><code>url</code></td>\n<td>站点链接</td>\n<td>必填</td>\n</tr>\n<tr>\n<td><code>desc</code></td>\n<td>站点描述</td>\n<td>可选，默认为 <code>url</code>  的值</td>\n</tr>\n<tr>\n<td><code>image</code></td>\n<td>站点图片</td>\n<td>可选，默认为 <code>images/404.png</code></td>\n</tr>\n<tr>\n<td><code>color</code></td>\n<td>方块颜色</td>\n<td>可选，默认为 <code>#666</code></td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>&#123;% links %&#125;</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>- site: #站点名称</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  owner: #管理员名字</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  url: #站点网址</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  desc: #简短描述</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  image: #一张图片</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  color: #颜色代码</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>&#123;% endlinks %&#125;</pre></td></tr></table></figure><p>举个栗子：</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>&#123;% links %&#125;</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>- site: 優萌初華</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  owner: 霜月琉璃</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  url: https://shoka.lostyu.me</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  desc: 琉璃的医学 & 编程笔记</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  image: https://cdn.jsdelivr.net/gh/amehime/shoka@latest/images/avatar.jpg</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  color: \"#e9546b\"</pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>- site: 優萌初華</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  owner: 霜月琉璃</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  url: https://shoka.lostyu.me</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  image: images/avatar.jpg</pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>- site: 優萌初華</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  url: https://shoka.lostyu.me</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  desc: 琉璃的医学 & 编程笔记</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  color: \"#9d5b8b\"</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>&#123;% endlinks %&#125;</pre></td></tr></table></figure><p><div class=\"links\"><div class=\"item\" title=\"霜月琉璃\" style=\"--block-color:#e9546b;\"><a href=\"https://shoka.lostyu.me\" class=\"image\" data-background-image=\"https://cdn.jsdelivr.net/gh/amehime/shoka@latest/images/avatar.jpg\"></a>\n          <div class=\"info\">\n          <a href=\"https://shoka.lostyu.me\" class=\"title\">優萌初華</a>\n          <p class=\"desc\">琉璃的医学 & 编程笔记</p>\n          </div></div><div class=\"item\" title=\"霜月琉璃\"><a href=\"https://shoka.lostyu.me\" class=\"image\" data-background-image=\"/images/avatar.jpg\"></a>\n          <div class=\"info\">\n          <a href=\"https://shoka.lostyu.me\" class=\"title\">優萌初華</a>\n          <p class=\"desc\">https://shoka.lostyu.me</p>\n          </div></div><div class=\"item\" title=\"優萌初華\" style=\"--block-color:#9d5b8b;\"><a href=\"https://shoka.lostyu.me\" class=\"image\" data-background-image=\"/images/404.png\"></a>\n          <div class=\"info\">\n          <a href=\"https://shoka.lostyu.me\" class=\"title\">優萌初華</a>\n          <p class=\"desc\">琉璃的医学 & 编程笔记</p>\n          </div></div></div></p>\n<ol start=\"2\">\n<li>以上标签块里的内容，还可以保存到一个 <code>yml</code>  文件中，然后使用 <code>linksfile</code>  标签。<br />\n其中， <code>path</code>  位于 <code>&lt;root&gt;/source</code>  目录下。</li>\n</ol>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>&#123;% linksfile [path] %&#125;</pre></td></tr></table></figure><p>举个栗子：</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>&#123;% linksfile friends/_data.yml %&#125;</pre></td></tr></table></figure><h1 id=\"code代码块\"><a class=\"anchor\" href=\"#code代码块\">#</a>  <code>code</code>  代码块</h1>\n<p>使用 <code>markdown-it-prism</code>  进行代码高亮，支持显示行号、行高亮 <code>mark</code> 、命令行提示符 <code>command</code> 、代码块标题。</p>\n<p>基本格式： <code>[language] [title] [url] [link text] [mark] [command]</code></p>\n<table>\n<thead>\n<tr>\n<th>选项</th>\n<th>描述</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>\n<p>language</p>\n</td>\n<td>\n<ul>\n<li>支持的语言<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wcmlzbWpzLmNvbS8jc3VwcG9ydGVkLWxhbmd1YWdlcw==\">戳此</span></li>\n<li>如果不需要代码高亮，但希望显示代码块样式，则设为 <code>raw</code></li>\n<li>留空或设为 <code>info</code> ，将不显示代码高亮和代码块样式</li>\n</ul>\n</td>\n<td>\n<p>null</p>\n</td>\n</tr>\n<tr>\n<td>title</td>\n<td>代码块的标题文字</td>\n<td>null</td>\n</tr>\n<tr>\n<td>url</td>\n<td>代码块标题右侧显示的链接</td>\n<td>null</td>\n</tr>\n<tr>\n<td>link text</td>\n<td>上述链接显示的标题</td>\n<td>link</td>\n</tr>\n<tr>\n<td>\n<p>mark</p>\n</td>\n<td>\n<p>行高亮显示，格式为 <code>mark:行号,行号开始-行号结束,其他行号</code> 。<br />\n例如 <code>mark:1,4-7,10</code> ，将高亮显示第 1、4、5、6、7、10 行</p>\n</td>\n<td>\n<p>null</p>\n</td>\n</tr>\n<tr>\n<td>\n<p>command</p>\n</td>\n<td>\n<p>命令行提示符，格式为 <code>command:(&quot;提示内容&quot;:行号,行号||&quot;提示内容&quot;:行号开始-行号结束)</code> <br />\n 例如 <code>command:(&quot;[root@localhost] $&quot;:1,9-10||&quot;[admin@remotehost] #&quot;:4-6)</code></p>\n</td>\n<td>\n<p>null</p>\n</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>```java 行高亮 https://shoka.lostyu.me 参考链接 mark:1,6-7</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>import java.util.Scanner;</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>...</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Scanner in = new Scanner (System.in);</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>// 输入 Scan 之后，按下键盘 Alt + “/” 键，Eclipse 下自动补全。</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>System.out.println (in.nextLine ());</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>System.out.println (\"Hello\" + \"world.\");</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>```</pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>```bash 命令行提示符 command:(\"[root@localhost] $\":1,9-10||\"[admin@remotehost] #\":4-6)</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>pwd</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>/usr/home/chris/bin</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>ls -la</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>total 2</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>drwxr-xr-x   2 chris  chris     11 Jan 10 16:48 .</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>drwxr--r-x  45 chris  chris     92 Feb 14 11:10 ..</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>-rwxr-xr-x   1 chris  chris    444 Aug 25  2013 backup</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>-rwxr-xr-x   1 chris  chris    642 Jan 17 14:42 deploy</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>git add -A</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>git commit -m \"update\"</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>git push</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>```</pre></td></tr></table></figure><figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>行高亮</span><a href=\"https://shoka.lostyu.me\">参考链接</a></figcaption><table><tr class=\"marked\"><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token class-name\">Scanner</span> in <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 输入 Scan 之后，按下键盘 Alt + “/” 键，Eclipse 下自动补全。</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr class=\"marked\"><td data-num=\"6\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>in<span class=\"token punctuation\">.</span><span class=\"token function\">nextLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr class=\"marked\"><td data-num=\"7\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello\"</span> <span class=\"token operator\">+</span> <span class=\"token string\">\" world.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>命令行提示符</span></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] $\"></td><td><pre><span class=\"token builtin class-name\">pwd</span></pre></td></tr><tr><td data-num=\"2\"></td><td data-command=\"\"></td><td><pre>/usr/home/chris/bin</pre></td></tr><tr><td data-num=\"3\"></td><td data-command=\"\"></td><td><pre><span class=\"token function\">ls</span> -la</pre></td></tr><tr><td data-num=\"4\"></td><td data-command=\"[admin@remotehost] #\"></td><td><pre>total <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"5\"></td><td data-command=\"[admin@remotehost] #\"></td><td><pre>drwxr-xr-x   <span class=\"token number\">2</span> chris  chris     <span class=\"token number\">11</span> Jan <span class=\"token number\">10</span> <span class=\"token number\">16</span>:48 <span class=\"token builtin class-name\">.</span></pre></td></tr><tr><td data-num=\"6\"></td><td data-command=\"[admin@remotehost] #\"></td><td><pre>drwxr--r-x  <span class=\"token number\">45</span> chris  chris     <span class=\"token number\">92</span> Feb <span class=\"token number\">14</span> <span class=\"token number\">11</span>:10 <span class=\"token punctuation\">..</span></pre></td></tr><tr><td data-num=\"7\"></td><td data-command=\"\"></td><td><pre>-rwxr-xr-x   <span class=\"token number\">1</span> chris  chris    <span class=\"token number\">444</span> Aug <span class=\"token number\">25</span>  <span class=\"token number\">2013</span> backup</pre></td></tr><tr><td data-num=\"8\"></td><td data-command=\"\"></td><td><pre>-rwxr-xr-x   <span class=\"token number\">1</span> chris  chris    <span class=\"token number\">642</span> Jan <span class=\"token number\">17</span> <span class=\"token number\">14</span>:42 deploy</pre></td></tr><tr><td data-num=\"9\"></td><td data-command=\"[root@localhost] $\"></td><td><pre><span class=\"token function\">git</span> <span class=\"token function\">add</span> -A</pre></td></tr><tr><td data-num=\"10\"></td><td data-command=\"[root@localhost] $\"></td><td><pre><span class=\"token function\">git</span> commit -m <span class=\"token string\">\"update\"</span></pre></td></tr><tr><td data-num=\"11\"></td><td data-command=\"\"></td><td><pre><span class=\"token function\">git</span> push</pre></td></tr></table></figure><h1 id=\"quiz-练习题与答案\"><a class=\"anchor\" href=\"#quiz-练习题与答案\">#</a>  <code>quiz</code>  练习题与答案</h1>\n<p>这个功能是用来显示练习题的。<br />\n需要在 Front Matter 中添加 <code>quiz: true</code> ，以正确显示题型标签。</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"><span>几个例子</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>---</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>title: 练习题与答案</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>quiz: true</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>---</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>1. 编译时多态主要指运算符重载与函数重载，而运行时多态主要指虚函数。 {.quiz .true}</pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>2. 有基类 `SHAPE`，派生类 `CIRCLE`，声明如下变量：  {.quiz .multi}</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    ```cpp</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    SHAPE shape1,*p1;</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    CIRCLE circle1,*q1;</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    ```</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    下列哪些项是 “派生类对象替换基类对象”。</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    - `p1=&circle1;` {.correct}</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    - `q1=&shape1;`</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    - `shape1=circle1;` {.correct}</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    - `circle1=shape1;`</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>{.options}</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    > - :heavy_check_mark: 令基类对象的指针指向派生类对象</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    > - :x: 派生类指针指向基类的引用</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    > - :heavy_check_mark: 派生类对象给基类对象赋值</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    > - :x: 基类对象给派生类对象赋值</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    > {.options}</pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>3. 下列叙述正确的是 []{.gap} 。 {.quiz}</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    - 虚函数只能定义成无参函数</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    - 虚函数不能有返回值</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    - 能定义虚构造函数</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    - A、B、C 都不对 {.correct}</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>{.options}</pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>10. 如果定义 `int e=8; double f=6.4, g=8.9;`，则表达式 `f+int (e/3*int (f+g)/2)%4` 的值为 [9.4]{.gap}。 {.quiz .fill}</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    > 注意运算顺序和数据类型</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    > [8.4]{.mistake}</pre></td></tr></table></figure><p>点击选项可以显示答案，以及答案解析。</p>\n<ol>\n<li class=\"quiz\">\n<p>下列叙述正确的是 <span class=\"gap\"></span> 。</p>\n<ul class=\"options\">\n<li>虚函数只能定义成无参函数</li>\n<li>虚函数不能有返回值</li>\n<li>能定义虚构造函数</li>\n<li class=\"correct\">A、B、C 都不对</li>\n</ul>\n</li>\n<li class=\"quiz multi\">\n<p>有基类 <code>SHAPE</code> ，派生类 <code>CIRCLE</code> ，声明如下变量： </p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>SHAPE shape1<span class=\"token punctuation\">,</span><span class=\"token operator\">*</span>p1<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>CIRCLE circle1<span class=\"token punctuation\">,</span><span class=\"token operator\">*</span>q1<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>下列哪些项是 “派生类对象替换基类对象”。</p>\n<ul class=\"options\">\n<li class=\"correct\"><code>p1=&amp;circle1;</code> </li>\n<li><code>q1=&amp;shape1;</code></li>\n<li class=\"correct\"><code>shape1=circle1;</code> </li>\n<li><code>circle1=shape1;</code></li>\n</ul>\n<blockquote>\n<ul class=\"options\">\n<li>✔️ 令基类对象的指针指向派生类对象</li>\n<li>❌ 派生类指针指向基类的引用</li>\n<li>✔️ 派生类对象给基类对象赋值</li>\n<li>❌ 基类对象给派生类对象赋值</li>\n</ul>\n</blockquote>\n</li>\n<li class=\"quiz true\">\n<p>编译时多态主要指运算符重载与函数重载，而运行时多态主要指虚函数。</p>\n</li>\n<li class=\"quiz fill\">\n<p>如果定义 <code>int e=8; double f=6.4, g=8.9;</code> ，则表达式  <code>f+int(e/3*int(f+g)/2)%4</code>  的值为 <span class=\"gap\">9.4</span>。</p>\n<blockquote>\n<p>注意运算顺序和数据类型<br />\n<span class=\"mistake\"> 8.4</span></p>\n</blockquote>\n</li>\n</ol>\n<h2 id=\"使用说明\"><a class=\"anchor\" href=\"#使用说明\">#</a> 使用说明</h2>\n<p>本功能基于 <code>markdown-it-bracketed-spans</code>  和 <code>markdown-it-attrs</code></p>\n<table>\n<thead>\n<tr>\n<th>标签</th>\n<th>含义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>&#123;.quiz&#125;</code></td>\n<td>选择题</td>\n</tr>\n<tr>\n<td><code>&#123;.quiz .multi&#125;</code></td>\n<td>多选题</td>\n</tr>\n<tr>\n<td><code>&#123;.quiz .true&#125;</code></td>\n<td>正确的判断题</td>\n</tr>\n<tr>\n<td><code>&#123;.quiz .false&#125;</code></td>\n<td>错误的判断题</td>\n</tr>\n<tr>\n<td><code>&#123;.quiz .fill&#125;</code></td>\n<td>填空题</td>\n</tr>\n<tr>\n<td><code>[]&#123;.gap&#125;</code></td>\n<td>空白下划线</td>\n</tr>\n<tr>\n<td><code>[答案内容]&#123;.gap&#125;</code></td>\n<td>答案内容带下划线</td>\n</tr>\n<tr>\n<td><code>&#123;.options&#125;</code></td>\n<td>ABCDE 选项</td>\n</tr>\n<tr>\n<td><code>&#123;.correct&#125;</code></td>\n<td>选择题的正确选项</td>\n</tr>\n<tr>\n<td><code>&gt;</code></td>\n<td>答案解析</td>\n</tr>\n<tr>\n<td><code>[8.4]&#123;.mistake&#125;</code></td>\n<td>错题备注</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"emoji-绘文字\"><a class=\"anchor\" href=\"#emoji-绘文字\">#</a>  <code>emoji</code>  绘文字</h1>\n<p>本功能基于 <code>markdown-it-emoji</code> ，所有<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL21hcmtkb3duLWl0L21hcmtkb3duLWl0LWVtb2ppL2Jsb2IvbWFzdGVyL2xpYi9kYXRhL2Z1bGwuanNvbg==\">标签参考戳此</span></p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>:kissing_heart:</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>:ring:</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>:notes:</pre></td></tr></table></figure><p>😘 💍 🎶</p>\n<h1 id=\"effects-文字特效\"><a class=\"anchor\" href=\"#effects-文字特效\">#</a>  <code>effects</code>  文字特效</h1>\n<p>本功能基于 <code>markdown-it-ins</code> 、  <code>markdown-it-bracketed-spans</code>  和 <code>markdown-it-attrs</code></p>\n<blockquote>\n<p>本主题风格颜色通用样式：default、primary、success、info、warning、danger</p>\n</blockquote>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>++ 下划线 ++</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>++ 波浪线 ++{.wavy}</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>++ 着重点 ++{.dot}</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>++ 紫色下划线 ++{.primary}</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>++ 绿色波浪线 ++{.wavy .success}</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>++ 黄色着重点 ++{.dot .warning}</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>[赤橙黄绿青蓝紫]{.rainbow}</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>[红色]{.red}</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>[粉色]{.pink}</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>[橙色]{.orange}</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>[红色]{.yellow}</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>[绿色]{.green}</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>[靛青]{.aqua}</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>[蓝色]{.blue}</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>[紫色]{.purple}</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>[灰色]{.grey}</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>快捷键 [Ctrl]{.kbd} + [C]{.kbd .red}</pre></td></tr></table></figure><p><ins>下划线</ins><br />\n<ins class=\"wavy\">波浪线</ins><br />\n<ins class=\"dot\">着重点</ins><br />\n<ins class=\"primary\">紫色下划线</ins><br />\n<ins class=\"wavy success\">绿色波浪线</ins><br />\n<ins class=\"dot warning\">黄色着重点</ins><br />\n<span class=\"rainbow\">赤橙黄绿青蓝紫</span><br />\n<span class=\"red\">红色</span><br />\n<span class=\"pink\">粉色</span><br />\n<span class=\"orange\">橙色</span><br />\n<span class=\"yellow\">黄色</span><br />\n<span class=\"green\">绿色</span><br />\n<span class=\"aqua\">靛青</span><br />\n<span class=\"blue\">蓝色</span><br />\n<span class=\"purple\">紫色</span><br />\n<span class=\"grey\">灰色</span><br />\n快捷键 <span class=\"kbd\">Ctrl</span> + <span class=\"kbd red\">C</span></p>\n<h1 id=\"spoiler隐藏文字\"><a class=\"anchor\" href=\"#spoiler隐藏文字\">#</a>  <code>spoiler</code>  隐藏文字</h1>\n<p>本功能基于 <code>markdown-it-spoiler</code>  和 <code>markdown-it-attrs</code></p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>!! 黑幕黑幕黑幕黑幕黑幕黑幕！！： 鼠标滑过显示内容</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>!! 模糊模糊模糊模糊模糊模糊！！{.bulr} ： 选中文字显示内容</pre></td></tr></table></figure><p><span class=\"spoiler\" title=\"你知道得太多了\">黑幕黑幕黑幕黑幕黑幕黑幕</span> ： 鼠标滑过显示内容<br />\n<span class=\"spoiler bulr\" title=\"你知道得太多了\">模糊模糊模糊模糊模糊模糊</span> ： 选中文字显示内容</p>\n<h1 id=\"label-标签块\"><a class=\"anchor\" href=\"#label-标签块\">#</a>  <code>label</code>  标签块</h1>\n<p>本功能基于 <code>markdown-it-bracketed-spans</code>  和 <code>markdown-it-attrs</code> <br />\n 有以下颜色可选</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>[default]{.label}</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>[primary]{.label .primary}</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>[info]{.label .info}</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>[:heavy_check_mark:success]{.label .success}</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>[warning]{.label .warning}</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>[:broken_heart:danger]{.label .danger}</pre></td></tr></table></figure><p><span class=\"label\">default</span><br />\n<span class=\"label primary\">primary</span><br />\n<span class=\"label info\">info</span><br />\n<span class=\"label success\">✔️success</span><br />\n<span class=\"label warning\">warning</span><br />\n<span class=\"label danger\">💔danger</span></p>\n<h1 id=\"note-提醒块\"><a class=\"anchor\" href=\"#note-提醒块\">#</a>  <code>note</code>  提醒块</h1>\n<p>本功能基于 <code>markdown-it-container</code> <br />\n 标签为：</p>\n<table>\n<tbody>\n<tr>\n<td>开始行</td>\n<td><code>:::[风格颜色]</code></td>\n</tr>\n<tr>\n<td>结束行</td>\n<td><code>:::</code></td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>:::default</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>默认默认</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>:::</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>:::primary</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>基本基本</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>:::</pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>:::info</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>提示提示</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>:::</pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>:::success</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>成功成功</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>:::</pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>:::warning</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>警告警告</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>:::</pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>:::danger</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>危险危险</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>:::</pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>:::danger no-icon</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>危险危险</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>:::</pre></td></tr></table></figure><div class=\"note default\">\n<p>默认默认</p>\n</div>\n<div class=\"note primary\">\n<p>基本基本</p>\n</div>\n<div class=\"note info\">\n<p>提示提示</p>\n</div>\n<div class=\"note success\">\n<p>成功成功</p>\n</div>\n<div class=\"note warning\">\n<p>警告警告</p>\n</div>\n<div class=\"note danger\">\n<p>危险危险</p>\n</div>\n<div class=\"note danger no-icon\">\n<p>没有图标</p>\n</div>\n<h1 id=\"tab标签卡\"><a class=\"anchor\" href=\"#tab标签卡\">#</a>  <code>tab</code>  标签卡</h1>\n<p>本功能基于 <code>markdown-it-container</code> <br />\n 标签为：</p>\n<table>\n<tbody>\n<tr>\n<td>开始行</td>\n<td><code>;;;[同一ID] [标签名称]</code></td>\n</tr>\n<tr>\n<td>结束行</td>\n<td><code>;;;</code></td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>;;;id1 卡片 1</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>这里是卡片 1 的内容</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>** 加粗 **</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>[success]{.label .success}</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>&#123;% links %&#125;</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>- site: 優萌初華</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  owner: 霜月琉璃</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  url: https://shoka.lostyu.me</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  desc: 琉璃的医学 & 编程笔记</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  image: https://cdn.jsdelivr.net/gh/amehime/shoka@latest/images/avatar.jpg</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  color: \"#e9546b\"</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>&#123;% endlinks %&#125;</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>;;;</pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>;;;id1 卡片 2</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>这里是卡片 2 的内容</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>:::danger</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>危险危险</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>:::</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>- 第一行</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>- 第二行</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>;;;</pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>;;;id2 ②号标签卡片 1</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>这里是卡片 1 的内容</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>;;;</pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>;;;id2 ②号标签卡片 2</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>这里是卡片 2 的内容</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>;;;</pre></td></tr></table></figure><div class=\"tab\" data-id=\"id1\" data-title=\"卡片1\">\n<p>这里是卡片 1 的内容<br />\n<strong>加粗</strong><br />\n<span class=\"label success\"> success</span></p>\n<p><div class=\"links\"><div class=\"item\" title=\"霜月琉璃\" style=\"--block-color:#e9546b;\"><a href=\"https://shoka.lostyu.me\" class=\"image\" data-background-image=\"https://cdn.jsdelivr.net/gh/amehime/shoka@latest/images/avatar.jpg\"></a>\n          <div class=\"info\">\n          <a href=\"https://shoka.lostyu.me\" class=\"title\">優萌初華</a>\n          <p class=\"desc\">琉璃的医学 & 编程笔记</p>\n          </div></div></div></p>\n</div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"卡片2\">\n<p>这里是卡片 2 的内容</p>\n<div class=\"note danger\">\n<p>危险危险</p>\n</div>\n<ul>\n<li>第一行</li>\n<li>第二行</li>\n</ul>\n</div>\n<div class=\"tab\" data-id=\"id2\" data-title=\"②号标签卡片1\">\n<p>这里是卡片 1 的内容</p>\n</div>\n<div class=\"tab\" data-id=\"id2\" data-title=\"②号标签卡片2\">\n<p>这里是卡片 2 的内容</p>\n</div>\n<h1 id=\"collapse-折叠块\"><a class=\"anchor\" href=\"#collapse-折叠块\">#</a>  <code>collapse</code>  折叠块</h1>\n<p>本功能基于 <code>markdown-it-container</code> <br />\n 标签为：</p>\n<table>\n<tbody>\n<tr>\n<td>开始行</td>\n<td><code>+++[风格颜色] [标题文字]</code></td>\n</tr>\n<tr>\n<td>结束行</td>\n<td><code>+++</code></td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>+++ 默认默认 这里是一段文字</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>++ 下划线 ++</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>+++</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>+++primary 紫色</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>:::info</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>参考信息</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>:::</pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>- 第一行</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>- 第二行</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>+++</pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>+++info  蓝色</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>;;;id3 卡片 1</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>这里是卡片 1 的内容</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>;;;</pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>;;;id3 卡片 2</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>这里是卡片 2 的内容</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>;;;</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>+++</pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>+++success 绿色</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>&#123;% links %&#125;</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>- site: 優萌初華</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>  url: https://shoka.lostyu.me</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>  color: \"#e9546b\"</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>&#123;% endlinks %&#125;</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>+++</pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>+++warning 黄色</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>!! 警告警告警告警告警告！！{.bulr}</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>[label]{.label .success}</pre></td></tr><tr><td data-num=\"37\"></td><td><pre>+++</pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>+++danger 红色</pre></td></tr><tr><td data-num=\"40\"></td><td><pre>[danger]{.label .danger}</pre></td></tr><tr><td data-num=\"41\"></td><td><pre>+++</pre></td></tr></table></figure><details><summary>默认默认 这里是一段文字</summary><div>\n<p><ins>下划线</ins></p>\n</div></details>\n<details class=\"primary\"><summary>紫色</summary><div>\n<div class=\"note info\">\n<p>参考信息</p>\n</div>\n<ul>\n<li>第一行</li>\n<li>第二行</li>\n</ul>\n</div></details>\n<details class=\"info\"><summary>蓝色</summary><div>\n<div class=\"tab\" data-id=\"id3\" data-title=\"卡片1\">\n<p>这里是卡片 1 的内容<br />\n<ins class=\"wavy\">波浪线</ins></p>\n</div>\n<div class=\"tab\" data-id=\"id3\" data-title=\"卡片2\">\n<p>这里是卡片 2 的内容</p>\n</div>\n</div></details>\n<details class=\"success\"><summary>绿色</summary><div>\n<p><div class=\"links\"><div class=\"item\" title=\"優萌初華\" style=\"--block-color:#e9546b;\"><a href=\"https://shoka.lostyu.me\" class=\"image\" data-background-image=\"/images/404.png\"></a>\n          <div class=\"info\">\n          <a href=\"https://shoka.lostyu.me\" class=\"title\">優萌初華</a>\n          <p class=\"desc\">https://shoka.lostyu.me</p>\n          </div></div></div></p>\n</div></details>\n<details class=\"warning\"><summary>黄色</summary><div>\n<p><span class=\"spoiler bulr\" title=\"你知道得太多了\">警告警告警告警告警告</span><br />\n<span class=\"label success\"> label</span></p>\n</div></details>\n<details class=\"danger\"><summary>红色</summary><div>\n<p><span class=\"label danger\">danger</span></p>\n</div></details>\n<h1 id=\"tasklist-待办事项\"><a class=\"anchor\" href=\"#tasklist-待办事项\">#</a>  <code>taskList</code>  待办事项</h1>\n<p>本功能基于 <code>markdown-it-task-checkbox</code> 。<br />\n可以利用 <code>markdown-it-attrs</code>  添加风格颜色，只可以给 <code>ul</code>  标签添加，需要新建两行。</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>- [ ] 这是一个小叉叉</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>- [x] 这是一个红色勾勾</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>{.danger}</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>- [ ] 未完成</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>- [x] 完成</pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>{.primary}</pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>- [ ] 未完成</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>- [x] 默认颜色</pre></td></tr></table></figure><ul class=\"task-list danger\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_0\" disabled=\"true\" /><label for=\"cbx_0\"> 这是一个小叉叉</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_1\" checked=\"true\" disabled=\"true\" /><label for=\"cbx_1\"> 这是一个红色勾勾</label></li>\n</ul>\n<ul class=\"task-list primary\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_2\" disabled=\"true\" /><label for=\"cbx_2\"> 未完成</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_3\" checked=\"true\" disabled=\"true\" /><label for=\"cbx_3\"> 完成</label></li>\n</ul>\n<ul class=\"task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_4\" disabled=\"true\" /><label for=\"cbx_4\"> 未完成</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_5\" checked=\"true\" disabled=\"true\" /><label for=\"cbx_5\"> 默认颜色</label></li>\n</ul>\n<h1 id=\"furigana文字注音\"><a class=\"anchor\" href=\"#furigana文字注音\">#</a>  <code>furigana</code>  文字注音</h1>\n<p>原本用于日语汉字假名注音，但别的注音也可以。<br />\n为了兼容性，采用 <code>markdown-it-ruby</code>  的基本格式： <code>&#123;文字^注音&#125;</code> ，并且为了兼容表格，将分隔符由 <code>|</code>  换成了 <code>^</code> 。<br />\n注音分隔基于 <code>furigana-markdown-it</code> <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvZnVyaWdhbmEtbWFya2Rvd24taXQjcXVpY2stdXNhZ2U=\"> 显示说明看这里</span></p>\n<table>\n<tbody>\n<tr>\n<td><code>&#123;取り返す^とりかえす&#125;</code></td>\n<td><ruby>取<rp> (</rp><rt>と</rt><rp>)</rp> り<rt></rt>返<rp> (</rp><rt>かえ</rt><rp>)</rp> す<rt></rt></ruby></td>\n</tr>\n<tr>\n<td><code>&#123;可愛い犬^か+わい・い・いぬ&#125;</code></td>\n<td><ruby>可愛<rp> (</rp><rt>かわい</rt><rp>)</rp> い<rt></rt>犬<rp> (</rp><rt>いぬ</rt><rp>)</rp></ruby></td>\n</tr>\n<tr>\n<td><code>&#123;可愛い犬^か・わい・いいぬ&#125;</code></td>\n<td><ruby>可<rp> (</rp><rt>か</rt><rp>)</rp> 愛<rp> (</rp><rt>わい</rt><rp>)</rp> い<rt></rt>犬<rp> (</rp><rt>いぬ</rt><rp>)</rp></ruby></td>\n</tr>\n<tr>\n<td><code>&#123;アクセラレータ^accelerator&#125;</code></td>\n<td><ruby>アクセラレータ<rp> (</rp><rt>accelerator</rt><rp>)</rp></ruby></td>\n</tr>\n<tr>\n<td><code>&#123;accelerator^アクセラレータ&#125;</code></td>\n<td><ruby>accelerator<rp>(</rp><rt>アクセラレータ</rt><rp>)</rp></ruby></td>\n</tr>\n<tr>\n<td><code>&#123;食べる^たべる&#125;</code></td>\n<td><ruby>食<rp> (</rp><rt>た</rt><rp>)</rp> べる<rt></rt></ruby></td>\n</tr>\n<tr>\n<td><code>&#123;食べる^=たべる&#125;</code></td>\n<td><ruby>食べる<rp> (</rp><rt>たべる</rt><rp>)</rp></ruby></td>\n</tr>\n<tr>\n<td><code>&#123;あいうえお^*&#125;</code></td>\n<td><ruby>あ<rt>●</rt>い<rt>●</rt>う<rt>●</rt>え<rt>●</rt>お<rt>●</rt></ruby></td>\n</tr>\n<tr>\n<td><code>&#123;あいうえお^*❤&#125;</code></td>\n<td><ruby>あ<rt>❤</rt>い<rt>❤</rt>う<rt>❤</rt>え<rt>❤</rt>お<rt>❤</rt></ruby></td>\n</tr>\n<tr>\n<td><code>&#123;常用账号^contact&#125;</code></td>\n<td><ruby>常用账号<rp> (</rp><rt>contact</rt><rp>)</rp></ruby></td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"math数学公式\"><a class=\"anchor\" href=\"#math数学公式\">#</a>  <code>math</code>  数学公式</h1>\n<p>本功能基于 <code>markdown-it-katex</code> <br />\n 在 Front Matter 中添加 <code>math: true</code>  以支持<span class=\"exturl\" data-url=\"aHR0cHM6Ly9rYXRleC5vcmcv\"> KaTex</span></p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>---</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>title: 数学公式显示</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>math: true</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>---</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>行内公式：$\\sqrt {3x-1}+(1+x)^2$</pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>独立块显示：</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>$$\\begin {array}{c}</pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\\nabla \\times \\vec {\\mathbf {B}} -\\, \\frac1c\\, \\frac {\\partial\\vec {\\mathbf {E}}}{\\partial t} &</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>= \\frac {4\\pi}{c}\\vec {\\mathbf {j}}    \\nabla \\cdot \\vec {\\mathbf {E}} & = 4 \\pi \\rho \\\\</pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\\nabla \\times \\vec {\\mathbf {E}}\\, +\\, \\frac1c\\, \\frac {\\partial\\vec {\\mathbf {B}}}{\\partial t} & = \\vec {\\mathbf {0}} \\\\</pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\\nabla \\cdot \\vec {\\mathbf {B}} & = 0</pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\\end {array}$$</pre></td></tr></table></figure><p>行内公式：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msqrt><mrow><mn>3</mn><mi>x</mi><mo>−</mo><mn>1</mn></mrow></msqrt><mo>+</mo><mo stretchy=\"false\">(</mo><mn>1</mn><mo>+</mo><mi>x</mi><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\sqrt{3x-1}+(1+x)^2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.04em;vertical-align:-0.17444499999999996em;\"></span><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8655550000000001em;\"><span class=\"svg-align\" style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\" style=\"padding-left:0.833em;\"><span class=\"mord\">3</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">1</span></span></span><span style=\"top:-2.825555em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"hide-tail\" style=\"min-width:0.853em;height:1.08em;\"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702\nc-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14\nc0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54\nc44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10\ns173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429\nc69,-144,104.5,-217.7,106.5,-221\nl0 -0\nc5.3,-9.3,12,-14,20,-14\nH400000v40H845.2724\ns-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7\nc-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z\nM834 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.17444499999999996em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span></p>\n<p>独立块显示：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.15999999999999992em\" columnalign=\"center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi mathvariant=\"normal\">∇</mi><mo>×</mo><mover accent=\"true\"><mi mathvariant=\"bold\">B</mi><mo>⃗</mo></mover><mo>−</mo><mtext> </mtext><mfrac><mn>1</mn><mi>c</mi></mfrac><mtext> </mtext><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mover accent=\"true\"><mi mathvariant=\"bold\">E</mi><mo>⃗</mo></mover></mrow><mrow><mi mathvariant=\"normal\">∂</mi><mi>t</mi></mrow></mfrac></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>=</mo><mfrac><mrow><mn>4</mn><mi>π</mi></mrow><mi>c</mi></mfrac><mover accent=\"true\"><mi mathvariant=\"bold\">j</mi><mo>⃗</mo></mover><mi mathvariant=\"normal\">∇</mi><mo>⋅</mo><mover accent=\"true\"><mi mathvariant=\"bold\">E</mi><mo>⃗</mo></mover></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>=</mo><mn>4</mn><mi>π</mi><mi>ρ</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi mathvariant=\"normal\">∇</mi><mo>×</mo><mover accent=\"true\"><mi mathvariant=\"bold\">E</mi><mo>⃗</mo></mover><mtext> </mtext><mo>+</mo><mtext> </mtext><mfrac><mn>1</mn><mi>c</mi></mfrac><mtext> </mtext><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mover accent=\"true\"><mi mathvariant=\"bold\">B</mi><mo>⃗</mo></mover></mrow><mrow><mi mathvariant=\"normal\">∂</mi><mi>t</mi></mrow></mfrac></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>=</mo><mover accent=\"true\"><mn mathvariant=\"bold\">0</mn><mo>⃗</mo></mover></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi mathvariant=\"normal\">∇</mi><mo>⋅</mo><mover accent=\"true\"><mi mathvariant=\"bold\">B</mi><mo>⃗</mo></mover></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>=</mo><mn>0</mn></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{array}{c}\n\n\\nabla \\times \\vec{\\mathbf{B}} -\\, \\frac1c\\, \\frac{\\partial\\vec{\\mathbf{E}}}{\\partial t} &amp;\n= \\frac{4\\pi}{c}\\vec{\\mathbf{j}}    \\nabla \\cdot \\vec{\\mathbf{E}} &amp; = 4 \\pi \\rho \\\\\n\n\\nabla \\times \\vec{\\mathbf{E}}\\, +\\, \\frac1c\\, \\frac{\\partial\\vec{\\mathbf{B}}}{\\partial t} &amp; = \\vec{\\mathbf{0}} \\\\\n\n\\nabla \\cdot \\vec{\\mathbf{B}} &amp; = 0\n\n\\end{array}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:4.1938640000000005em;vertical-align:-1.846932em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.3469320000000002em;\"><span style=\"top:-4.346932000000001em;\"><span class=\"pstrut\" style=\"height:3.072377em;\"></span><span class=\"mord\"><span class=\"mord\">∇</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9691099999999999em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">B</span></span></span></span><span style=\"top:-3.25511em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.15216em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.845108em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">c</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.072377em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\">t</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9691099999999999em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathbf mtight\">E</span></span></span></span><span style=\"top:-2.96911em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.15216em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span><span style=\"top:-2.9145549999999996em;\"><span class=\"pstrut\" style=\"height:3.072377em;\"></span><span class=\"mord\"><span class=\"mord\">∇</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9691099999999999em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">E</span></span></span></span><span style=\"top:-3.25511em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.15216em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.845108em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">c</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.072377em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\">t</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9691099999999999em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathbf mtight\">B</span></span></span></span><span style=\"top:-2.96911em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.15216em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span><span style=\"top:-1.585445em;\"><span class=\"pstrut\" style=\"height:3.072377em;\"></span><span class=\"mord\"><span class=\"mord\">∇</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9691099999999999em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">B</span></span></span></span><span style=\"top:-3.25511em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.15216em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.846932em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.3469320000000002em;\"><span style=\"top:-4.346932000000001em;\"><span class=\"pstrut\" style=\"height:3.072377em;\"></span><span class=\"mord\"><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.845108em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">c</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">4</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">π</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9774399999999999em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">j</span></span></span></span><span style=\"top:-3.26344em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2355em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.19444em;\"><span></span></span></span></span></span><span class=\"mord\">∇</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9691099999999999em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">E</span></span></span></span><span style=\"top:-3.25511em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.15216em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span></span></span><span style=\"top:-2.9145549999999996em;\"><span class=\"pstrut\" style=\"height:3.072377em;\"></span><span class=\"mord\"><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.92744em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">0</span></span></span></span><span style=\"top:-3.21344em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2355em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span></span></span><span style=\"top:-1.585445em;\"><span class=\"pstrut\" style=\"height:3.072377em;\"></span><span class=\"mord\"><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.846932em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.3469320000000002em;\"><span style=\"top:-4.346932000000001em;\"><span class=\"pstrut\" style=\"height:3.072377em;\"></span><span class=\"mord\"><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\">4</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">π</span><span class=\"mord mathnormal\">ρ</span></span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span></span></span></span></span></span></span></p>\n<h1 id=\"mermaid流程图\"><a class=\"anchor\" href=\"#mermaid流程图\">#</a>  <code>mermaid</code>  流程图</h1>\n<p>本功能基于 <code>markdown-it-mermaid</code> <br />\n 在 Front Matter 中添加 <code>mermaid: true</code>  以支持<span class=\"exturl\" data-url=\"aHR0cHM6Ly9tZXJtYWlkLWpzLmdpdGh1Yi5pby9tZXJtYWlkLyMv\"> Mermaid</span></p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>---</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>title: 流程图显示</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>mermaid: true</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>---</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>```mermaid</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>graph LR</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    A [Square Rect] -- Link text --> B ((Circle))</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    A --> C (Round Rect)</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    B --> D {Rhombus}</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    C --> D</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>```</pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>```mermaid</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>sequenceDiagram</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    loop Daily query</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        Alice->>Bob: Hello Bob, how are you?</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        alt is sick</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            Bob->>Alice: Not so good :(</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        else is well</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            Bob->>Alice: Feeling fresh like a daisy</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        end</pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        opt Extra response</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            Bob->>Alice: Thanks for asking</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        end</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    end</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>```</pre></td></tr></table></figure><pre class=\"mermaid graph\"><svg id=\"mermaid-1601977061239\" width=\"100%\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" height=\"167\" style=\"max-width: 497.7718811035156px;\" viewBox=\"0 0 497.7718811035156 167\"><g><g class=\"output\"><g class=\"clusters\"></g><g class=\"edgePaths\"><g class=\"edgePath LS-A LE-B\" id=\"L-A-B\" style=\"opacity: 1;\"><path class=\"path\" d=\"M103.65391791044776,69.75L171.0390625,39L247.625,39\" marker-end=\"url(#arrowhead15)\" style=\"fill:none\"></path><defs><marker id=\"arrowhead15\" viewBox=\"0 0 10 10\" refX=\"9\" refY=\"5\" markerUnits=\"strokeWidth\" markerWidth=\"8\" markerHeight=\"6\" orient=\"auto\"><path d=\"M 0 0 L 10 5 L 0 10 z\" class=\"arrowheadPath\" style=\"stroke-width: 1; stroke-dasharray: 1, 0;\"></path></marker></defs></g><g class=\"edgePath LS-A LE-C\" id=\"L-A-C\" style=\"opacity: 1;\"><path class=\"path\" d=\"M103.65391791044776,108.75L171.0390625,139.5L228.234375,139.5\" marker-end=\"url(#arrowhead16)\" style=\"fill:none\"></path><defs><marker id=\"arrowhead16\" viewBox=\"0 0 10 10\" refX=\"9\" refY=\"5\" markerUnits=\"strokeWidth\" markerWidth=\"8\" markerHeight=\"6\" orient=\"auto\"><path d=\"M 0 0 L 10 5 L 0 10 z\" class=\"arrowheadPath\" style=\"stroke-width: 1; stroke-dasharray: 1, 0;\"></path></marker></defs></g><g class=\"edgePath LS-B LE-D\" id=\"L-B-D\" style=\"opacity: 1;\"><path class=\"path\" d=\"M309.625,39L354.015625,39L400.8184709260876,68.44715483685182\" marker-end=\"url(#arrowhead17)\" style=\"fill:none\"></path><defs><marker id=\"arrowhead17\" viewBox=\"0 0 10 10\" refX=\"9\" refY=\"5\" markerUnits=\"strokeWidth\" markerWidth=\"8\" markerHeight=\"6\" orient=\"auto\"><path d=\"M 0 0 L 10 5 L 0 10 z\" class=\"arrowheadPath\" style=\"stroke-width: 1; stroke-dasharray: 1, 0;\"></path></marker></defs></g><g class=\"edgePath LS-C LE-D\" id=\"L-C-D\" style=\"opacity: 1;\"><path class=\"path\" d=\"M329.015625,139.5L354.015625,139.5L400.81846998718345,111.05284575012297\" marker-end=\"url(#arrowhead18)\" style=\"fill:none\"></path><defs><marker id=\"arrowhead18\" viewBox=\"0 0 10 10\" refX=\"9\" refY=\"5\" markerUnits=\"strokeWidth\" markerWidth=\"8\" markerHeight=\"6\" orient=\"auto\"><path d=\"M 0 0 L 10 5 L 0 10 z\" class=\"arrowheadPath\" style=\"stroke-width: 1; stroke-dasharray: 1, 0;\"></path></marker></defs></g></g><g class=\"edgeLabels\"><g class=\"edgeLabel\" transform=\"translate(171.0390625,39)\" style=\"opacity: 1;\"><g transform=\"translate(-32.1953125,-9.5)\" class=\"label\"><rect rx=\"0\" ry=\"0\" width=\"64.359375\" height=\"19.03125\"></rect><text><tspan xml:space=\"preserve\" dy=\"1em\" x=\"1\">Link text</tspan></text></g></g><g class=\"edgeLabel\" transform=\"\" style=\"opacity: 1;\"><g transform=\"translate(0,0)\" class=\"label\"><rect rx=\"0\" ry=\"0\" width=\"0\" height=\"0\"></rect><text><tspan xml:space=\"preserve\" dy=\"1em\" x=\"1\"></tspan></text></g></g><g class=\"edgeLabel\" transform=\"\" style=\"opacity: 1;\"><g transform=\"translate(0,0)\" class=\"label\"><rect rx=\"0\" ry=\"0\" width=\"0\" height=\"0\"></rect><text><tspan xml:space=\"preserve\" dy=\"1em\" x=\"1\"></tspan></text></g></g><g class=\"edgeLabel\" transform=\"\" style=\"opacity: 1;\"><g transform=\"translate(0,0)\" class=\"label\"><rect rx=\"0\" ry=\"0\" width=\"0\" height=\"0\"></rect><text><tspan xml:space=\"preserve\" dy=\"1em\" x=\"1\"></tspan></text></g></g></g><g class=\"nodes\"><g class=\"node default\" id=\"flowchart-A-8\" transform=\"translate(60.921875,89.25)\" style=\"opacity: 1;\"><rect rx=\"0\" ry=\"0\" x=\"-52.921875\" y=\"-19.5\" width=\"105.84375\" height=\"39\" class=\"label-container\"></rect><g class=\"label\" transform=\"translate(0,0)\"><g transform=\"translate(-42.921875,-9.5)\"><text style=\"\"><tspan xml:space=\"preserve\" dy=\"1em\" x=\"1\">Square Rect</tspan></text></g></g></g><g class=\"node default\" id=\"flowchart-B-9\" transform=\"translate(278.625,39)\" style=\"opacity: 1;\"><circle x=\"-31\" y=\"-19.5\" r=\"31\" class=\"label-container\"></circle><g class=\"label\" transform=\"translate(0,0)\"><g transform=\"translate(-21,-9.5)\"><text style=\"\"><tspan xml:space=\"preserve\" dy=\"1em\" x=\"1\">Circle</tspan></text></g></g></g><g class=\"node default\" id=\"flowchart-C-11\" transform=\"translate(278.625,139.5)\" style=\"opacity: 1;\"><rect rx=\"5\" ry=\"5\" x=\"-50.390625\" y=\"-19.5\" width=\"100.78125\" height=\"39\" class=\"label-container\"></rect><g class=\"label\" transform=\"translate(0,0)\"><g transform=\"translate(-40.390625,-9.5)\"><text style=\"\"><tspan xml:space=\"preserve\" dy=\"1em\" x=\"1\">Round Rect</tspan></text></g></g></g><g class=\"node default\" id=\"flowchart-D-13\" transform=\"translate(434.39374923706055,89.25)\" style=\"opacity: 1;\"><polygon points=\"55.378125000000004,0 110.75625000000001,-55.378125000000004 55.378125000000004,-110.75625000000001 0,-55.378125000000004\" transform=\"translate(-55.378125000000004,55.378125000000004)\" class=\"label-container\"></polygon><g class=\"label\" transform=\"translate(0,0)\"><g transform=\"translate(-32.03125,-9.5)\"><text style=\"\"><tspan xml:space=\"preserve\" dy=\"1em\" x=\"1\">Rhombus</tspan></text></g></g></g></g></g></g></svg></pre><pre class=\"mermaid\"><svg id=\"mermaid-1601977061964\" width=\"100%\" xmlns=\"http://www.w3.org/2000/svg\" height=\"563\" style=\"max-width: 498px;\" viewBox=\"-50 -10 498 563\"><g></g><g><line id=\"actor0\" x1=\"75\" y1=\"5\" x2=\"75\" y2=\"552\" class=\"actor-line\" stroke-width=\"0.5px\" stroke=\"#999\"></line><rect x=\"0\" y=\"0\" fill=\"#eaeaea\" stroke=\"#666\" width=\"150\" height=\"65\" rx=\"3\" ry=\"3\" class=\"actor\"></rect><text x=\"75\" y=\"32.5\" dominant-baseline=\"central\" alignment-baseline=\"central\" class=\"actor\" style=\"text-anchor: middle; font-size: 14px; font-weight: 400; font-family: Open-Sans, sans-serif;\"><tspan x=\"75\" dy=\"0\">Alice</tspan></text></g><g><line id=\"actor1\" x1=\"323\" y1=\"5\" x2=\"323\" y2=\"552\" class=\"actor-line\" stroke-width=\"0.5px\" stroke=\"#999\"></line><rect x=\"248\" y=\"0\" fill=\"#eaeaea\" stroke=\"#666\" width=\"150\" height=\"65\" rx=\"3\" ry=\"3\" class=\"actor\"></rect><text x=\"323\" y=\"32.5\" dominant-baseline=\"central\" alignment-baseline=\"central\" class=\"actor\" style=\"text-anchor: middle; font-size: 14px; font-weight: 400; font-family: Open-Sans, sans-serif;\"><tspan x=\"323\" dy=\"0\">Bob</tspan></text></g><defs><marker id=\"arrowhead\" refX=\"5\" refY=\"2\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\"><path d=\"M 0,0 V 4 L6,2 Z\"></path></marker></defs><defs><marker id=\"crosshead\" markerWidth=\"15\" markerHeight=\"8\" orient=\"auto\" refX=\"16\" refY=\"4\"><path fill=\"black\" stroke=\"#000000\" stroke-width=\"1px\" d=\"M 9,2 V 6 L16,4 Z\" style=\"stroke-dasharray: 0, 0;\"></path><path fill=\"none\" stroke=\"#000000\" stroke-width=\"1px\" d=\"M 0,1 L 6,7 M 6,1 L 0,7\" style=\"stroke-dasharray: 0, 0;\"></path></marker></defs><defs><marker id=\"sequencenumber\" refX=\"15\" refY=\"15\" markerWidth=\"60\" markerHeight=\"40\" orient=\"auto\"><circle cx=\"15\" cy=\"15\" r=\"6\"></circle></marker></defs><text x=\"199\" y=\"125\" text-anchor=\"middle\" dominant-baseline=\"middle\" alignment-baseline=\"middle\" class=\"messageText\" dy=\"1em\" style=\"font-family: &quot;trebuchet ms&quot;, verdana, arial; font-size: 16px; font-weight: 400;\">Hello Bob, how are you?</text><line x1=\"75\" y1=\"158\" x2=\"323\" y2=\"158\" class=\"messageLine0\" stroke-width=\"2\" stroke=\"none\" marker-end=\"url(#arrowhead)\" style=\"fill: none;\"></line><text x=\"199\" y=\"218\" text-anchor=\"middle\" dominant-baseline=\"middle\" alignment-baseline=\"middle\" class=\"messageText\" dy=\"1em\" style=\"font-family: &quot;trebuchet ms&quot;, verdana, arial; font-size: 16px; font-weight: 400;\">Not so good :(</text><line x1=\"323\" y1=\"251\" x2=\"75\" y2=\"251\" class=\"messageLine0\" stroke-width=\"2\" stroke=\"none\" marker-end=\"url(#arrowhead)\" style=\"fill: none;\"></line><text x=\"199\" y=\"311\" text-anchor=\"middle\" dominant-baseline=\"middle\" alignment-baseline=\"middle\" class=\"messageText\" dy=\"1em\" style=\"font-family: &quot;trebuchet ms&quot;, verdana, arial; font-size: 16px; font-weight: 400;\">Feeling fresh like a daisy</text><line x1=\"323\" y1=\"344\" x2=\"75\" y2=\"344\" class=\"messageLine0\" stroke-width=\"2\" stroke=\"none\" marker-end=\"url(#arrowhead)\" style=\"fill: none;\"></line><g><line x1=\"65\" y1=\"168\" x2=\"333\" y2=\"168\" class=\"loopLine\"></line><line x1=\"333\" y1=\"168\" x2=\"333\" y2=\"354\" class=\"loopLine\"></line><line x1=\"65\" y1=\"354\" x2=\"333\" y2=\"354\" class=\"loopLine\"></line><line x1=\"65\" y1=\"168\" x2=\"65\" y2=\"354\" class=\"loopLine\"></line><line x1=\"65\" y1=\"266\" x2=\"333\" y2=\"266\" class=\"loopLine\" style=\"stroke-dasharray: 3, 3;\"></line><polygon points=\"65,168 115,168 115,181 106.6,188 65,188\" class=\"labelBox\"></polygon><text x=\"90\" y=\"181\" text-anchor=\"middle\" dominant-baseline=\"middle\" alignment-baseline=\"middle\" class=\"labelText\" style=\"font-family: &quot;trebuchet ms&quot;, verdana, arial; font-size: 16px; font-weight: 400;\">alt</text><text x=\"224\" y=\"186\" text-anchor=\"middle\" class=\"loopText\" style=\"font-family: &quot;trebuchet ms&quot;, verdana, arial; font-size: 16px; font-weight: 400;\"><tspan x=\"224\">[is sick]</tspan></text><text x=\"199\" y=\"284\" text-anchor=\"middle\" class=\"loopText\" style=\"font-family: &quot;trebuchet ms&quot;, verdana, arial; font-size: 16px; font-weight: 400;\">[is well]</text></g><text x=\"199\" y=\"414\" text-anchor=\"middle\" dominant-baseline=\"middle\" alignment-baseline=\"middle\" class=\"messageText\" dy=\"1em\" style=\"font-family: &quot;trebuchet ms&quot;, verdana, arial; font-size: 16px; font-weight: 400;\">Thanks for asking</text><line x1=\"323\" y1=\"447\" x2=\"75\" y2=\"447\" class=\"messageLine0\" stroke-width=\"2\" stroke=\"none\" marker-end=\"url(#arrowhead)\" style=\"fill: none;\"></line><g><line x1=\"65\" y1=\"364\" x2=\"333\" y2=\"364\" class=\"loopLine\"></line><line x1=\"333\" y1=\"364\" x2=\"333\" y2=\"457\" class=\"loopLine\"></line><line x1=\"65\" y1=\"457\" x2=\"333\" y2=\"457\" class=\"loopLine\"></line><line x1=\"65\" y1=\"364\" x2=\"65\" y2=\"457\" class=\"loopLine\"></line><polygon points=\"65,364 115,364 115,377 106.6,384 65,384\" class=\"labelBox\"></polygon><text x=\"90\" y=\"377\" text-anchor=\"middle\" dominant-baseline=\"middle\" alignment-baseline=\"middle\" class=\"labelText\" style=\"font-family: &quot;trebuchet ms&quot;, verdana, arial; font-size: 16px; font-weight: 400;\">opt</text><text x=\"224\" y=\"382\" text-anchor=\"middle\" class=\"loopText\" style=\"font-family: &quot;trebuchet ms&quot;, verdana, arial; font-size: 16px; font-weight: 400;\"><tspan x=\"224\">[Extra response]</tspan></text></g><g><line x1=\"55\" y1=\"75\" x2=\"343\" y2=\"75\" class=\"loopLine\"></line><line x1=\"343\" y1=\"75\" x2=\"343\" y2=\"467\" class=\"loopLine\"></line><line x1=\"55\" y1=\"467\" x2=\"343\" y2=\"467\" class=\"loopLine\"></line><line x1=\"55\" y1=\"75\" x2=\"55\" y2=\"467\" class=\"loopLine\"></line><polygon points=\"55,75 105,75 105,88 96.6,95 55,95\" class=\"labelBox\"></polygon><text x=\"80\" y=\"88\" text-anchor=\"middle\" dominant-baseline=\"middle\" alignment-baseline=\"middle\" class=\"labelText\" style=\"font-family: &quot;trebuchet ms&quot;, verdana, arial; font-size: 16px; font-weight: 400;\">loop</text><text x=\"224\" y=\"93\" text-anchor=\"middle\" class=\"loopText\" style=\"font-family: &quot;trebuchet ms&quot;, verdana, arial; font-size: 16px; font-weight: 400;\"><tspan x=\"224\">[Daily query]</tspan></text></g><g><rect x=\"0\" y=\"487\" fill=\"#eaeaea\" stroke=\"#666\" width=\"150\" height=\"65\" rx=\"3\" ry=\"3\" class=\"actor\"></rect><text x=\"75\" y=\"519.5\" dominant-baseline=\"central\" alignment-baseline=\"central\" class=\"actor\" style=\"text-anchor: middle; font-size: 14px; font-weight: 400; font-family: Open-Sans, sans-serif;\"><tspan x=\"75\" dy=\"0\">Alice</tspan></text></g><g><rect x=\"248\" y=\"487\" fill=\"#eaeaea\" stroke=\"#666\" width=\"150\" height=\"65\" rx=\"3\" ry=\"3\" class=\"actor\"></rect><text x=\"323\" y=\"519.5\" dominant-baseline=\"central\" alignment-baseline=\"central\" class=\"actor\" style=\"text-anchor: middle; font-size: 14px; font-weight: 400; font-family: Open-Sans, sans-serif;\"><tspan x=\"323\" dy=\"0\">Bob</tspan></text></g></svg></pre>",
            "tags": [
                "计算机科学",
                "二进制杂谈",
                "Theme Shoka Documentation",
                "教程",
                "Hexo"
            ]
        },
        {
            "id": "https://shoka.lostyu.me/computer-science/note/theme-shoka-doc/display/",
            "url": "https://shoka.lostyu.me/computer-science/note/theme-shoka-doc/display/",
            "title": "Step.3 界面显示",
            "date_published": "2020-08-13T13:12:48.000Z",
            "content_html": "<div class=\"note primary\">\n<p><a href=\"/computer-science/note/theme-shoka-doc/\">🚀快速开始</a> - <a href=\"/computer-science/note/theme-shoka-doc/dependents/\">💌依赖插件</a> - <a href=\"/computer-science/note/theme-shoka-doc/config/\">📌基本配置</a> - <a href=\"/computer-science/note/theme-shoka-doc/display/\"><strong>🌈界面显示</strong></a> - <a href=\"/computer-science/note/theme-shoka-doc/special/\">🦄特殊功能</a></p>\n</div>\n<h1 id=\"文章封面图\"><a class=\"anchor\" href=\"#文章封面图\">#</a> 文章封面图</h1>\n<ul>\n<li>\n<p>如果文章的 Front Matter 设置了 <code>cover: image path</code> ，则封面会显示这张图片。</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"><span>举个栗子</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">title</span><span class=\"token punctuation\">:</span> Images</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key atrule\">cover</span><span class=\"token punctuation\">:</span> assets/wallpaper<span class=\"token punctuation\">-</span>2572384.jpg</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 或者写成</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token key atrule\">cover</span><span class=\"token punctuation\">:</span> http<span class=\"token punctuation\">:</span>//placehold.it/350x150.jpg</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">---</span></pre></td></tr></table></figure><p>这里 <code>cover</code>  的值可以是位于 <code>source</code>  目录里的图片文件，此处是 <code>&lt;root&gt;/source/assets/wallpaper-2572384.jpg</code>  文件，也可以是一个某网址。</p>\n</li>\n<li>\n<p>如果文章是一个 <code>gallery post</code> ，即 Front Matter 设置了 <code>photos</code> ，则会封面会显示设置的第一张图片。</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"><span>举个栗子</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">title</span><span class=\"token punctuation\">:</span> Gallery Post</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key atrule\">photos</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">-</span> assets/wallpaper<span class=\"token punctuation\">-</span>2572384.jpg</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">-</span> assets/wallpaper<span class=\"token punctuation\">-</span>2311325.jpg</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">-</span> assets/wallpaper<span class=\"token punctuation\">-</span>878514.jpg</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">-</span> http<span class=\"token punctuation\">:</span>//placehold.it/350x150.jpg</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">---</span></pre></td></tr></table></figure><p>此时默认会显示第一个图片，即位于 <code>&lt;root&gt;/source/assets/</code>  目录里的 <code>wallpaper-2572384.jpg</code> 。</p>\n</li>\n<li>\n<p>如果以上设置均不存在，将显示一张随机图片。<br />\n图片取自 <code>&lt;root&gt;/themes/shoka/_images.yml</code>  中，使用渣浪图床。</p>\n</li>\n</ul>\n<h1 id=\"首页置顶文章\"><a class=\"anchor\" href=\"#首页置顶文章\">#</a> 首页置顶文章</h1>\n<p>在文章的 Front Matter 设置 <code>sticky: true</code> ，则该文章将显示在首页最上方的 <code>置顶文章</code> 列。<br />\n多篇文章按照发布时间倒序排列，不分页。</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>---</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>title: 置顶文章</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>sticky: true</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>---</pre></td></tr></table></figure><h1 id=\"首页精选分类\"><a class=\"anchor\" href=\"#首页精选分类\">#</a> 首页精选分类</h1>\n<p>想要在首页显示分类翻转块，需要按照以下示例的方式，给需要显示的分类加上封面图。</p>\n<ol>\n<li>\n<p>首先，修改站点的 <code>_config.yml</code> <br />\n 找到 <code>category_map:</code> ，配置每个分类对应的英文映射，比如：</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">category_map</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">计算机科学</span><span class=\"token punctuation\">:</span> computer<span class=\"token punctuation\">-</span>science</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token key atrule\">Java</span><span class=\"token punctuation\">:</span> java</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token key atrule\">C++</span><span class=\"token punctuation\">:</span> cpp</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token key atrule\">二进制杂谈</span><span class=\"token punctuation\">:</span> note</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token key atrule\">计算机程序设计（C++）-西安交通大学</span><span class=\"token punctuation\">:</span> course<span class=\"token punctuation\">-</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token key atrule\">零基础学Java语言-浙江大学-翁恺</span><span class=\"token punctuation\">:</span> course<span class=\"token punctuation\">-</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token key atrule\">面向对象程序设计-Java语言-浙江大学-翁恺</span><span class=\"token punctuation\">:</span> course<span class=\"token punctuation\">-</span><span class=\"token number\">2</span></pre></td></tr></table></figure><blockquote>\n<p>注意：hexo 会自动处理路径中的特殊字符，<span></span>~`!@#$%^&amp;*()-_+=<span></span>{}|\\;:&quot;'&lt;&gt;,.? 以及空格，这些全部会被替换成 <code>-</code> <br />\n 所以避免在设置中使用上述字符，否则可导致无法抓取到目录下的 <code>cover.jpg</code></p>\n</blockquote>\n</li>\n<li>\n<p>在 <code>&lt;root&gt;/source/_posts</code>  文件夹相应的目录里，存放封面图<br />\n例子：如 <a href=\"https://shoka.lostyu.me/computer-science/java/course-1/week-1/\">第 1 周 计算</a> 这篇文章。<br />\n所处的分类是</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">categories</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">-</span> <span class=\"token punctuation\">[</span>计算机科学<span class=\"token punctuation\">,</span> Java<span class=\"token punctuation\">,</span> 零基础学Java语言<span class=\"token punctuation\">-</span>浙江大学<span class=\"token punctuation\">-</span>翁恺<span class=\"token punctuation\">]</span></pre></td></tr></table></figure><p>现在需要在首页显示 <code>零基础学Java语言-浙江大学-翁恺</code> 这个分类，翻转卡片后，显示这个分类下的文章们。<br />\n而该分类经过英文映射，它的路径将是 <code>/computer-science/java/course-1/</code> 。</p>\n<p>那么，请在 <code>&lt;root&gt;/source/_posts/computer-science/java/course-1/</code>  的目录下放置 <code>cover.jpg</code>  文件。<br />\n只要 <code>分类路径</code> 对应的目录下<strong>存在</strong> <code>cover.jpg</code>  文件，这个分类就会在首页显示。<br />\n在进行 <code>hexo g</code>  时，本分类的封面图会自动被复制到 public 目录里相应的位置。</p>\n</li>\n<li>\n<p>事实上，为了方便文章管理，这个分类下所有文章的 md 文件，我都会放在 <code>&lt;root&gt;/source/_posts/computer-science/java/course-1/</code>  这个目录下。</p>\n<p>且站点 <code>_config.yml</code>  里，永久链接设置如下</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">permalink</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">:</span>title/</pre></td></tr></table></figure><p><code>hexo g</code>  后，文章的 html 文件们将全部生成到 <code>&lt;root&gt;/public/computer-science/java/course-1/</code>  目录。<br />\n具体可以查看<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2FtZWhpbWUvc2hva2E=\">本博客的 github 仓库</span>。</p>\n</li>\n<li>\n<p>文章详情界面中的 <code>系列文章</code> ，显示的是与当前文章同一分类的其他文章，并按照文章名正序排序。</p>\n</li>\n</ol>\n<blockquote>\n<p>o (*￣▽￣*) ゞ<br />\n其实，不设置 <code>category_map</code>  也可以，只要在分类路径对应的文件夹下存在 <code>cover.jpg</code>  文件就行。<br />\n现在，这项功能与 <code>category_dir</code>  的配置也无关， <code>hexo g</code>  生成后，图片会自动被转移到 <code>category_dir</code>  的相关子目录下。</p>\n</blockquote>\n<h1 id=\"图片展示与相册\"><a class=\"anchor\" href=\"#图片展示与相册\">#</a> 图片展示与相册</h1>\n<p>在文章的 Front Matter 设置 <code>fancybox: false</code> ，可以关闭文章页的图片展示功能。<br />\n使用<span class=\"exturl\" data-url=\"aHR0cDovL21pcm9tYW5uaW5vLmdpdGh1Yi5pby9KdXN0aWZpZWQtR2FsbGVyeS8=\"> Justified-Gallery</span> 对 Gallery Post 内图案进行排列。</p>\n<p>下面介绍一些小技巧：</p>\n<ol>\n<li>让图案下方显示 <code>title</code>  的 markdown 代码</li>\n</ol>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>![这里是 alt](https://tva3.sinaimg.cn/large/6833939bly1gicis081o9j20zk0m8dmr.jpg \"这里是 title\")</pre></td></tr></table></figure><p><img data-src=\"https://tva3.sinaimg.cn/large/6833939bly1gicis081o9j20zk0m8dmr.jpg\" alt=\"这里是alt\" title=\"这里是title\" /></p>\n<ol start=\"2\">\n<li>除了在 Front Matter 里配置 <code>photos</code>  可以显示相册图案列表外，还可以这样写</li>\n</ol>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>## 图案列表 No.1</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>![](https://tva3.sinaimg.cn/large/6833939bly1giclfdu6exj20zk0m87hw.jpg \"这里是 title\")</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>![](https://tva3.sinaimg.cn/large/6833939bly1giclflwv2aj20zk0m84qp.jpg)</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>![](https://tva3.sinaimg.cn/large/6833939bly1giclg5ms2rj20zk0m8u0x.jpg)</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>![](https://tva3.sinaimg.cn/large/6833939bly1giclhnx9glj20zk0m8npd.jpg)</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>{.gallery}</pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>## 图案列表 No.2</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>![](https://tva3.sinaimg.cn/large/6833939bly1gicitht3xtj20zk0m8k5v.jpg)</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>![](https://tva3.sinaimg.cn/large/6833939bly1giclil3m4ej20zk0m8tn8.jpg)</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>![](https://tva3.sinaimg.cn/large/6833939bly1gicljgocqbj20zk0m8e81.jpg)</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>![](https://tva3.sinaimg.cn/large/6833939bly1gipetfk5zwj20zk0m8e81.jpg)</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>{.gallery data-height=\"220\"}</pre></td></tr></table></figure><p><code>data-height</code>  用来设置每行的高度，默认为 <code>120</code></p>\n<h2 id=\"图案列表no1\"><a class=\"anchor\" href=\"#图案列表no1\">#</a> 图案列表 No.1</h2>\n<p class=\"gallery\"><img data-src=\"https://tva3.sinaimg.cn/large/6833939bly1giclfdu6exj20zk0m87hw.jpg\" alt=\"\" title=\"这里是title\" /><br />\n<img data-src=\"https://tva3.sinaimg.cn/large/6833939bly1giclflwv2aj20zk0m84qp.jpg\" alt=\"\" /><br />\n<img data-src=\"https://tva3.sinaimg.cn/large/6833939bly1giclg5ms2rj20zk0m8u0x.jpg\" alt=\"\" /><br />\n<img data-src=\"https://tva3.sinaimg.cn/large/6833939bly1giclhnx9glj20zk0m8npd.jpg\" alt=\"\" /></p>\n<h2 id=\"图案列表no2\"><a class=\"anchor\" href=\"#图案列表no2\">#</a> 图案列表 No.2</h2>\n<p class=\"gallery\" data-height=\"220\"><img data-src=\"https://tva3.sinaimg.cn/large/6833939bly1gicitht3xtj20zk0m8k5v.jpg\" alt=\"\" /><br />\n<img data-src=\"https://tva3.sinaimg.cn/large/6833939bly1giclil3m4ej20zk0m8tn8.jpg\" alt=\"\" /><br />\n<img data-src=\"https://tva3.sinaimg.cn/large/6833939bly1gicljgocqbj20zk0m8e81.jpg\" alt=\"\" /><br />\n<img data-src=\"https://tva3.sinaimg.cn/large/6833939bly1gipetfk5zwj20zk0m8e81.jpg\" alt=\"\" /></p>\n<h1 id=\"底部widgets\"><a class=\"anchor\" href=\"#底部widgets\">#</a> 底部 widgets</h1>\n<p>目前页面底部可以显示两个小部件，即 <code>随机文章</code> 和 <code>最近评论</code> 。<br />\n可以在主题 <code>_config.yml</code>  中配置开关。</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">widgets</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">random_posts</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token key atrule\">recent_comments</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr></table></figure><h1 id=\"修改页面配色\"><a class=\"anchor\" href=\"#修改页面配色\">#</a> 修改页面配色</h1>\n<p>自行查看 <code>themes/shoka/source/css/_colors.styl</code></p>\n<h1 id=\"修改404页面\"><a class=\"anchor\" href=\"#修改404页面\">#</a> 修改 404 页面</h1>\n<p>找到 <code>themes/shoka/layout/page.njk</code>  的第 57 - 61 行。<br />\n59 行的内容可以任意修改。</p>\n<p>如果只是想修改图片的话，位于： <code>themes/shoka/source/images/404.png</code></p>\n",
            "tags": [
                "计算机科学",
                "二进制杂谈",
                "Theme Shoka Documentation",
                "教程",
                "Hexo"
            ]
        },
        {
            "id": "https://shoka.lostyu.me/computer-science/note/theme-shoka-doc/config/",
            "url": "https://shoka.lostyu.me/computer-science/note/theme-shoka-doc/config/",
            "title": "Step.2 基本配置",
            "date_published": "2020-08-13T12:56:48.000Z",
            "content_html": "<div class=\"note primary\">\n<p><a href=\"/computer-science/note/theme-shoka-doc/\">🚀快速开始</a> - <a href=\"/computer-science/note/theme-shoka-doc/dependents/\">💌依赖插件</a> - <a href=\"/computer-science/note/theme-shoka-doc/config/\"><strong>📌基本配置</strong></a> - <a href=\"/computer-science/note/theme-shoka-doc/display/\">🌈界面显示</a> - <a href=\"/computer-science/note/theme-shoka-doc/special/\">🦄特殊功能</a></p>\n</div>\n<p>这里修改的是 <code>themes/shoka/_config.yml</code>  内的配置参数。<br />\n建议在根目录新建一个 yml 文件，命名为 <code>_config.shoka.yml</code> ，并在这个自定义文件中增改配置，而非直接修改主体文件夹内的 <code>_config.yml</code> 。</p>\n<h1 id=\"站点别称\"><a class=\"anchor\" href=\"#站点别称\">#</a> 站点别称</h1>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">alternate</span><span class=\"token punctuation\">:</span> Yume Shoka</pre></td></tr></table></figure><p>这里设置的名称代替 Logo，显示在页面顶部，以及页尾©️处</p>\n<h1 id=\"静态文件目录\"><a class=\"anchor\" href=\"#静态文件目录\">#</a> 静态文件目录</h1>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">statics</span><span class=\"token punctuation\">:</span> / <span class=\"token comment\">#//cdn.jsdelivr.net/gh/amehime/shoka@latest/</span></pre></td></tr></table></figure><p>默认值是 <code>/</code> ，指使用本地静态文件<br />\n可以修改成 <code>//cdn.jsdelivr.net/gh/您的github用户名/您的项目名@latest/</code>  这种形式，以使用 jsDelivr 进行加速。<br />\nPS：jsDelivr 并不是实时更新，重新生成文件后需要耐心等待</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">assets</span><span class=\"token punctuation\">:</span> assets</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key atrule\">css</span><span class=\"token punctuation\">:</span> css</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token key atrule\">js</span><span class=\"token punctuation\">:</span> js</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token key atrule\">images</span><span class=\"token punctuation\">:</span> images</pre></td></tr></table></figure><p>静态文件所处目录的实际目录名，这些一般不改。</p>\n<h1 id=\"加载谷歌字体\"><a class=\"anchor\" href=\"#加载谷歌字体\">#</a> 加载谷歌字体</h1>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">font</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token comment\"># Font options:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token comment\"># `external: true` will load this font family from `host` above.</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token comment\"># `family: Times New Roman`. Without any quotes.</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token comment\"># `size: x.x`. Use `em` as unit. Default: 1 (16px)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token comment\"># Global font settings used for all elements inside &lt;body>.</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token key atrule\">global</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token key atrule\">external</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token key atrule\">family</span><span class=\"token punctuation\">:</span> Mulish</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token key atrule\">size</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token comment\"># Font settings for alternate title.</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token key atrule\">logo</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token key atrule\">external</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token key atrule\">family</span><span class=\"token punctuation\">:</span> Fredericka the Great</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token key atrule\">size</span><span class=\"token punctuation\">:</span> <span class=\"token number\">3.5</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token comment\"># Font settings for site title.</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  <span class=\"token key atrule\">title</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token key atrule\">external</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token key atrule\">family</span><span class=\"token punctuation\">:</span> Noto Serif JP</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token key atrule\">size</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2.5</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  <span class=\"token comment\"># Font settings for headlines (&lt;h1> to &lt;h6>).</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  <span class=\"token key atrule\">headings</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token key atrule\">external</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token key atrule\">family</span><span class=\"token punctuation\">:</span> Noto Serif SC</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token key atrule\">size</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>  <span class=\"token comment\"># Font settings for posts.</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>  <span class=\"token key atrule\">posts</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token key atrule\">external</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token key atrule\">family</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>  <span class=\"token comment\"># Font settings for &lt;code> and code blocks.</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>  <span class=\"token key atrule\">codes</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token key atrule\">external</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token key atrule\">family</span><span class=\"token punctuation\">:</span> Inconsolata</pre></td></tr></table></figure><p>此功能基本参考 NexT。<br />\n加粗标题的字体总是使用 <code>Noto Serif</code> ，为了正确友好的显示日文中的汉字，会先后加载 <code>headings</code>  和 <code>title</code>  的字体设置。</p>\n<h1 id=\"加载动画\"><a class=\"anchor\" href=\"#加载动画\">#</a> 加载动画</h1>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 是否显示页面加载动画 loading-cat</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key atrule\">loader</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token key atrule\">start</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span> <span class=\"token comment\"># 当初次打开页面时，显示加载动画</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token key atrule\">switch</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span> <span class=\"token comment\"># tab 切换到其他页面时，显示加载动画</span></pre></td></tr></table></figure><p>tab 切换后只是显示 loading 动画，实际并未重新加载页面</p>\n<h1 id=\"边栏位置\"><a class=\"anchor\" href=\"#边栏位置\">#</a> 边栏位置</h1>\n<p>边栏可以选择在左侧，或右侧</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">sidebar</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token comment\"># Sidebar Position.</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token key atrule\">position</span><span class=\"token punctuation\">:</span> left</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token comment\">#position: right</span></pre></td></tr></table></figure><h1 id=\"菜单与社交按钮icon\"><a class=\"anchor\" href=\"#菜单与社交按钮icon\">#</a> 菜单与社交按钮 icon</h1>\n<p>这里没有直接使用 Font Awesome，是因为用不到那么多 icon 感觉非常浪费，因此在 Iconfont 上重新建立了一个项目。<br />\n <code>font-family</code>  设为 <code>ic</code> ，所有字体样式前缀为 <code>i-</code> ，具体参见 <code>themes/shoka/source/css/scaffolding/iconfont.styl</code> 。<br />\n全部图标预览可以打开 <code>themes/shoka/source/css/_common/scaffolding/icon/demo_index.html</code>  文件查看。</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">menu</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">home</span><span class=\"token punctuation\">:</span> / <span class=\"token punctuation\">|</span><span class=\"token punctuation\">|</span> home</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token key atrule\">about</span><span class=\"token punctuation\">:</span> /about/ <span class=\"token punctuation\">|</span><span class=\"token punctuation\">|</span> user</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token key atrule\">posts</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token key atrule\">default</span><span class=\"token punctuation\">:</span> / <span class=\"token punctuation\">|</span><span class=\"token punctuation\">|</span> feather</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token key atrule\">archives</span><span class=\"token punctuation\">:</span> /archives/ <span class=\"token punctuation\">|</span><span class=\"token punctuation\">|</span> list<span class=\"token punctuation\">-</span>alt</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token key atrule\">categories</span><span class=\"token punctuation\">:</span> /categories/ <span class=\"token punctuation\">|</span><span class=\"token punctuation\">|</span> th</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token key atrule\">tags</span><span class=\"token punctuation\">:</span> /tags/ <span class=\"token punctuation\">|</span><span class=\"token punctuation\">|</span> tags</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token comment\"># friends: /friends/ || heart</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token comment\"># links: /links/ || magic</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token key atrule\">social</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token key atrule\">github</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//github.com/yourname <span class=\"token punctuation\">|</span><span class=\"token punctuation\">|</span> github <span class=\"token punctuation\">|</span><span class=\"token punctuation\">|</span> \"<span class=\"token comment\">#191717\"</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token comment\">#google: https://plus.google.com/yourname || google</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token key atrule\">twitter</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//twitter.com/yourname <span class=\"token punctuation\">|</span><span class=\"token punctuation\">|</span> twitter <span class=\"token punctuation\">|</span><span class=\"token punctuation\">|</span> \"<span class=\"token comment\">#00aff0\"</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token key atrule\">zhihu</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//www.zhihu.com/people/yourname <span class=\"token punctuation\">|</span><span class=\"token punctuation\">|</span> zhihu <span class=\"token punctuation\">|</span><span class=\"token punctuation\">|</span> \"<span class=\"token comment\">#1e88e5\"</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token key atrule\">music</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//music.163.com/<span class=\"token comment\">#/user/home?id=yourid || cloud-music || \"#e60026\"</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token key atrule\">weibo</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//weibo.com/yourname <span class=\"token punctuation\">|</span><span class=\"token punctuation\">|</span> weibo <span class=\"token punctuation\">|</span><span class=\"token punctuation\">|</span> \"<span class=\"token comment\">#ea716e\"</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token key atrule\">about</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//about.me/yourname <span class=\"token punctuation\">|</span><span class=\"token punctuation\">|</span> address<span class=\"token punctuation\">-</span>card <span class=\"token punctuation\">|</span><span class=\"token punctuation\">|</span> \"<span class=\"token comment\">#3b5998\"</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token comment\">#email: mailto:yourname@mail.com || envelope || \"#55acd5\"</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  <span class=\"token comment\">#facebook: https://www.facebook.com/yourname || facebook</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  <span class=\"token comment\">#stackoverflow: https://stackoverflow.com/yourname || stack-overflow</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  <span class=\"token comment\">#youtube: https://youtube.com/yourname || youtube</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  <span class=\"token comment\">#instagram: https://instagram.com/yourname || instagram</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>  <span class=\"token comment\">#skype: skype:yourname?call|chat || skype</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  <span class=\"token comment\">#douban: https://www.douban.com/people/yourname/ || douban</span></pre></td></tr></table></figure><p>如上，使用 <code>||</code>  作为分隔符，依次为  <code>链接 || 图标 || 颜色</code> 。<br />\n注意，只需要写图标名称，如 <code>github</code> ，则会自动转换为 <code>ic i-github</code> 。<br />\n十六进制颜色码需要 <code>&quot;&quot;</code>  包绕。</p>\n<p><code>menu</code>  支持一级子目录，子目录设置中的第一项必须为 <code>default</code> ，用来定义父级按钮的样式。<br />\n菜单显示文字在 <code>&lt;root&gt;/themes/shoka/languages/</code>  语言包中定义：</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">menu</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">home</span><span class=\"token punctuation\">:</span> 首页</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token key atrule\">posts</span><span class=\"token punctuation\">:</span> 文章</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token key atrule\">archives</span><span class=\"token punctuation\">:</span> 归档</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token key atrule\">categories</span><span class=\"token punctuation\">:</span> 分类</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token key atrule\">tags</span><span class=\"token punctuation\">:</span> 标签</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token key atrule\">about</span><span class=\"token punctuation\">:</span> 关于</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token key atrule\">search</span><span class=\"token punctuation\">:</span> 搜索</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token key atrule\">friends</span><span class=\"token punctuation\">:</span> 友達</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token key atrule\">links</span><span class=\"token punctuation\">:</span> 网址</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token key atrule\">travellings</span><span class=\"token punctuation\">:</span> 开往</pre></td></tr></table></figure><h1 id=\"图片修改\"><a class=\"anchor\" href=\"#图片修改\">#</a> 图片修改</h1>\n<p>位于 <code>&lt;root&gt;/themes/shoka/source/images/</code>  目录里的图片们都是可以修改的。</p>\n<ol>\n<li>修改头像  <code>avatar.jpg</code> <br />\n 如果要设置不同的文件名，请在主题 <code>_config.yml</code>  修改</li>\n</ol>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">sidebar</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token comment\"># Replace the default avatar image and set the url here.</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token key atrule\">avatar</span><span class=\"token punctuation\">:</span> avatar.jpg</pre></td></tr></table></figure><ol start=\"2\">\n<li>\n<p>修改打赏二维码文件，共三个</p>\n</li>\n<li>\n<p>修改  <code>favicon.ico</code>  和 <code>apple-touch-icon.png</code></p>\n</li>\n<li>\n<p>修改随机图库<br />\n图片列表位于 <code>&lt;root&gt;/themes/shoka/_images.yml</code>  中。<br />\n使用了渣浪图库，使用一些上传工具，比如<span class=\"exturl\" data-url=\"aHR0cHM6Ly9waWMuZ2ltaG95LmNvbS8=\">这里</span><br />\n上传后图片的链接是 <code>http://wx4.sinaimg.cn/large/6833939bly1gicmnywqgpj20zk0m8dwx.jpg</code> 。<br />\n只需要增加一行，写上 <code>- 6833939bly1gicmnywqgpj20zk0m8dwx.jpg</code> 。</p>\n</li>\n</ol>\n<h1 id=\"背景音乐\"><a class=\"anchor\" href=\"#背景音乐\">#</a> 背景音乐</h1>\n<p>在主题 <code>_config.yml</code>  文件中设置全局播放列表。<br />\n在文章的 Front Matter 中，设置文章专有播放列表，访问该文章页面时，将覆盖全局配置。</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">audio</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token punctuation\">-</span> https<span class=\"token punctuation\">:</span>//music.163.com/song<span class=\"token punctuation\">?</span>id=1387098940</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token punctuation\">-</span> https<span class=\"token punctuation\">:</span>//music.163.com/<span class=\"token comment\">#/playlist?id=2088001742</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token punctuation\">-</span> https<span class=\"token punctuation\">:</span>//www.xiami.com/collect/250830668</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token punctuation\">-</span> https<span class=\"token punctuation\">:</span>//y.qq.com/n/yqq/playsquare/3535982902.html</pre></td></tr></table></figure><p>如上，可以直接使用网易云、虾米、QQ 音乐的播放列表、单曲，可以同时填写多个。</p>\n<h1 id=\"文章字数及阅读时间统计\"><a class=\"anchor\" href=\"#文章字数及阅读时间统计\">#</a> 文章字数及阅读时间统计</h1>\n<p>安装好 hexo-symbols-count-time 插件后，不需要修改站点配置文件，直接使用插件默认配置就行。</p>\n<p>需要修改主题配置文件，找到两处 <code>cout</code> ，修改为 <code>true</code> ：</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 文章字数统计</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key atrule\">post</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token key atrule\">count</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 页尾全站统计</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token key atrule\">footer</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token key atrule\">since</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2010</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token key atrule\">count</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr></table></figure><h1 id=\"文章评论\"><a class=\"anchor\" href=\"#文章评论\">#</a> 文章评论</h1>\n<p>在主题 <code>_config.yml</code>  文件中设置好 LeanCloud 的 appId 和 appKey，<span class=\"exturl\" data-url=\"aHR0cHM6Ly92YWxpbmUuanMub3JnL3F1aWNrc3RhcnQuaHRtbA==\">如何获取戳此</span>。</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">valine</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">appId</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">#Your_appId</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token key atrule\">appKey</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">#Your_appkey</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token key atrule\">placeholder</span><span class=\"token punctuation\">:</span> ヽ(○´∀`)ﾉ♪ <span class=\"token comment\"># Comment box placeholder</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token key atrule\">avatar</span><span class=\"token punctuation\">:</span> mp <span class=\"token comment\"># Gravatar style : mp, identicon, monsterid, wavatar, robohash, retro</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token key atrule\">pageSize</span><span class=\"token punctuation\">:</span> <span class=\"token number\">10</span> <span class=\"token comment\"># Pagination size</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token key atrule\">lang</span><span class=\"token punctuation\">:</span> zh<span class=\"token punctuation\">-</span>CN</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token key atrule\">visitor</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span> <span class=\"token comment\"># 文章访问量统计</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token key atrule\">NoRecordIP</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span> <span class=\"token comment\"># 不 IP 记录</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token key atrule\">serverURLs</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># When the custom domain name is enabled, fill it in here (it will be detected automatically by default, no need to fill in)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token key atrule\">tagMeta</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">-</span> 主人</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">-</span> 小伙伴</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">-</span> 新朋友</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token key atrule\">master</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token comment\"># - hash of master@email.com</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token comment\"># - hash of master2@email.com</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token key atrule\">friends</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token comment\"># - hash of friend@email.com</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token comment\"># - hash of friend2@email.com</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  <span class=\"token key atrule\">powerMode</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span> <span class=\"token comment\"># 默认打开评论框输入特效</span></pre></td></tr></table></figure><p>在文章 Front Matter 中也可以配置上述参数，访问该文章页面时，将覆盖全局配置。<br />\n尤其可以用来配置一个特殊的 placeholder。</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">valine</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">placeholder</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"1. 提问前请先仔细阅读本文档⚡\\n2. 页面显示问题💥，请提供控制台截图📸或者您的测试网址\\n3. 其他任何报错💣，请提供详细描述和截图📸，祝食用愉快💪\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">---</span></pre></td></tr></table></figure><p>评论通知与管理工具建议使用这个<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0Rlc2VydHNQL1ZhbGluZS1BZG1pbg==\"> Valine-Admin</span>。<br />\n注意 <code>SITE_URL</code>  需要以 <code>/</code>  结尾。</p>\n<h1 id=\"页面特效\"><a class=\"anchor\" href=\"#页面特效\">#</a> 页面特效</h1>\n<p>除了上述评论框的输入特效，单击页面的烟花效果配置如下</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">fireworks</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span> <span class=\"token comment\"># 是否启用</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token key atrule\">color</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 烟花颜色</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">-</span> <span class=\"token string\">\"rgba(255,182,185,.9)\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">-</span> <span class=\"token string\">\"rgba(250,227,217,.9)\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">-</span> <span class=\"token string\">\"rgba(187,222,214,.9)\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">-</span> <span class=\"token string\">\"rgba(138,198,209,.9)\"</span></pre></td></tr></table></figure><h1 id=\"加载第三方组件\"><a class=\"anchor\" href=\"#加载第三方组件\">#</a> 加载第三方组件</h1>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">vendors</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">css</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token key atrule\">katex</span><span class=\"token punctuation\">:</span> npm/katex@0/dist/katex.min.css</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token key atrule\">comment</span><span class=\"token punctuation\">:</span> css/comment.css</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token key atrule\">fancybox</span><span class=\"token punctuation\">:</span> combine/npm/@fancyapps/fancybox@3.5.7/dist/jquery.fancybox.min.css<span class=\"token punctuation\">,</span>npm/justifiedGallery@3.8.1/dist/css/justifiedGallery.min.css</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token key atrule\">js</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token key atrule\">pace</span><span class=\"token punctuation\">:</span> npm/pace<span class=\"token punctuation\">-</span>js@1.0.2/pace.min.js</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token key atrule\">pjax</span><span class=\"token punctuation\">:</span> npm/pjax@0.2.8/pjax.min.js</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token key atrule\">fetch</span><span class=\"token punctuation\">:</span> npm/whatwg<span class=\"token punctuation\">-</span>fetch@3.4.0/dist/fetch.umd.min.js</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token key atrule\">anime</span><span class=\"token punctuation\">:</span> npm/animejs@3.2.0/lib/anime.min.js</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token key atrule\">algolia</span><span class=\"token punctuation\">:</span> npm/algoliasearch@4/dist/algoliasearch<span class=\"token punctuation\">-</span>lite.umd.js</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token key atrule\">instantsearch</span><span class=\"token punctuation\">:</span> npm/instantsearch.js@4/dist/instantsearch.production.min.js</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token key atrule\">lazyload</span><span class=\"token punctuation\">:</span> npm/lozad@1/dist/lozad.min.js</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token key atrule\">quicklink</span><span class=\"token punctuation\">:</span> npm/quicklink@2/dist/quicklink.umd.js</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token key atrule\">fancybox</span><span class=\"token punctuation\">:</span> combine/npm/jquery@3.5.1/dist/jquery.min.js<span class=\"token punctuation\">,</span>npm/@fancyapps/fancybox@3.5.7/dist/jquery.fancybox.min.js<span class=\"token punctuation\">,</span>npm/justifiedGallery@3.8.1/dist/js/jquery.justifiedGallery.min.js</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token key atrule\">valine</span><span class=\"token punctuation\">:</span> gh/amehime/MiniValine@4.2.2<span class=\"token punctuation\">-</span>beta8/dist/MiniValine.min.js</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token key atrule\">copy_tex</span><span class=\"token punctuation\">:</span> npm/katex@0/dist/contrib/copy<span class=\"token punctuation\">-</span>tex.min.js</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token key atrule\">chart</span><span class=\"token punctuation\">:</span> npm/frappe<span class=\"token punctuation\">-</span>charts@1.5.0/dist/frappe<span class=\"token punctuation\">-</span>charts.min.iife.min.js</pre></td></tr></table></figure><p>包括</p>\n<table>\n<tbody>\n<tr>\n<td><code>pace</code></td>\n<td>加载进度条</td>\n<td>全局</td>\n</tr>\n<tr>\n<td><code>pjax</code></td>\n<td>页面无刷新加载</td>\n<td>全局</td>\n</tr>\n<tr>\n<td><code>anime</code></td>\n<td>js 动画效果</td>\n<td>全局</td>\n</tr>\n<tr>\n<td><code>algolia</code>   <code>instantsearch</code></td>\n<td>基于 algolia 的站内搜索</td>\n<td>全局</td>\n</tr>\n<tr>\n<td><code>lazyload</code></td>\n<td>图片懒加载</td>\n<td>全局</td>\n</tr>\n<tr>\n<td><code>quicklink</code></td>\n<td>链接资源预加载</td>\n<td>全局</td>\n</tr>\n<tr>\n<td><code>fetch</code></td>\n<td>获取播放列表</td>\n<td>全局</td>\n</tr>\n<tr>\n<td><code>katex</code>   <code>copy_tex</code></td>\n<td>数学公式显示及复制</td>\n<td>按需</td>\n</tr>\n<tr>\n<td><code>fancybox</code></td>\n<td>图片放大显示及排列</td>\n<td>按需</td>\n</tr>\n<tr>\n<td><code>valine</code></td>\n<td>基于 LeanCloud 的评论系统及文章阅读次数统计</td>\n<td>按需</td>\n</tr>\n<tr>\n<td><code>chart</code></td>\n<td>图表显示</td>\n<td>按需</td>\n</tr>\n</tbody>\n</table>\n<p>以上文件加载全部基于 jsDelivr，并对全局加载的组件进行了文件合并。<br />\n如果不明白啥意思，则不要轻易修改。</p>\n",
            "tags": [
                "计算机科学",
                "二进制杂谈",
                "Theme Shoka Documentation",
                "教程",
                "Hexo"
            ]
        },
        {
            "id": "https://shoka.lostyu.me/computer-science/note/theme-shoka-doc/dependents/",
            "url": "https://shoka.lostyu.me/computer-science/note/theme-shoka-doc/dependents/",
            "title": "Step.1 依赖插件",
            "date_published": "2020-08-13T12:46:48.000Z",
            "content_html": "<div class=\"note primary\">\n<p><a href=\"/computer-science/note/theme-shoka-doc/\">🚀快速开始</a> - <a href=\"/computer-science/note/theme-shoka-doc/dependents/\"><strong>💌依赖插件</strong></a> - <a href=\"/computer-science/note/theme-shoka-doc/config/\">📌基本配置</a> - <a href=\"/computer-science/note/theme-shoka-doc/display/\">🌈界面显示</a> - <a href=\"/computer-science/note/theme-shoka-doc/special/\">🦄特殊功能</a></p>\n</div>\n<div class=\"note warning\">\n<p>请务必将 hexo-renderer-multi-markdown-it 升级到最新版，目前为 0.1.4</p>\n</div>\n<p>Theme Shoka 依赖以下 Hexo 插件</p>\n<table>\n<thead>\n<tr>\n<th>插件名称</th>\n<th>npm 地址</th>\n<th>功能</th>\n<th>依赖程度</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>hexo-renderer-multi-markdown-it</td>\n<td><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvaGV4by1yZW5kZXJlci1tdWx0aS1tYXJrZG93bi1pdA==\">链接</span></td>\n<td>md 文件渲染器，压缩 css/js/html</td>\n<td>必需</td>\n</tr>\n<tr>\n<td>hexo-autoprefixer</td>\n<td><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvaGV4by1hdXRvcHJlZml4ZXI=\">链接</span></td>\n<td>给生成的 css 文件们添加浏览器前缀</td>\n<td>必需</td>\n</tr>\n<tr>\n<td>hexo-algoliasearch</td>\n<td><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvaGV4by1hbGdvbGlhc2VhcmNo\">链接</span></td>\n<td>站内搜索功能</td>\n<td>搜索按钮失灵</td>\n</tr>\n<tr>\n<td>hexo-symbols-count-time</td>\n<td><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvaGV4by1zeW1ib2xzLWNvdW50LXRpbWU=\">链接</span></td>\n<td>文章或站点字数及阅读时间统计</td>\n<td>统计没有</td>\n</tr>\n<tr>\n<td>hexo-feed</td>\n<td><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvaGV4by1mZWVk\">链接</span></td>\n<td>生成 Feed 文件</td>\n<td>Feed 文件没有</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>没有正确安装以上插件的话，本主题会报错 or 无法正确显示 or 部分功能失效。<br />\n <code>hexo-renderer-multi-markdown-it</code>  请注意升级到最新版</p>\n</blockquote>\n<p>安装完以上插件后，修改站点 <code>_config.yml</code>  文件，加入相关配置。</p>\n<h1 id=\"multi-markdown-it安装与配置\"><a class=\"anchor\" href=\"#multi-markdown-it安装与配置\">#</a> multi-markdown-it 安装与配置</h1>\n<h2 id=\"安装\"><a class=\"anchor\" href=\"#安装\">#</a> 安装</h2>\n<ol>\n<li>\n<p>安装前，记得务必卸载掉默认的 <code>hexo-renderer-marked</code> ，以及别的 markdown 文件渲染器。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> un hexo-renderer-marked --save</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 或者</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">yarn</span> remove hexo-renderer-marked</pre></td></tr></table></figure></li>\n<li>\n<p>安装</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> i hexo-renderer-multi-markdown-it --save</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 或者</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">yarn</span> <span class=\"token function\">add</span> hexo-renderer-multi-markdown-it</pre></td></tr></table></figure></li>\n<li>\n<p>如果安装缓慢，或者失败<br />\n如报错</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>ERROR: Failed to download Chromium r515411<span class=\"token operator\">!</span> Set <span class=\"token string\">\"PUPPETEER_SKIP_CHROMIUM_DOWNLOAD\"</span> <span class=\"token function\">env</span> variable to skip download.</pre></td></tr></table></figure><p>因为有一步需要下载 puppeteer 里的 Chromium 内核，基于天朝内部网络现状，这一步能不能成功要靠科学和运气，所以为了避免安装失败，需要加上 <code>--ignore-scripts</code>  跳过 Chromium 内核的下载。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> i hexo-renderer-multi-markdown-it --save --ignore-scripts</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 或者</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">yarn</span> <span class=\"token function\">add</span> hexo-renderer-multi-markdown-it --ignore-scripts</pre></td></tr></table></figure><p>puppeteer 主要是用来渲染 mermaid 流程图，只要文章中不使用 mermaid 就没有任何问题，如果要使用 mermaid 建议还是想办法完全安装。</p>\n</li>\n</ol>\n<h2 id=\"配置\"><a class=\"anchor\" href=\"#配置\">#</a> 配置</h2>\n<ol>\n<li>加入 <code>markdown</code>  配置，用来渲染 md 文件</li>\n</ol>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">markdown</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">render</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 渲染器设置</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token key atrule\">html</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span> <span class=\"token comment\"># 是否过滤 HTML 标签</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token key atrule\">xhtmlOut</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span> <span class=\"token comment\"># 使用 '/' 来闭合单标签 （比如 &lt;br />）。</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token key atrule\">breaks</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span> <span class=\"token comment\"># 转换段落里的 '\\n' 到 &lt;br>。</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token key atrule\">linkify</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span> <span class=\"token comment\"># 将类似 URL 的文本自动转换为链接。</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token key atrule\">typographer</span><span class=\"token punctuation\">:</span> </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token key atrule\">quotes</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'“”‘’'</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token key atrule\">plugins</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># markdown-it 插件设置</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">plugin</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> markdown<span class=\"token punctuation\">-</span>it<span class=\"token punctuation\">-</span>toc<span class=\"token punctuation\">-</span>and<span class=\"token punctuation\">-</span>anchor</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token key atrule\">options</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 文章目录以及锚点应用的 class 名称，shoka 主题必须设置成这样</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>          <span class=\"token key atrule\">tocClassName</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'toc'</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>          <span class=\"token key atrule\">anchorClassName</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'anchor'</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">plugin</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> markdown<span class=\"token punctuation\">-</span>it<span class=\"token punctuation\">-</span>multimd<span class=\"token punctuation\">-</span>table</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token key atrule\">options</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>          <span class=\"token key atrule\">multiline</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>          <span class=\"token key atrule\">rowspan</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>          <span class=\"token key atrule\">headerless</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">plugin</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> ./markdown<span class=\"token punctuation\">-</span>it<span class=\"token punctuation\">-</span>furigana</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token key atrule\">options</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>          <span class=\"token key atrule\">fallbackParens</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"()\"</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">plugin</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> ./markdown<span class=\"token punctuation\">-</span>it<span class=\"token punctuation\">-</span>spoiler</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token key atrule\">options</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>          <span class=\"token key atrule\">title</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"你知道得太多了\"</span></pre></td></tr></table></figure><ol start=\"2\">\n<li>加入 <code>minify</code>  配置，压缩 css/js/html</li>\n</ol>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">minify</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">html</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token key atrule\">exclude</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 排除 hexo-feed 用到的模板文件</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token punctuation\">-</span> <span class=\"token string\">'**/json.ejs'</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token punctuation\">-</span> <span class=\"token string\">'**/atom.ejs'</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token punctuation\">-</span> <span class=\"token string\">'**/rss.ejs'</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token key atrule\">css</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token key atrule\">exclude</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token punctuation\">-</span> <span class=\"token string\">'**/*.min.css'</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token key atrule\">js</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token key atrule\">mangle</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>      <span class=\"token key atrule\">toplevel</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token key atrule\">output</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token key atrule\">compress</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token key atrule\">exclude</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>      <span class=\"token punctuation\">-</span> <span class=\"token string\">'**/*.min.js'</span></pre></td></tr></table></figure><ol start=\"3\">\n<li>停用默认代码高亮功能</li>\n</ol>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">highlight</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token key atrule\">prismjs</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span></pre></td></tr></table></figure><h1 id=\"autoprefixer配置建议\"><a class=\"anchor\" href=\"#autoprefixer配置建议\">#</a> autoprefixer 配置建议</h1>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">autoprefixer</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">exclude</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token punctuation\">-</span> <span class=\"token string\">'*.min.css'</span></pre></td></tr></table></figure><p>缺少这个插件，首页卡片翻转效果在部分浏览器中无法正确显示。</p>\n<h1 id=\"algolia配置建议\"><a class=\"anchor\" href=\"#algolia配置建议\">#</a> algolia 配置建议</h1>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">algolia</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">appId</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">#Your appId</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token key atrule\">apiKey</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">#Your apiKey</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token key atrule\">adminApiKey</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">#Your adminApiKey</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token key atrule\">chunkSize</span><span class=\"token punctuation\">:</span> <span class=\"token number\">5000</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token key atrule\">indexName</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">#\"shoka\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token key atrule\">fields</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">-</span> title <span class=\"token comment\">#必须配置</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">-</span> path <span class=\"token comment\">#必须配置</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">-</span> categories <span class=\"token comment\">#推荐配置</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">-</span> content<span class=\"token punctuation\">:</span>strip<span class=\"token punctuation\">:</span>truncate<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">2000</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">-</span> gallery</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">-</span> photos</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">-</span> tags</pre></td></tr></table></figure><h1 id=\"feed配置建议\"><a class=\"anchor\" href=\"#feed配置建议\">#</a> feed 配置建议</h1>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">keywords</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">#站点关键词，用 “,” 分隔</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token key atrule\">feed</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token key atrule\">limit</span><span class=\"token punctuation\">:</span> <span class=\"token number\">20</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token key atrule\">order_by</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"-date\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token key atrule\">tag_dir</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token key atrule\">category_dir</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token key atrule\">rss</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token key atrule\">template</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"themes/shoka/layout/_alternate/rss.ejs\"</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token key atrule\">output</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"rss.xml\"</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token key atrule\">atom</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token key atrule\">template</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"themes/shoka/layout/_alternate/atom.ejs\"</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token key atrule\">output</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"atom.xml\"</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token key atrule\">jsonFeed</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token key atrule\">template</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"themes/shoka/layout/_alternate/json.ejs\"</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token key atrule\">output</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"feed.json\"</span></pre></td></tr></table></figure>",
            "tags": [
                "计算机科学",
                "二进制杂谈",
                "Theme Shoka Documentation",
                "教程",
                "Hexo"
            ]
        },
        {
            "id": "https://shoka.lostyu.me/computer-science/note/theme-shoka-doc/",
            "url": "https://shoka.lostyu.me/computer-science/note/theme-shoka-doc/",
            "title": "Hexo主题Shoka & multi-markdown-it渲染器使用说明",
            "date_published": "2020-08-13T12:45:48.000Z",
            "content_html": "<div class=\"note info\">\n<p>跳票 N 久终于更新的简单的使用说明</p>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2FtZWhpbWUvaGV4by10aGVtZS1zaG9rYQ==\">hexo-theme-shoka</span> ：本博客自用的主题</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2FtZWhpbWUvaGV4by1yZW5kZXJlci1tdWx0aS1tYXJrZG93bi1pdA==\">hexo-renderer-multi-markdown-it</span>：配套的 markdown 渲染器</li>\n</ul>\n<p>已经支持 hexo 5。。。本文档和 bug 不定期更新中。<br />\n如果有什么功能需求，欢迎留言。</p>\n</div>\n<div class=\"note warning\">\n<p>当前版本更新至 0.2.2，<a href=\"#%E6%9B%B4%E6%96%B0%E8%AE%B0%E5%BD%95\">更新记录点此</a></p>\n</div>\n<div class=\"note primary\">\n<p><a href=\"/computer-science/note/theme-shoka-doc/\"><strong>🚀快速开始</strong></a> - <a href=\"/computer-science/note/theme-shoka-doc/dependents/\">💌依赖插件</a> - <a href=\"/computer-science/note/theme-shoka-doc/config/\">📌基本配置</a> - <a href=\"/computer-science/note/theme-shoka-doc/display/\">🌈界面显示</a> - <a href=\"/computer-science/note/theme-shoka-doc/special/\">🦄特殊功能</a></p>\n</div>\n<h1 id=\"设计缘由\"><a class=\"anchor\" href=\"#设计缘由\">#</a> 设计缘由</h1>\n<p>前几年在 Bear 和 Evernote 上整理了大量笔记，非常喜欢 Bear 默认的 markdown 渲染样式。<br />\n后来因为换了安卓手机，用不了 Bear，四处搜寻替代品，没有满意的。<br />\n然后阴差阳错知道了 Hexo，又得知 Github 也可以免费建私有仓库了，故再次转移阵地到了自建博客，并部署在 Github Pages。</p>\n<p>因为这个博客是用来记笔记的，故起名 <code>书架</code> 。<br />\n对应的主题即 <code>Theme.Shoka</code> ，可以说是为了笔记阅读而生的主题。<br />\n样式严重参考 Bear，部分代码严重参考<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3RoZW1lLW5leHQv\"> NexT</span>。</p>\n<p>Hexo 的默认及常用渲染器均使用 <code>highlight.js</code>  进行代码高亮，而我喜欢 <code>Prism.js</code> ，故重写了一个渲染器配合主题食用。<br />\n渲染器取名 <code>multi</code> ，因为集成了很多很多很多 <code>markdown-it</code>  插件，以及压缩静态文件的功能。<br />\n（最新版的默认渲染器也支持 <code>Prism.js</code>  了，可喜可贺，但不想用，哈哈哈哈哈哈哈</p>\n<p>墙内 Github Pages 访问速度时而感人，所以用了<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5qc2RlbGl2ci5jb20v\"> jsDelivr</span> 加速，主要是因为它可以按需合并依赖文件。</p>\n<h1 id=\"快速安装\"><a class=\"anchor\" href=\"#快速安装\">#</a> 快速安装</h1>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># cd your-blog</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">git</span> clone https://github.com/amehime/hexo-theme-shoka.git ./themes/shoka</pre></td></tr></table></figure><p>打开主题目录，内有 <code>example</code>  文件夹，提供了配置文件的 demo 供参考。</p>\n<h1 id=\"安装依赖插件\"><a class=\"anchor\" href=\"#安装依赖插件\">#</a> 安装依赖插件</h1>\n<p>在应用主题之前，必须至少安装 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2FtZWhpbWUvaGV4by1yZW5kZXJlci1tdWx0aS1tYXJrZG93bi1pdA==\">hexo-renderer-multi-markdown-it</span> 渲染插件 和 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvaGV4by1hdXRvcHJlZml4ZXI=\">hexo-autoprefixer</span>。</p>\n<p><a href=\"dependents/\">插件安装与配置教程戳此</a></p>\n<h1 id=\"应用主题\"><a class=\"anchor\" href=\"#应用主题\">#</a> 应用主题</h1>\n<h2 id=\"修改站点配置\"><a class=\"anchor\" href=\"#修改站点配置\">#</a> 修改站点配置</h2>\n<p>修改站点配置文件 <code>&lt;root&gt;/_config.yml</code> ，把主题改为  <code>shoka</code></p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">theme</span><span class=\"token punctuation\">:</span> shoka</pre></td></tr></table></figure><h2 id=\"修改主题配置\"><a class=\"anchor\" href=\"#修改主题配置\">#</a> 修改主题配置</h2>\n<p>Hexo5 可以在根目录新建一个 yml 文件，命名为 <code>_config.shoka.yml</code> 。<br />\n将自定义配置保存于此，方便后续主题升级。</p>\n<p><a href=\"config/\">主题的基础配置可以参考这里</a></p>\n<h1 id=\"更新记录\"><a class=\"anchor\" href=\"#更新记录\">#</a> 更新记录</h1>\n<p>标签含义：<br />\n❗ 需要手动操作的更新信息<br />\n⚠️ 需要注意的更新信息<br />\n🔧 已修复的问题</p>\n<h2 id=\"021-022\"><a class=\"anchor\" href=\"#021-022\">#</a> 0.2.1 👉 0.2.2</h2>\n<p>⚠️ 弃用 <code>mediumzoom</code> ，改成 <code>fancybox</code> ，<a href=\"display/#%E5%9B%BE%E7%89%87%E5%B1%95%E7%A4%BA%E4%B8%8E%E7%9B%B8%E5%86%8C\">配置戳此</a><br />\n💡  增加语言包： <code>繁体中文</code> 和 <code>日语</code> <br />\n💡  quiz 功能优化，根据语言显示题型标签<br />\n🔧 修复评论功能中反复初始化 leancloud-storage<br />\n🔧 修复 <code>audio: false</code>  时不能隐藏播放按钮、停止播放</p>\n<h2 id=\"02-021\"><a class=\"anchor\" href=\"#02-021\">#</a> 0.2 👉 0.2.1</h2>\n<p>⚠️ 配置文件添加  <code>loader</code>  参数，<a href=\"config/#%E5%8A%A0%E8%BD%BD%E5%8A%A8%E7%94%BB\">配置戳此</a><br />\n💡  二级 list 区别显示<br />\n🔧 修复浏览位置定位 BUG<br />\n🔧 修复 firework 动画延迟<br />\n🔧 优化评论功能</p>\n<h2 id=\"019-02\"><a class=\"anchor\" href=\"#019-02\">#</a> 0.1.9 👉 0.2</h2>\n<p>⚠️  <strong>评论功能大改</strong></p>\n<ul>\n<li>弃用不开源的 Valine，改用 MiniValine，并且进行了魔改，<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2FtZWhpbWUvTWluaVZhbGluZQ==\">项目戳此</span><br />\n主要是大量压缩了代码，弃用一些花里胡哨的功能，又加了一些别的花里胡哨的功能。</li>\n<li>为防止泄露用户邮箱、IP 等隐私信息，弃用 QQ 号获取昵称及头像。<br />\n❗ 同时需要手动进行一些迁移，<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2ltYWVnb28vVmFsaW5l\">具体步骤戳此</span></li>\n<li>❗ 评论相关的配置亦有更新，<a href=\"config/#%E6%96%87%E7%AB%A0%E8%AF%84%E8%AE%BA\">配置戳此</a></li>\n</ul>\n<p>⚠️ 增加单击页面烟花效果，<a href=\"config/#%E9%A1%B5%E9%9D%A2%E7%89%B9%E6%95%88\">配置戳此</a><br />\n💡  弃用 Velocity，改用 anime.js，方便未来添加更多<span class=\"spoiler\" title=\"你知道得太多了\">花里胡哨的</span>功能<span class=\"spoiler\" title=\"你知道得太多了\">严重拖慢页面滑行速度</span><br />\n🔧 新增多枚 icon，包括豆瓣 <code>i-douban</code>  等<br />\n🔧 一些显示问题</p>\n<pre class=\"info\"><code>&#123;#&#125;\n<\n&#123;&#123;print $1&#125;&#125;</code></pre>",
            "tags": [
                "计算机科学",
                "二进制杂谈",
                "Theme Shoka Documentation",
                "教程",
                "Hexo"
            ]
        },
        {
            "id": "https://shoka.lostyu.me/inter-discipline/health-informatics/specialization-1/course-1/week-1/",
            "url": "https://shoka.lostyu.me/inter-discipline/health-informatics/specialization-1/course-1/week-1/",
            "title": "Week 1. Overview of Health Informatics",
            "date_published": "2020-06-24T05:46:26.000Z",
            "content_html": "<div class=\"note info\">\n<p>以下为个人学习笔记和习题整理<br />\n课程：Health Informatics-Johns Hopkins University @ coursera<br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY291cnNlcmEub3JnL3NwZWNpYWxpemF0aW9ucy9oZWFsdGgtaW5mb3JtYXRpY3M=\">https://www.coursera.org/specializations/health-informatics</span></p>\n</div>\n<h1 id=\"health-information-technology-for-patients\"><a class=\"anchor\" href=\"#health-information-technology-for-patients\">#</a> Health Information Technology for Patients</h1>\n<details><summary>In this video, we'll start off with talking about health information technology for patients and explore what's going on today and maybe what's going on in the future.</summary><div>\n<p>在这个视频中，我们将从针对患者的健康信息技术开始，探讨现在已经发生的，以及未来可能发生的事。</p>\n</div></details>\n<details><summary>So, you've all been to the doctor, and you've all filled out pieces of paper and clipboards.</summary><div>\n<p>大家都看过医生，都填过一些纸和笔记板。</p>\n</div></details>\n<details><summary>In fact, you've probably filled out 15 pieces of paper on clipboards and wondering why the heck is this not computerized the way everybody else's is.</summary><div>\n<p>事实上，你可能已经在笔记板上填了 15 张纸，并且想知道为什么这没有像别的地方一样计算机化。</p>\n</div></details>\n<details><summary>The good news is that we do have these sorts of questionnaires now on tablets, and you can fill them out either in a doctor's office or at home.</summary><div>\n<p>好消息是，现在在平板电脑上确实有这类问卷，您可以在医生办公室或家里填写这些问卷。</p>\n</div></details>\n<details><summary>So, what questions might come up if you're filling these questionnaires at home is like, what is the accuracy of this information, how should you use this information?</summary><div>\n<p>如果您在家填写这些问卷，可能会出现哪些问题？这些信息的准确性是多少？您应该如何使用这些信息？</p>\n</div></details>\n<details><summary>But wait, there's more, there are coming different types or new types of questionnaires.</summary><div>\n<p>但是等等，这里还有更多不同类型的，或者新类型的问卷。</p>\n</div></details>\n<details><summary>Sometimes these are called patient reported outcome forms or patient questionnaires.</summary><div>\n<p>有时，这些被称为由患者报告的结局表格，或患者问卷。</p>\n</div></details>\n<details><summary>We're asking information that can come only from the patient, like, how do you feel, are you depressed, are you able to walk, are you able to do the things that you normally do, how do you sleep?</summary><div>\n<p>我们询问一些只能由患者提供的信息，例如，您的感觉如何，您是否沮丧，是否能够走路，是否能够做您常做的事，睡觉如何？</p>\n</div></details>\n<details><summary>These are not things that we get typically from the clipboard type of questionnaire, we need to get this information.</summary><div>\n<p>这些不是我们通常从剪贴板式的调查表中获得的东西，而我们需要获取这些信息。</p>\n</div></details>\n<details><summary>The type of informatics question that comes out of this is, well, what do you do with this information? Is it true? Can you make clinical decisions based on this?</summary><div>\n<p>由此产生的信息学问题的类型是，您如何处理这些信息？ 这些是真实的吗？您可以据此做出临床决策吗？</p>\n</div></details>\n<details><summary>If somebody says they're suicidal on this form that's been filled out at home on a computer, what obligations do you have to intervene?</summary><div>\n<p>如果有人在家里用计算机填写这份表格，说他有自杀倾向，那么您有义务采取哪些干预措施？</p>\n</div></details>\n<details><summary>Making the questionnaire available may raise new questions and new problems about what to do with the information.</summary><div>\n<p>提供调查表可能会引起有关如何处理信息的新问题。</p>\n</div></details>\n<details><summary>You may notice at the top of this, it's called a computer adaptive testing, and here it's the machine, rather the piece of paper the machine can kind of skip around and ask questions that are more relevant to you.</summary><div>\n<p>您可能会注意到顶部这里，一个计算机自适应的测试。机器不像纸，机器可以跳过并提出与您更相关的问题。</p>\n</div></details>\n<details><summary>This can be done through skip logic like if you answer this then answer that, or it can be more sophisticated.</summary><div>\n<p>这些可以通过跳过逻辑来完成，比如你先回答了这个再回答了那个，或者他可以更复杂。</p>\n</div></details>\n<details><summary>Well, if I've established that you're not suicidal, so I'm not going to pursue the suicidal questions, adding the questionnaire on a computer using more capability than you could have on a piece of paper.</summary><div>\n<p>好吧，如果我确定您没有自杀倾向，那么我就不会继续追问自杀相关的问题。在计算机上填写调查表，可以比在纸上拥有更多的功能。</p>\n</div></details>\n<details><summary>I already mentioned that patients may fill things out at home, the main way that patients see their health data these days that's connected to the doctor or the hospital is through something called a patient portal.</summary><div>\n<p>前面已经提到过，患者可能在家中填写东西。患者主要通过一个所谓的患者门户，来查看他们这些天的健康数据，并与医生或者医院联系。</p>\n</div></details>\n<p><img data-src=\"http://capitalallergy.com/wp-content/uploads/2014/08/patient-portal2-e1462412347810.jpg\" alt=\"patient-portal\" title=\"Source: Capital Allergy &amp; Respiratory Disease Center. Retrieved August 3, 2017\" /></p>\n<details><summary>You can see the types of information that patients can get at through the patient portal.</summary><div>\n<p>你可以看到患者通过这个门户可以获得的信息类型。</p>\n</div></details>\n<details><summary>It can range anywhere from their appointments, through real patient data like lab testing, to secure messaging, to the entire patient record.</summary><div>\n<p>它的范围很广，从预约，到真实的患者数据，如实验室测试，到安全消息传递，再到整个患者记录。</p>\n</div></details>\n<details><summary>Well, how does medical care change where the patient can see everything?</summary><div>\n<p>那么，医疗如何改变患者可以看到的一切？</p>\n</div></details>\n<details><summary>Are the notes more honest?</summary><div>\n<p>这些记录更诚实吗？</p>\n</div></details>\n<details><summary>We know that there are better because patients will correct errors so that's great, but do in fact the conditions change what they write because they don't want to write something about their mental capacity patients, mental capacity or capabilities.</summary><div>\n<p>我们知道有更好的选择，因为患者会纠正错误，这样的确很棒。但实际上，由于他们不想写一些有关心智能力的内容，病情会改变他们写下的东西。</p>\n</div></details>\n<details><summary>No surprise that we have a digital medical devices.</summary><div>\n<p>我们拥有数字医疗设备也就不足为奇了。</p>\n</div></details>\n<details><summary>You've all probably have had your blood pressure taken by a digital sphygmomanometer, a digital blood pressure cuff.</summary><div>\n<p>你们可能都已经通过数字血压计、数字血压袖带测量过血压。</p>\n</div></details>\n<details><summary>Increasingly, there are digital tools for the direct acquisition of medical data.</summary><div>\n<p>越来越多的数字工具可以直接获取医疗数据。</p>\n</div></details>\n<details><summary>So, there are digital stethoscopes, and digital otoscopes, and digital ophthalmoscope.</summary><div>\n<p>比如数字听诊器，数字耳镜和数字眼底镜。</p>\n</div></details>\n<details><summary>The thing that's interesting when you have these digital formats is that you now can record what the doctor has seen, so that's interesting and that's great for record keeping. It's great for teaching.</summary><div>\n<p>有趣的是，当使用这些数字格式时，您可以记录医生所见的内容，而且对于保存记录非常有用。 非常适合教学。</p>\n</div></details>\n<details><summary>You might even have decision support.</summary><div>\n<p>你甚至可能有决策支持。</p>\n</div></details>\n<details><summary>So imagine that you have a digital stethoscope, and the machine is listening in the same time that you are, and could point out by the way, did you hear the abnormal heart sounds that may indicate something bad?</summary><div>\n<p>那么想象一下你有一个数字听诊器，在你听诊的同时，机器也在听，并且可以顺便指出，你是否听到一些可能提示病变的异常心音？</p>\n</div></details>\n<details><summary>Finally, we've all heard about wearables and devices or Internet of Things.</summary><div>\n<p>最后，我们都听说过可穿戴设备或物联网。</p>\n</div></details>\n<details><summary>Increasingly, there's lot of devices around the patient.</summary><div>\n<p>病人周围有越来越多的设备。</p>\n</div></details>\n<details><summary>Many of you probably use a fitness tracker, you may have a phone that tracks your heart-rate and such.</summary><div>\n<p>你们中的很多人可能都使用了健身追踪器，你可能拥有一部可以追踪心律或其他指标的手机。</p>\n</div></details>\n<details><summary>There are engineer's coming out with devices all the time.</summary><div>\n<p>新设备层出不穷。</p>\n</div></details>\n<details><summary>A fun one is a contact lens that can measure the glucose level in the fluid on your eye so now a diabetic might not need to prick themselves to get blood to measure the glucose, the contact lens could do it for them, or there might be a chip that they can lick and that chip can now measure basic laboratory values.</summary><div>\n<p>其中一个有趣的设备是一副隐形眼镜，可以测量眼中液体的葡萄糖水平，这样糖尿病患者就可以无需穿刺来检测血糖，隐形眼镜可以为他们做这些。或者可能有一种芯片，患者可以舔一下芯片，该芯片就可以测量基本的实验室值。</p>\n</div></details>\n<details><summary>I already mentioned digital stethoscopes to the heart, to the lung.</summary><div>\n<p>我已经提到过和心脏、肺部有关的数字听诊器。</p>\n</div></details>\n<details><summary>There are devices that can read brainwaves, and a whole number of other devices.</summary><div>\n<p>还有可以读取脑电波的，以及其他很多设备。</p>\n</div></details>\n<details><summary>So again, we have informatics problems come out of these.</summary><div>\n<p>同样，我们也遇到了信息学方面的问题。</p>\n</div></details>\n<details><summary>If you have continuous blood-pressure monitoring at home, well, that's a lot of data and number one where is it that it get stored, but even more importantly what does it mean?</summary><div>\n<p>如果您在家中连续测量血压，那将获得很多数据，首先这些数据存储在哪里，其次更重要的是，这意味着什么？</p>\n</div></details>\n<details><summary>A whole science and practice of blood pressure management has been based on blood pressures that were obtained infrequently at doctors' offices.</summary><div>\n<p>整个血压管理的科学和实践，都是基于在医生办公室很少获得的血压。</p>\n</div></details>\n<details><summary>Well, how did those blood pressures compare with what you get at home?</summary><div>\n<p>那么，这些血压与您在家得到的血压相比如何？</p>\n</div></details>\n<details><summary>How do you judge whether or not a blood pressure medication is working if you're getting all these blood pressure measurements all the time?</summary><div>\n<p>如果您一直在进行血压监测，您如何判断降压药是否有效？</p>\n</div></details>\n<details><summary>So, having a device and getting a lot of data is terrific, what the information we get out of that data is not clear and what knowledge we have to work with that information may not be clear as well.</summary><div>\n<p>因此，拥有一台设备并获取大量数据是惊人的，我们从数据中获得的信息还不清楚，而我们必须使用哪些知识也可能不清楚。</p>\n</div></details>\n<details><summary>So, that's it for our grand tour, a very quick tour of the new and upcoming IT for patients.</summary><div>\n<p>以上就是针对患者的，一些新的、即将推出的信息化技术的快速概览。</p>\n</div></details>\n",
            "tags": [
                "交叉学科",
                "医学信息学",
                "Health Informatics - Johns Hopkins University",
                "Course 1. The Social and Technical Context of Health Informatics",
                "医工交叉"
            ]
        },
        {
            "id": "https://shoka.lostyu.me/computer-science/java/course-2/week-8/",
            "url": "https://shoka.lostyu.me/computer-science/java/course-2/week-8/",
            "title": "第8周 异常处理与输入输出",
            "date_published": "2020-06-20T10:43:39.000Z",
            "content_html": "<div class=\"note info\">\n<p>以下为个人学习笔记和习题整理<br />\n课程：面向对象程序设计 ——Java 语言<br />\n - 浙江大学 - 翁恺 @ 中国大学 MOOC<br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuaWNvdXJzZTE2My5vcmcvY291cnNlL1pKVS0xMDAxNTQyMDAx\">https://www.icourse163.org/course/ZJU-1001542001</span></p>\n</div>\n<h1 id=\"课堂笔记\"><a class=\"anchor\" href=\"#课堂笔记\">#</a> 课堂笔记</h1>\n<h2 id=\"异常\"><a class=\"anchor\" href=\"#异常\">#</a> 异常</h2>\n<h3 id=\"捕捉异常-try-catch\"><a class=\"anchor\" href=\"#捕捉异常-try-catch\">#</a> 捕捉异常  <code>try</code>   <code>catch</code></h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token comment\">// 可能产生异常的代码</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Type1</span> id1<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token comment\">// 处理 Type1 异常的代码</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Type2</span> id2<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token comment\">// 处理 Type2 异常的代码</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Type3</span> id3<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token comment\">// 处理 Type3 异常的代码</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>拿到异常对象之后，可以：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">String</span> <span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\">String</span> <span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>或再度抛出 <code>throw</code> ：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>err<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"An exception was thrown\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">throw</span> e<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>捕捉任何异常：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>err<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Caught an exception\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>像 <code>ArrayIndexOutOfBoundsException</code>  运行时刻异常，这样的异常是不需要声明的，但是如果没有适当的机制来捕捉，就会最终导致程序终止。</p>\n<h3 id=\"抛出异常-throw\"><a class=\"anchor\" href=\"#抛出异常-throw\">#</a> 抛出异常  <code>throw</code></h3>\n<ul>\n<li>如果函数可能抛出异常，必须在函数头部加以 <code>throws</code>  声明</li>\n</ul>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">TooBig</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">TooSmall</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">DivZero</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>可以声明并不会真的抛出的异常。</p>\n<ul>\n<li>任何继承了 <code>Throwable</code>  类的对象才可以 <code>throw</code>  扔出。<br />\n <code>Exception</code>  类继承了 <code>Throwable</code></li>\n</ul>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Exception</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Exception</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"HELP\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"异常声明和继承\"><a class=\"anchor\" href=\"#异常声明和继承\">#</a> 异常声明和继承</h3>\n<p>调用一个声明会抛出异常的函数，必须把函数的调用放在 <code>try</code>  块中，并设置 <code>catch</code>  来捕捉所有可能抛出的异常；或声明自己会抛出无法处理的异常。</p>\n<p>当覆盖一个函数的时候，子类<strong>不能</strong>声明抛出比父类的版本更多的异常。<br />\n在子类的构造函数中，<strong>必须</strong>声明父类可能抛出的全部异常。</p>\n<h2 id=\"流\"><a class=\"anchor\" href=\"#流\">#</a> 流</h2>\n<p>流是输入输出的方式<br />\n流是一维单向的</p>\n<h3 id=\"流的基础类inputstream-outputstream\"><a class=\"anchor\" href=\"#流的基础类inputstream-outputstream\">#</a> 流的基础类 <code>InputStream</code>   <code>OutputStream</code></h3>\n<ul>\n<li>\n<p><code>InputStream</code>  类包含的方法<br />\n <code>read()</code>  读字节<br />\n <code>int read()</code>  读到最后返回 <code>-1</code> <br />\n <code>read(byte b[])</code> <br />\n <code>read(byte[], int off, int len)</code> <br />\n <code>skip(long n)</code> <br />\n <code>int available()</code>  流里面还有多少字节可读<br />\n <code>mark()</code>  标记<br />\n <code>reset()</code>  回到前面标记的地方<br />\n <code>boolean markSupported()</code>  是否支持标记<br />\n <code>close()</code></p>\n</li>\n<li>\n<p><code>OutStream</code>  类包含的方法<br />\n <code>write()</code> <br />\n <code>write(int b)</code>  输出单个字节<br />\n <code>write(byte b[])</code>  输出一个字节数组<br />\n <code>write(byte b[], int off, int len)</code> <br />\n <code>flush()</code> <br />\n <code>close()</code></p>\n</li>\n</ul>\n<h3 id=\"文件流fileinputstream-fileoutputsream\"><a class=\"anchor\" href=\"#文件流fileinputstream-fileoutputsream\">#</a> 文件流 <code>FileInputStream</code>   <code>FileOutputSream</code></h3>\n<p>对文件作读写操作</p>\n<p>实际工程中已经较少使用。</p>\n<p>更常用的是以在内存数据或通信数据上建立的流，如数据库的二进制数据读写，或网络端口通信。</p>\n<p>具体的文件读写往往有更专业的类，比如配置文件和日志文件。</p>\n<h3 id=\"流过滤器datainputstream-dataoutputstream\"><a class=\"anchor\" href=\"#流过滤器datainputstream-dataoutputstream\">#</a> 流过滤器 <code>DataInputStream</code>   <code>DataOutputStream</code></h3>\n<p>以一个介质流对象为基础，层层构建过滤器流，最终形成的流对象能在数据的输入输出过程中，逐层使用过滤器流的方法来读写数据。</p>\n<p>用以读写<strong>二进制</strong>方式表达的<strong>基本数据类型</strong>的数据</p>\n<h3 id=\"文本流reader-writer\"><a class=\"anchor\" href=\"#文本流reader-writer\">#</a> 文本流 <code>Reader</code>   <code>Writer</code></h3>\n<blockquote>\n<p>二进制数据采用 <code>InputStream</code>   <code>OutputStream</code> <br />\n 文本数据采用 <code>Reader</code>   <code>Writer</code>  处理 <code>Unicode</code>  字符</p>\n</blockquote>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>写入一个文本文件</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">PrintWriter</span> pw<span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PrintWriter</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token keyword\">new</span> <span class=\"token class-name\">BufferedWriter</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\t<span class=\"token keyword\">new</span> <span class=\"token class-name\">OutputStreamWriter</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\t\t<span class=\"token keyword\">new</span> <span class=\"token class-name\">FileOutputStream</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"abc.txt\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h4 id=\"文件读取\"><a class=\"anchor\" href=\"#文件读取\">#</a> 文件读取</h4>\n<ul>\n<li>\n<p>常用的是 <code>BufferedReader</code>  类及其 <code>readLine()</code>  方法。</p>\n</li>\n<li>\n<p>此外还有 <code>LineNumberReader</code>  类可以得到行号， <code>getLineNumber</code> 。</p>\n</li>\n<li>\n<p><code>FileReader</code>  是 <code>InputStreamReader</code>  类的子类，所有方法都从父类中继承而来。<br />\n <code>FileReader(File file)</code>  在给定从中读取数据的 <code>File</code>  的情况下创建一个新 <code>FileReader</code> 。<br />\n <code>FileReader(String fileName)</code>  在给定从中读取数据的文件名的情况下创建一个新 <code>FileReader</code> 。<br />\n <code>FileReader</code>  不能指定编码转换方式。</p>\n</li>\n</ul>\n<h4 id=\"汉字编码\"><a class=\"anchor\" href=\"#汉字编码\">#</a> 汉字编码</h4>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">BufferedReader</span> in <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BufferedReader</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token keyword\">new</span> <span class=\"token class-name\">InputStreamReader</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\t<span class=\"token keyword\">new</span> <span class=\"token class-name\">FileInputStream</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"utf8.txt\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"utf8\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul>\n<li>\n<p><code>InputStreamReader(InputStream in)</code>  创建一个使用默认字符集的 <code>InputStreamReader</code></p>\n</li>\n<li>\n<p><code>InputStreamReader(InputStream in, Charset cs)</code>  创建使用给定字符集的 <code>InputStreamReader</code></p>\n</li>\n<li>\n<p><code>InputStreamReader(InputStream in, CharsetDecoder dec)</code>  创建使用给定字符集解码器的 <code>InputStreamReader</code></p>\n</li>\n<li>\n<p><code>InputStreamReader(InputStream in, String charsetName)</code>  创建使用指定字符集的 <code>InputStreamReader</code></p>\n</li>\n</ul>\n<h4 id=\"格式化输入输出\"><a class=\"anchor\" href=\"#格式化输入输出\">#</a> 格式化输入输出</h4>\n<ul>\n<li>\n<p>输出 <code>PrintWriter</code>  类的方法有：<br />\n <code>format(&quot;格式&quot;, ...)</code> <br />\n <code>printf(&quot;格式&quot;, ...)</code> <br />\n <code>print(各种基本类型)</code> <br />\n <code>println(各种基本类型)</code></p>\n</li>\n<li>\n<p>输入 <code>Scanner</code>  类<br />\n在 <code>InputStream</code>  或 <code>Reader</code>  上建立一个 <code>Scanner</code>  对象可以从流中的文本中解析出以文本表达的各种基本类型<br />\n <code>next...()</code></p>\n</li>\n<li>\n<p><code>Stream</code>  /  <code>Reader</code>  /  <code>Scanner</code>  选哪个</p>\n</li>\n</ul>\n<pre class=\"mermaid graph\"><svg id=\"mermaid-1601977053004\" width=\"100%\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" height=\"244.5\" style=\"max-width: 534.6343994140625px;\" viewBox=\"0 0 534.6343994140625 244.5\"><g><g class=\"output\"><g class=\"clusters\"></g><g class=\"edgePaths\"><g class=\"edgePath LS-A LE-B\" id=\"L-A-B\" style=\"opacity: 1;\"><path class=\"path\" d=\"M132.56486488058465,67.78986793234247L194.89999389648438,27.5L235.71249389648438,27.5\" marker-end=\"url(#arrowhead18)\" style=\"fill:none\"></path><defs><marker id=\"arrowhead18\" viewBox=\"0 0 10 10\" refX=\"9\" refY=\"5\" markerUnits=\"strokeWidth\" markerWidth=\"8\" markerHeight=\"6\" orient=\"auto\"><path d=\"M 0 0 L 10 5 L 0 10 z\" class=\"arrowheadPath\" style=\"stroke-width: 1; stroke-dasharray: 1, 0;\"></path></marker></defs></g><g class=\"edgePath LS-A LE-C\" id=\"L-A-C\" style=\"opacity: 1;\"><path class=\"path\" d=\"M132.56486861763904,127.46013443411879L194.89999389648438,166.75L228.39999389648438,167.25\" marker-end=\"url(#arrowhead19)\" style=\"fill:none\"></path><defs><marker id=\"arrowhead19\" viewBox=\"0 0 10 10\" refX=\"9\" refY=\"5\" markerUnits=\"strokeWidth\" markerWidth=\"8\" markerHeight=\"6\" orient=\"auto\"><path d=\"M 0 0 L 10 5 L 0 10 z\" class=\"arrowheadPath\" style=\"stroke-width: 1; stroke-dasharray: 1, 0;\"></path></marker></defs></g><g class=\"edgePath LS-C LE-D\" id=\"L-C-D\" style=\"opacity: 1;\"><path class=\"path\" d=\"M346.82104652806333,146.17105263157896L400.3999938964844,122.25L436.7984313964844,122.25\" marker-end=\"url(#arrowhead20)\" style=\"fill:none\"></path><defs><marker id=\"arrowhead20\" viewBox=\"0 0 10 10\" refX=\"9\" refY=\"5\" markerUnits=\"strokeWidth\" markerWidth=\"8\" markerHeight=\"6\" orient=\"auto\"><path d=\"M 0 0 L 10 5 L 0 10 z\" class=\"arrowheadPath\" style=\"stroke-width: 1; stroke-dasharray: 1, 0;\"></path></marker></defs></g><g class=\"edgePath LS-C LE-E\" id=\"L-C-E\" style=\"opacity: 1;\"><path class=\"path\" d=\"M346.82104652806333,188.32894736842104L400.3999938964844,211.25L433.3999938964844,211.25\" marker-end=\"url(#arrowhead21)\" style=\"fill:none\"></path><defs><marker id=\"arrowhead21\" viewBox=\"0 0 10 10\" refX=\"9\" refY=\"5\" markerUnits=\"strokeWidth\" markerWidth=\"8\" markerHeight=\"6\" orient=\"auto\"><path d=\"M 0 0 L 10 5 L 0 10 z\" class=\"arrowheadPath\" style=\"stroke-width: 1; stroke-dasharray: 1, 0;\"></path></marker></defs></g></g><g class=\"edgeLabels\"><g class=\"edgeLabel\" transform=\"translate(194.89999389648438,27.5)\" style=\"opacity: 1;\"><g transform=\"translate(-8,-9.5)\" class=\"label\"><rect rx=\"0\" ry=\"0\" width=\"16.015625\" height=\"19.03125\"></rect><text><tspan xml:space=\"preserve\" dy=\"1em\" x=\"1\">是</tspan></text></g></g><g class=\"edgeLabel\" transform=\"translate(194.89999389648438,166.75)\" style=\"opacity: 1;\"><g transform=\"translate(-8,-9.5)\" class=\"label\"><rect rx=\"0\" ry=\"0\" width=\"16.015625\" height=\"19.03125\"></rect><text><tspan xml:space=\"preserve\" dy=\"1em\" x=\"1\">否</tspan></text></g></g><g class=\"edgeLabel\" transform=\"translate(400.3999938964844,122.25)\" style=\"opacity: 1;\"><g transform=\"translate(-8,-9.5)\" class=\"label\"><rect rx=\"0\" ry=\"0\" width=\"16.015625\" height=\"19.03125\"></rect><text><tspan xml:space=\"preserve\" dy=\"1em\" x=\"1\">是</tspan></text></g></g><g class=\"edgeLabel\" transform=\"translate(400.3999938964844,211.25)\" style=\"opacity: 1;\"><g transform=\"translate(-8,-9.5)\" class=\"label\"><rect rx=\"0\" ry=\"0\" width=\"16.015625\" height=\"19.03125\"></rect><text><tspan xml:space=\"preserve\" dy=\"1em\" x=\"1\">否</tspan></text></g></g></g><g class=\"nodes\"><g class=\"node default\" id=\"flowchart-A-8\" transform=\"translate(84.94999694824219,97.125)\" style=\"opacity: 1;\"><polygon points=\"76.95,0 153.9,-76.95 76.95,-153.9 0,-76.95\" transform=\"translate(-76.95,76.95)\" class=\"label-container\"></polygon><g class=\"label\" transform=\"translate(0,0)\"><g transform=\"translate(-56,-9.5)\"><text style=\"\"><tspan xml:space=\"preserve\" dy=\"1em\" x=\"1\">数据是二进制的</tspan></text></g></g></g><g class=\"node default\" id=\"flowchart-B-9\" transform=\"translate(297.6499938964844,27.5)\" style=\"opacity: 1;\"><rect rx=\"0\" ry=\"0\" x=\"-61.9375\" y=\"-19.5\" width=\"123.875\" height=\"39\" class=\"label-container\"></rect><g class=\"label\" transform=\"translate(0,0)\"><g transform=\"translate(-51.9375,-9.5)\"><text style=\"\"><tspan xml:space=\"preserve\" dy=\"1em\" x=\"1\">用InputStream</tspan></text></g></g></g><g class=\"node default\" id=\"flowchart-C-11\" transform=\"translate(297.6499938964844,166.75)\" style=\"opacity: 1;\"><polygon points=\"69.75,0 139.5,-69.75 69.75,-139.5 0,-69.75\" transform=\"translate(-69.75,69.75)\" class=\"label-container\"></polygon><g class=\"label\" transform=\"translate(0,0)\"><g transform=\"translate(-48,-9.5)\"><text style=\"\"><tspan xml:space=\"preserve\" dy=\"1em\" x=\"1\">表达的是文本</tspan></text></g></g></g><g class=\"node default\" id=\"flowchart-D-13\" transform=\"translate(480.0171813964844,122.25)\" style=\"opacity: 1;\"><rect rx=\"0\" ry=\"0\" x=\"-43.21875\" y=\"-19.5\" width=\"86.4375\" height=\"39\" class=\"label-container\"></rect><g class=\"label\" transform=\"translate(0,0)\"><g transform=\"translate(-33.21875,-9.5)\"><text style=\"\"><tspan xml:space=\"preserve\" dy=\"1em\" x=\"1\">用Reader</tspan></text></g></g></g><g class=\"node default\" id=\"flowchart-E-15\" transform=\"translate(480.0171813964844,211.25)\" style=\"opacity: 1;\"><rect rx=\"0\" ry=\"0\" x=\"-46.6171875\" y=\"-19.5\" width=\"93.234375\" height=\"39\" class=\"label-container\"></rect><g class=\"label\" transform=\"translate(0,0)\"><g transform=\"translate(-36.6171875,-9.5)\"><text style=\"\"><tspan xml:space=\"preserve\" dy=\"1em\" x=\"1\">用Scanner</tspan></text></g></g></g></g></g></g></svg></pre><h4 id=\"阻塞非阻塞\"><a class=\"anchor\" href=\"#阻塞非阻塞\">#</a> 阻塞 / 非阻塞</h4>\n<p><code>read()</code>  函数是阻塞的，在读到所需的内容之前会停下来等。<br />\n使用 <code>read()</code>  的更 “高级” 的函数，如 <code>nextInt()</code> 、 <code>readLine()</code>  都是这样的。<br />\n所以常用单独的线程来做 <code>socket</code>  读的等待，或使用 <code>nio</code>  的 <code>channel</code>  选择机制。<br />\n对于 <code>socket</code> ，可以设置 SO 时间</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">setSoTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> timeOut<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"对象串行化\"><a class=\"anchor\" href=\"#对象串行化\">#</a> 对象串行化</h3>\n<p><code>ObjectInputStream</code>  类<br />\n <code>readObject()</code> <br />\n <code>ObjectOutputStream</code>  类<br />\n <code>writeObject()</code> <br />\n <code>Serializable</code>  接口</p>\n<h1 id=\"课内代码\"><a class=\"anchor\" href=\"#课内代码\">#</a> 课内代码</h1>\n<h2 id=\"异常捕捉\"><a class=\"anchor\" href=\"#异常捕捉\">#</a> 异常捕捉</h2>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">exception</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ArrayIndex</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t<span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> a <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\ta<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">prinln</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">g</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\t<span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">h</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\t<span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">&lt;</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\t\t<span class=\"token function\">g</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">k</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t\t<span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\t\t<span class=\"token function\">h</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ArrayIndexOutOfBoundsException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"k()\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t\t\t<span class=\"token keyword\">throw</span> e<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 再度抛出</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token comment\">//\t\tint[] a = new int[10];</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token comment\">//\t\tint idx;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token comment\">//\t\tScanner in = new Scanner(System.in);</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token comment\">//\t\tidx = in.nextInt();</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token comment\">//\t\ttry &#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token comment\">//\t\t\ta[idx] = 10;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token comment\">//\t\t\tSystem.out.println(\"hello\");</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token comment\">//\t\t&#125; catch (ArrayIndexOutOfBoundsException e) &#123;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token comment\">//\t\t\tSystem.out.println(\"Cought\");</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token comment\">//\t\t&#125;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token comment\">//\t\ttry &#123;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token comment\">//\t\t\tf();</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token comment\">//\t\t&#125; catch (ArrayIndexOutOfBoundsException e) &#123;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token comment\">//\t\t\tSystem.out.println(\"Cought\");</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token comment\">//\t\t&#125;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\t\t<span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>\t\t\t<span class=\"token function\">k</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">ArrayIndexOutOfBoundsException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Caught\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 相当于 System.out.println (e.toString ())</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\t\t\te<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"抛出异常\"><a class=\"anchor\" href=\"#抛出异常\">#</a> 抛出异常</h2>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>函数加throws声明</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">exception</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">OpenException</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Throwable</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">CloseException</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Throwable</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ArrayIndex</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> <span class=\"token keyword\">open</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">readFile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">OpenException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">CloseException</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">open</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\t\t<span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">OpenException</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\t<span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\t\t<span class=\"token function\">readFile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">OpenException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">CloseException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>捕捉任何异常</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">exception</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">OpenException</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">CloseException</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">OpenException</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ArrayIndex</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> <span class=\"token keyword\">open</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t<span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> a <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\ta<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">readFile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">OpenException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">CloseException</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">open</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t\t<span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">OpenException</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\t<span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\t\t<span class=\"token function\">readFile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">NullPointerException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Null\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">OpenException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Open\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 捕捉任何异常</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Anything\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>异常声明和继承</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">exception</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">OpenException</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">CloseException</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">OpenException</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">NewException</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ArrayIndex</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">ArrayIndex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">OpenException</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span> <span class=\"token comment\">// 构造函数抛出异常</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">OpenException</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">NewClass</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">ArrayIndex</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">NewClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span> <span class=\"token comment\">// 错误</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">NewClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">OpenException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">NewException</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span> <span class=\"token comment\">// 正确，必须加上 throws 声明父类所有可能会抛出的异常，可以加上其他自己的异常</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span> <span class=\"token comment\">// 正确</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">NewException</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span> <span class=\"token comment\">// 错误，不可以加父类方法未声明的异常</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">CloseException</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span> <span class=\"token comment\">// 正确</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\t\t</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\t<span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\t\t<span class=\"token class-name\">ArrayIndex</span> p <span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">NewClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t\t\tp<span class=\"token punctuation\">.</span><span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">OpenException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">NewException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t\t</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"流-2\"><a class=\"anchor\" href=\"#流-2\">#</a> 流</h2>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>基础流类</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">hello</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">IOException</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello world\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t<span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> buffer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token number\">1024</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t<span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t\t<span class=\"token keyword\">int</span> len <span class=\"token operator\">=</span> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span>buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t\t<span class=\"token class-name\">String</span> s <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">(</span>buffer<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> len<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"读到了\"</span><span class=\"token operator\">+</span>len<span class=\"token operator\">+</span><span class=\"token string\">\"字节\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"s的长度是：\"</span><span class=\"token operator\">+</span>s<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t\te<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>文件流类</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">hello</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">FileNotFoundException</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">FileOutputStream</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">IOException</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\t\t</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t<span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> buf <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> buf<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t\tbuf<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span>  <span class=\"token punctuation\">(</span><span class=\"token keyword\">byte</span><span class=\"token punctuation\">)</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\t</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t<span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t\t<span class=\"token class-name\">FileOutputStream</span> out <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FileOutputStream</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a.dat\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\t\tout<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span>buf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\t\tout<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">FileNotFoundException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\t\te<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\t\te<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span>\t\t</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>流过滤器</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">hello</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">BufferedInputStream</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">BufferedOutputStream</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">DataInputStream</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">DataOutputStream</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">FileInputStream</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">FileNotFoundException</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">FileOutputStream</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">IOException</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\t\t</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\t<span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> buf <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> buf<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\t\tbuf<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span>  <span class=\"token punctuation\">(</span><span class=\"token keyword\">byte</span><span class=\"token punctuation\">)</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\t</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\t<span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\t\t<span class=\"token class-name\">DataOutputStream</span> out <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DataOutputStream</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\t\t\t\t<span class=\"token keyword\">new</span> <span class=\"token class-name\">BufferedOutputStream</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\t\t\t\t\t\t<span class=\"token keyword\">new</span> <span class=\"token class-name\">FileOutputStream</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a.dat\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\">//\t\t\tint i = 0xcafebabe;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t\t\t<span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">123456</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\t\tout<span class=\"token punctuation\">.</span><span class=\"token function\">writeInt</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\t\tout<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\t\t<span class=\"token class-name\">DataInputStream</span> in <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DataInputStream</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t\t\t\t\t<span class=\"token keyword\">new</span> <span class=\"token class-name\">BufferedInputStream</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t\t\t\t\t\t\t<span class=\"token keyword\">new</span> <span class=\"token class-name\">FileInputStream</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a.dat\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t\t\t<span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> in<span class=\"token punctuation\">.</span><span class=\"token function\">readInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">FileNotFoundException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t\t\te<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t\t\te<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span>\t\t</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>文本流</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">hello</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">BufferedReader</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">BufferedWriter</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">FileInputStream</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">FileNotFoundException</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">FileOutputStream</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">IOException</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">InputStreamReader</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">OutputStreamWriter</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">PrintWriter</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\t\t</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t<span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> buf <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> buf<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\t\tbuf<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span>  <span class=\"token punctuation\">(</span><span class=\"token keyword\">byte</span><span class=\"token punctuation\">)</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\t</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\t<span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\t\t<span class=\"token class-name\">PrintWriter</span> out<span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PrintWriter</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\t\t\t\t<span class=\"token keyword\">new</span> <span class=\"token class-name\">BufferedWriter</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t\t\t\t\t\t<span class=\"token keyword\">new</span> <span class=\"token class-name\">OutputStreamWriter</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t\t\t\t\t\t\t<span class=\"token keyword\">new</span> <span class=\"token class-name\">FileOutputStream</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a.txt\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\t\t<span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">123456</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\t\tout<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\t\tout<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t\t\t</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t\t\t<span class=\"token class-name\">BufferedReader</span> in <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BufferedReader</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t\t\t\t\t<span class=\"token keyword\">new</span> <span class=\"token class-name\">InputStreamReader</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t\t\t\t\t\t\t<span class=\"token keyword\">new</span> <span class=\"token class-name\">FileInputStream</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"src/hello/Main.java\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t\t\t<span class=\"token class-name\">String</span> line<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t\t\t<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>line <span class=\"token operator\">=</span> in<span class=\"token punctuation\">.</span><span class=\"token function\">readLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">FileNotFoundException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t\t\te<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t\t\te<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span>\t\t</pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">hello</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">BufferedReader</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">BufferedWriter</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">IOException</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">InputStreamReader</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">OutputStreamWriter</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">PrintWriter</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>net<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">InetAddress</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>net<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Socket</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\t</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t<span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t\t<span class=\"token comment\">// 建一个 Socket 链接到本地的 12345 端口</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\t\t<span class=\"token class-name\">Socket</span> socket <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Socket</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">InetAddress</span><span class=\"token punctuation\">.</span><span class=\"token function\">getByName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"localhost\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12345</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\t\t<span class=\"token class-name\">PrintWriter</span> out <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PrintWriter</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\t\t\t\t<span class=\"token keyword\">new</span> <span class=\"token class-name\">BufferedWriter</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\t\t\t\t\t\t<span class=\"token keyword\">new</span> <span class=\"token class-name\">OutputStreamWriter</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\t\t\t\t\t\t\t\tsocket<span class=\"token punctuation\">.</span><span class=\"token function\">getOutputStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\t\tout<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\t\tout<span class=\"token punctuation\">.</span><span class=\"token function\">flush</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 刷新缓存</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t\t\t</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t\t\t<span class=\"token class-name\">BufferedReader</span> in <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BufferedReader</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\t\t\t\t<span class=\"token keyword\">new</span> <span class=\"token class-name\">InputStreamReader</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\t\t\t\t\t\tsocket<span class=\"token punctuation\">.</span><span class=\"token function\">getInputStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\t\t<span class=\"token class-name\">String</span> line<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t\t\tline <span class=\"token operator\">=</span> in<span class=\"token punctuation\">.</span><span class=\"token function\">readLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t\t\t</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t\t\tout<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t\t\tsocket<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t\t\te<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span>\t\t</pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>对象串行化</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">hello</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">FileInputStream</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">FileOutputStream</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">IOException</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ObjectInputStream</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ObjectOutputStream</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Student</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> age<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> grade<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">Student</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> name<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> age<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> grade<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t<span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> age<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>grade <span class=\"token operator\">=</span> grade<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> name <span class=\"token operator\">+</span> <span class=\"token string\">\" \"</span> <span class=\"token operator\">+</span> age <span class=\"token operator\">+</span> <span class=\"token string\">\" \"</span> <span class=\"token operator\">+</span> grade<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span>\t</pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\t</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t\t<span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t\t\t<span class=\"token class-name\">Student</span> s1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Student</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"John\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">18</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>s1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t\t\t<span class=\"token class-name\">ObjectOutputStream</span> out <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ObjectOutputStream</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t\t\t\t\t<span class=\"token keyword\">new</span> <span class=\"token class-name\">FileOutputStream</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"obj.dat\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t\t\tout<span class=\"token punctuation\">.</span><span class=\"token function\">writeObject</span><span class=\"token punctuation\">(</span>s1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t\t\tout<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t\t\t</pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t\t\t<span class=\"token class-name\">ObjectInputStream</span> in <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ObjectInputStream</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t\t\t\t\t<span class=\"token keyword\">new</span> <span class=\"token class-name\">FileInputStream</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"obj.dat\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t\t\t<span class=\"token class-name\">Student</span> s2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Student</span><span class=\"token punctuation\">)</span>in<span class=\"token punctuation\">.</span><span class=\"token function\">readObject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>s2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t\t\tin<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t\t\t</pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>s1 <span class=\"token operator\">==</span> s2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t\t\t<span class=\"token comment\">//false 虽然内容一样，但不是相同的对象</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\t\t\te<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">ClassNotFoundException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\t\t\te<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span>\t\t</pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "计算机科学",
                "Java",
                "面向对象程序设计-Java语言-浙江大学-翁恺",
                "Java"
            ]
        },
        {
            "id": "https://shoka.lostyu.me/computer-science/java/course-2/week-7/",
            "url": "https://shoka.lostyu.me/computer-science/java/course-2/week-7/",
            "title": "第7周 控制反转与MVC模式",
            "date_published": "2020-06-19T08:28:11.000Z",
            "content_html": "<div class=\"note info\">\n<p>以下为个人学习笔记和习题整理<br />\n课程：面向对象程序设计 ——Java 语言<br />\n - 浙江大学 - 翁恺 @ 中国大学 MOOC<br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuaWNvdXJzZTE2My5vcmcvY291cnNlL1pKVS0xMDAxNTQyMDAx\">https://www.icourse163.org/course/ZJU-1001542001</span></p>\n</div>\n<h1 id=\"课堂笔记\"><a class=\"anchor\" href=\"#课堂笔记\">#</a> 课堂笔记</h1>\n<h2 id=\"swing\"><a class=\"anchor\" href=\"#swing\">#</a> Swing</h2>\n<h3 id=\"布局管理器\"><a class=\"anchor\" href=\"#布局管理器\">#</a> 布局管理器</h3>\n<p>部件 button<br />\n 容器 frame<br />\n 部件可以被放在容器里，容器本身也是一种部件。</p>\n<p>布局管理器 <code>BorderLayout</code>  来管理部件的大小、位置等。<br />\n <code>BorderLayout</code>  类把容器分为五个部分，分别是 <code>NORTH</code> 、 <code>SOUTH</code> 、 <code>EAST</code> 、 <code>WEST</code> 、 <code>CENTER</code> （默认），同一个位置，同一个时间，只能有一个部件。并根据内容来计算布局长宽。</p>\n<h3 id=\"事件机制-addactionlistener\"><a class=\"anchor\" href=\"#事件机制-addactionlistener\">#</a> 事件机制  <code>addActionListener</code></h3>\n<p>Swing 使用一个非常灵活的模型来处理 GUI 的输入：采用事件监听器的事件处理 (event handling) 模型。</p>\n<p>Swing 框架本身以及大部分部件在发生一些情况时会触发相关的事件，而其他的对象也许会对这些事件感兴趣。<br />\n不同类型的动作会导致不同类型的事件。<br />\n当点击一个按钮或选中一个菜单项，部件就会触发动作事件；而当点击或移动鼠标时，会触发鼠标事件；当框架被关闭或最小化时，会触发窗口事件。另外还有许多种其他事件。</p>\n<p>所有的对象都可以成为任何这些事件的监听器，而一旦成为监听器，就可以得到这些事件触发的通知。</p>\n<p>实现了众多监听器接口之一的对象就成为一个事件监听器。<br />\n如果对象实现了恰当的接口，就可以注册到它想监听的组件上。</p>\n<h3 id=\"匿名类\"><a class=\"anchor\" href=\"#匿名类\">#</a> 匿名类</h3>\n<p>在 <code>new</code>  对象的时候给出的类的定义形成了匿名类。<br />\n匿名类可以继承某类，也可以实现某接口。<br />\nSwing 的消息机制广泛使用匿名类。</p>\n<h3 id=\"内部类\"><a class=\"anchor\" href=\"#内部类\">#</a> 内部类</h3>\n<p>内部类就是指一个类定义在另一个类的内部，从而成为外部类的一个成员。<br />\n因此一个类中可以有成员变量、方法，还可以有内部类。<br />\n实际上 Java 的内部类可以被称为成员类，内部类实际上是它所在类的成员。<br />\n所以内部类也就具有和成员变量、成员方法相同的性质。</p>\n<p>比如，成员方法可以访问私有变量，那么成员类也可以访问私有变量了。<br />\n也就是说，成员类中的成员方法都可以访问成员类所在类的私有变量。</p>\n<blockquote>\n<p>内部类最重要的特点就是：能够访问外部类的所有成员，包括任何私有的成员。</p>\n</blockquote>\n<p>也可以定义在函数内部。<br />\n外部是函数时，<strong>只能</strong>访问那个函数里 <code>final</code>  的变量</p>\n<h2 id=\"mvc模式\"><a class=\"anchor\" href=\"#mvc模式\">#</a> MVC 模式</h2>\n<p>数据、表现和控制三者分离，各负其责。<br />\n <code>Model</code>  模型<br />\n保存和维护数据，提供接口让外部修改数据<br />\n通知表现，需要刷新</p>\n<p><code>View</code>  表现<br />\n从模型获得数据，根据数据画出表现</p>\n<p><code>Control</code>  控制<br />\n从用户得到输入，根据输入调整数据</p>\n<blockquote>\n<p>用户在界面上的操作，不直接显示</p>\n</blockquote>\n<h1 id=\"课内项目\"><a class=\"anchor\" href=\"#课内项目\">#</a> 课内项目</h1>\n<h2 id=\"注入反转\"><a class=\"anchor\" href=\"#注入反转\">#</a> 注入反转</h2>\n<p>由按钮公布一个守听者接口和一对注册 / 注销函数。<br />\n你的代码实现那个接口，将守听者对象注册在按钮上。<br />\n一旦按钮被按下，就会反过来调用你的守听者对象的某个函数。</p>\n<p>例子：狐狸与兔子添加步进按钮</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token class-name\">FoxAndRabbit</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">field<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Field</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">field<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">View</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">field<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Location</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>awt<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">BorderLayout</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>awt<span class=\"token punctuation\">.</span>event<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ActionEvent</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>awt<span class=\"token punctuation\">.</span>event<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ActionListener</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ArrayList</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>swing<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">JFrame</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>swing<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">JButton</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">animal<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Fox</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">animal<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Rabbit</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">animal<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Animal</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">cell<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Cell</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">FoxAndRabbit</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t<span class=\"token keyword\">private</span> <span class=\"token class-name\">Field</span> thefield<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t<span class=\"token keyword\">private</span> <span class=\"token class-name\">View</span> theview<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t<span class=\"token keyword\">private</span> <span class=\"token class-name\">JFrame</span> frame<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t<span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t * 内部类  StepListener</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t */</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">StepListener</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">ActionListener</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t\t<span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">actionPerformed</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ActionEvent</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t\t\t<span class=\"token function\">step</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t\t\tframe<span class=\"token punctuation\">.</span><span class=\"token function\">repaint</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">FoxAndRabbit</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> size <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t\tthefield <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Field</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> row <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> row <span class=\"token operator\">&lt;</span>thefield<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> row<span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> col <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> col <span class=\"token operator\">&lt;</span> thefield<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> col<span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">double</span> probability <span class=\"token operator\">=</span> <span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> probability <span class=\"token operator\">&lt;</span><span class=\"token number\">0.05</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t\t\t\t\tthefield<span class=\"token punctuation\">.</span><span class=\"token function\">place</span><span class=\"token punctuation\">(</span> row<span class=\"token punctuation\">,</span> col<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Fox</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> probability <span class=\"token operator\">&lt;</span> <span class=\"token number\">0.15</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t\t\t\t\tthefield<span class=\"token punctuation\">.</span><span class=\"token function\">place</span><span class=\"token punctuation\">(</span> row<span class=\"token punctuation\">,</span> col<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Rabbit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\t\ttheview <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">View</span><span class=\"token punctuation\">(</span>thefield<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\t\tframe <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">JFrame</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\t\tframe<span class=\"token punctuation\">.</span><span class=\"token function\">setDefaultCloseOperation</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">JFrame</span><span class=\"token punctuation\">.</span>EXIT_ON_CLOSE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\t\tframe<span class=\"token punctuation\">.</span><span class=\"token function\">setResizable</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>\t\tframe<span class=\"token punctuation\">.</span><span class=\"token function\">setTitle</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"FoxAndRabbit\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\t\tframe<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>theview<span class=\"token punctuation\">,</span> <span class=\"token class-name\">BorderLayout</span><span class=\"token punctuation\">.</span>CENTER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\t\t</pre></td></tr><tr><td data-num=\"55\"></td><td><pre>\t\t<span class=\"token comment\">// 添加一个按钮</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>\t\t<span class=\"token class-name\">JButton</span> btnStep <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">JButton</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"单步\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\t\tframe<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>btnStep<span class=\"token punctuation\">,</span> <span class=\"token class-name\">BorderLayout</span><span class=\"token punctuation\">.</span>NORTH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t</pre></td></tr><tr><td data-num=\"58\"></td><td><pre>\t\t</pre></td></tr><tr><td data-num=\"59\"></td><td><pre>\t\t<span class=\"token comment\">// 按钮绑定事件，方法 1：匿名类</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre><span class=\"token comment\">//\t\tbtnStep.addActionListener(new ActionListener() &#123;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre><span class=\"token comment\">//\t\t\t@Override</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre><span class=\"token comment\">//\t\t\tpublic void actionPerformed(ActionEvent e) &#123;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre><span class=\"token comment\">//\t\t\t\tSystem.out.println (\"按下啦！\");</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre><span class=\"token comment\">//\t\t\t\tstep();</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre><span class=\"token comment\">//\t\t\t\tframe.repaint();</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre><span class=\"token comment\">//\t\t\t&#125;\t\t\t</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre><span class=\"token comment\">//\t\t&#125;);</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>\t\t<span class=\"token comment\">// 按钮绑定事件，方法 2：内部类</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>\t\tbtnStep<span class=\"token punctuation\">.</span><span class=\"token function\">addActionListener</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">StepListener</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>\t\t</pre></td></tr><tr><td data-num=\"71\"></td><td><pre>\t\tframe<span class=\"token punctuation\">.</span><span class=\"token function\">pack</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>\t\tframe<span class=\"token punctuation\">.</span><span class=\"token function\">setVisible</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"75\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">step</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> row <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> row <span class=\"token operator\">&lt;</span> thefield<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> row<span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>\t\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> col <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> col <span class=\"token operator\">&lt;</span> thefield<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> col<span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>\t\t\t\t<span class=\"token class-name\">Cell</span> cell <span class=\"token operator\">=</span> thefield<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">,</span> col<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> cell <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>\t\t\t\t\t<span class=\"token class-name\">Animal</span> animal <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Animal</span><span class=\"token punctuation\">)</span>cell<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>\t\t\t\t\tanimal<span class=\"token punctuation\">.</span><span class=\"token function\">grow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>\t\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> animal<span class=\"token punctuation\">.</span><span class=\"token function\">isAlive</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>\t\t\t\t\t\t<span class=\"token comment\">//move</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>\t\t\t\t\t\t<span class=\"token class-name\">Location</span> loc <span class=\"token operator\">=</span> animal<span class=\"token punctuation\">.</span><span class=\"token function\">move</span><span class=\"token punctuation\">(</span>thefield<span class=\"token punctuation\">.</span><span class=\"token function\">getFreeNeighbour</span><span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">,</span> col<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>\t\t\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> loc <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>\t\t\t\t\t\t\tthefield<span class=\"token punctuation\">.</span><span class=\"token function\">move</span><span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">,</span> col<span class=\"token punctuation\">,</span> loc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>\t\t\t\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>\t\t\t\t\t\t<span class=\"token comment\">//eat   animal.eat(thefield);</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>\t\t\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> animal <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Fox</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>\t\t\t\t\t\t\t<span class=\"token class-name\">Cell</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> neighbour <span class=\"token operator\">=</span> thefield<span class=\"token punctuation\">.</span><span class=\"token function\">getNeighbour</span><span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">,</span> col<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>\t\t\t\t\t\t\t<span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Animal</span><span class=\"token punctuation\">></span></span> listRabbit <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Animal</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>\t\t\t\t\t\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span> <span class=\"token class-name\">Cell</span> an <span class=\"token operator\">:</span> neighbour <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>\t\t\t\t\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> an <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Rabbit</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>\t\t\t\t\t\t\t\t\tlistRabbit<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Rabbit</span><span class=\"token punctuation\">)</span>an <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>\t\t\t\t\t\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>\t\t\t\t\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>\t\t\t\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span>listRabbit<span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>\t\t\t\t\t\t\t\t<span class=\"token class-name\">Animal</span> fed <span class=\"token operator\">=</span> animal<span class=\"token punctuation\">.</span><span class=\"token function\">feed</span><span class=\"token punctuation\">(</span>listRabbit<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>\t\t\t\t\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> fed <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>\t\t\t\t\t\t\t\t\tthefield<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Cell</span><span class=\"token punctuation\">)</span>fed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>\t\t\t\t\t\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>\t\t\t\t\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>\t\t\t\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>\t\t\t\t\t\t<span class=\"token comment\">//breed</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>\t\t\t\t\t\t<span class=\"token class-name\">Animal</span> baby <span class=\"token operator\">=</span> animal<span class=\"token punctuation\">.</span><span class=\"token function\">breed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>\t\t\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> baby <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>\t\t\t\t\t\t\tthefield<span class=\"token punctuation\">.</span><span class=\"token function\">placeRandomAdj</span><span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">,</span> col<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Cell</span><span class=\"token punctuation\">)</span>baby<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>\t\t\t\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>\t\t\t\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>\t\t\t\t\t\tthefield<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">,</span> col<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>\t\t\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span>\t</pre></td></tr><tr><td data-num=\"115\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"117\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">start</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> steps <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> steps<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>\t\t\t<span class=\"token function\">step</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>\t\t\ttheview<span class=\"token punctuation\">.</span><span class=\"token function\">repaint</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>\t\t\t<span class=\"token keyword\">try</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>\t\t\t\t<span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">InterruptedException</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>\t\t\t\te<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"129\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>\t\t<span class=\"token class-name\">FoxAndRabbit</span> fnr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FoxAndRabbit</span><span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre>\t\t<span class=\"token comment\">//fnr.start(10);</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"课程表\"><a class=\"anchor\" href=\"#课程表\">#</a> 课程表</h2>\n<p>用 <code>JTable</code>  类可以以表格的形式显示和编辑数据。<br />\n <code>JTable</code>  类的对象并不存储数据，它只是数据的表现。</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>KCB.java</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">kcb</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>swing<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">JFrame</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>swing<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">JScrollPane</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>swing<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">JTable</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> KCB <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t<span class=\"token class-name\">JFrame</span> frame <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">JFrame</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t<span class=\"token class-name\">JTable</span> table <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">JTable</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">KCBData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t<span class=\"token class-name\">JScrollPane</span> pane <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">JScrollPane</span><span class=\"token punctuation\">(</span>table<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\tframe<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>pane<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\tframe<span class=\"token punctuation\">.</span><span class=\"token function\">pack</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\tframe<span class=\"token punctuation\">.</span><span class=\"token function\">setDefaultCloseOperation</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">JFrame</span><span class=\"token punctuation\">.</span>EXIT_ON_CLOSE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\tframe<span class=\"token punctuation\">.</span><span class=\"token function\">setVisible</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>KCBData.java</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">kcb</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>swing<span class=\"token punctuation\">.</span>event<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">TableModelListener</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>swing<span class=\"token punctuation\">.</span>table<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">TableModel</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">KCBData</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">TableModel</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> title <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token string\">\"周一\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"周二\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"周三\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"周四\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"周五\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"周六\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"周日\"</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> data <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">KCBData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> data<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t\t\tdata<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">addTableModelListener</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">TableModelListener</span> arg0<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\t<span class=\"token comment\">// TODO Auto-generated method stub</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t<span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">Class</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">getColumnClass</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> arg0<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t<span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">getColumnCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">7</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t<span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getColumnName</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> arg0<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> title<span class=\"token punctuation\">[</span>arg0<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t<span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">getRowCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t<span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">Object</span> <span class=\"token function\">getValueAt</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> arg0<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> arg1<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\t\t<span class=\"token comment\">// TODO Auto-generated method stub</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> data<span class=\"token punctuation\">[</span>arg0<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>arg1<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\t<span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">isCellEditable</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> arg0<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> arg1<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>\t\t<span class=\"token comment\">// TODO Auto-generated method stub</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 可以被编辑</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>\t<span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">removeTableModelListener</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">TableModelListener</span> arg0<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>\t\t<span class=\"token comment\">// TODO Auto-generated method stub</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>\t<span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setValueAt</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Object</span> arg0<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> arg1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> arg2<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>\t\t<span class=\"token comment\">// TODO Auto-generated method stub</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>\t\tdata<span class=\"token punctuation\">[</span>arg1<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>arg2<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">)</span> arg0<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"课堂讨论\"><a class=\"anchor\" href=\"#课堂讨论\">#</a> 课堂讨论</h1>\n<ol>\n<li>在第 5 周的城堡程序那里，我们做的 <code>Handler</code>  是需要在构造的时候注入 <code>Game</code>  的。那么，在学习了内部类之后，能否用 <code>Game</code>  的内部类来实现这些 <code>Handler</code>  呢？应该怎么做？</li>\n</ol>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">castle</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HashMap</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Game</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">abstract</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Handler</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t<span class=\"token keyword\">public</span>  <span class=\"token keyword\">abstract</span> <span class=\"token keyword\">void</span> <span class=\"token function\">doCmd</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> word<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">isBye</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t </pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">Game</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\">//\t\thandlers.put(\"go\",new HandlerGo(this));</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\">//\t\thandlers.put(\"bye\",new HandlerBye(this));</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\">//\t\thandlers.put(\"help\",new HandlerHelp(this));</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\">//\t\tcreateRooms();</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\thandlers<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"go\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Handler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\t\t<span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\t\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">doCmd</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> word<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\t\t\t<span class=\"token function\">goRoom</span><span class=\"token punctuation\">(</span>word<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\thandlers<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"help\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Handler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\t\t<span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\t\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">doCmd</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> word<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"迷路了吗？你可以做的命令有go bye help\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"如:\\tgo east\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t\thandlers<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"bye\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Handler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t\t\t<span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t\t\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">doCmd</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> word<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre> \t\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"bye\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre> </pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t\t\t<span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t\t\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">isBye</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t\t<span class=\"token function\">createRooms</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "计算机科学",
                "Java",
                "面向对象程序设计-Java语言-浙江大学-翁恺",
                "Java"
            ]
        },
        {
            "id": "https://shoka.lostyu.me/computer-science/java/course-2/week-6/",
            "url": "https://shoka.lostyu.me/computer-science/java/course-2/week-6/",
            "title": "第6周 抽象与接口",
            "date_published": "2020-06-17T11:26:41.000Z",
            "content_html": "<div class=\"note info\">\n<p>以下为个人学习笔记和习题整理<br />\n课程：面向对象程序设计 ——Java 语言<br />\n - 浙江大学 - 翁恺 @ 中国大学 MOOC<br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuaWNvdXJzZTE2My5vcmcvY291cnNlL1pKVS0xMDAxNTQyMDAx\">https://www.icourse163.org/course/ZJU-1001542001</span></p>\n</div>\n<h1 id=\"课堂笔记\"><a class=\"anchor\" href=\"#课堂笔记\">#</a> 课堂笔记</h1>\n<h2 id=\"抽象abstract\"><a class=\"anchor\" href=\"#抽象abstract\">#</a> 抽象 <code>abstract</code></h2>\n<p>抽象函数：表达概念而无法实现具体代码的函数。<br />\n抽象类：表达概念而无法构造出实体的类。</p>\n<p>用 <code>abstract</code>  关键字来定义抽象类。</p>\n<p>抽象类的作用仅仅是表达接口，而不是具体的实现细节。</p>\n<p>抽象类中可以存在抽象方法。<br />\n抽象方法也是使用 <code>abstract</code>  关键字来修饰。<br />\n抽象的方法是不完全的，它只是一个方法签名而完全没有方法体，不能带 <code>&#123;&#125;</code> 。</p>\n<p>如果一个类有了一个抽象的方法，这个类就必须声明为抽象类。</p>\n<blockquote>\n<p>有抽象函数的类，一定是抽象类。</p>\n</blockquote>\n<p>一个抽象类可以没有任何抽象方法，所有的方法都有方法体，但是整个类是抽象的。<br />\n设计这样的抽象类主要是为了防止制造它的对象出来。<br />\n任何继承类抽象类的非抽象类的对象，可以赋给这个变量。</p>\n<blockquote>\n<p>抽象类不能制造对象，但是可以定义变量。</p>\n</blockquote>\n<p>如果父类是抽象类，那么子类<strong>必须覆盖所有</strong>在父类中的抽象方法，否则子类也成为一个抽象类。</p>\n<h3 id=\"两种抽象\"><a class=\"anchor\" href=\"#两种抽象\">#</a> 两种抽象</h3>\n<ul>\n<li>与具体相对：表示一种概念而非实体</li>\n<li>与细节相对：表示在一定程度上忽略细节而着眼大局</li>\n</ul>\n<h2 id=\"接口interface\"><a class=\"anchor\" href=\"#接口interface\">#</a> 接口 <code>interface</code></h2>\n<p>接口是<strong>纯抽象类</strong></p>\n<ul>\n<li>所有的成员函数都是抽象函数</li>\n<li>所有的成员变量都是 <code>public static final</code></li>\n</ul>\n<p>接口规定了长什么样，但是不管里面有什么。</p>\n<blockquote>\n<p><code>interface</code>  是一种特殊的 <code>class</code> ，使用时取代 <code>class</code>  的位置。</p>\n</blockquote>\n<h3 id=\"实现接口implements\"><a class=\"anchor\" href=\"#实现接口implements\">#</a> 实现接口 <code>implements</code></h3>\n<p>类用 <code>extends</code> ，接口用 <code>implements</code> <br />\n 类可以实现很多接口<br />\n接口可以继承接口，但不能继承类<br />\n接口不能实现接口</p>\n<h3 id=\"面向接口的编程方式\"><a class=\"anchor\" href=\"#面向接口的编程方式\">#</a> 面向接口的编程方式</h3>\n<p>设计程序时先定义接口，再实现类。<br />\n任何需要在函数间传入传出的一定是接口，而不是具体的类。<br />\n是 Java 成功的关键之一，因为极适合多人同时写一个大程序。<br />\n也是 Java 被批评的要点之一，因为代码量膨胀起来很快。</p>\n<h1 id=\"课内代码\"><a class=\"anchor\" href=\"#课内代码\">#</a> 课内代码</h1>\n<h2 id=\"细胞自动机\"><a class=\"anchor\" href=\"#细胞自动机\">#</a> 细胞自动机</h2>\n<p>死亡：如果活着的邻居的数量＜2 或＞3，则死亡<br />\n新生：如果正好有 3 个邻居活着，则新生<br />\n其他情况则保持原状</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">cellmachine</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>swing<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">JFrame</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">cell<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Cell</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">field<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Field</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">field<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">View</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CellMachine</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t<span class=\"token class-name\">Field</span> field <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Field</span><span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">,</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> row <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> row<span class=\"token operator\">&lt;</span>field<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> row<span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> col <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> col<span class=\"token operator\">&lt;</span>field<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> col<span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t\t\tfield<span class=\"token punctuation\">.</span><span class=\"token function\">place</span><span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">,</span> col<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Cell</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> row <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> row<span class=\"token operator\">&lt;</span>field<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> row<span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> col <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> col<span class=\"token operator\">&lt;</span>field<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> col<span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\t\t\t<span class=\"token class-name\">Cell</span> cell <span class=\"token operator\">=</span> field<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">,</span> col<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">0.2</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\t\t\t\tcell<span class=\"token punctuation\">.</span><span class=\"token function\">reborn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\t<span class=\"token class-name\">View</span> view <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">View</span><span class=\"token punctuation\">(</span>field<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\t<span class=\"token class-name\">JFrame</span> frame <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">JFrame</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 图形窗口</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\tframe<span class=\"token punctuation\">.</span><span class=\"token function\">setDefaultCloseOperation</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">JFrame</span><span class=\"token punctuation\">.</span>EXIT_ON_CLOSE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 默认关闭的操作</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t\tframe<span class=\"token punctuation\">.</span><span class=\"token function\">setResizable</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t\tframe<span class=\"token punctuation\">.</span><span class=\"token function\">setTitle</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Cells\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t\tframe<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>view<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t\tframe<span class=\"token punctuation\">.</span><span class=\"token function\">pack</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t\tframe<span class=\"token punctuation\">.</span><span class=\"token function\">setVisible</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t\t</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span><span class=\"token number\">1000</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> row <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> row<span class=\"token operator\">&lt;</span>field<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> row<span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> col <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> col<span class=\"token operator\">&lt;</span>field<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> col<span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t\t\t\t\t<span class=\"token class-name\">Cell</span> cell <span class=\"token operator\">=</span> field<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">,</span> col<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t\t\t\t\t<span class=\"token class-name\">Cell</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> neighbour <span class=\"token operator\">=</span> field<span class=\"token punctuation\">.</span><span class=\"token function\">getNeighbour</span><span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">,</span> col<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t\t\t\t\t<span class=\"token keyword\">int</span> numOfLive <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t\t\t\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> <span class=\"token class-name\">Cell</span> c <span class=\"token operator\">:</span> neighbour <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t\t\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> c<span class=\"token punctuation\">.</span><span class=\"token function\">isAlive</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t\t\t\t\t\t\tnumOfLive<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t\t\t\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\t\t\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\t\t\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[\"</span><span class=\"token operator\">+</span>row<span class=\"token operator\">+</span><span class=\"token string\">\"][\"</span><span class=\"token operator\">+</span>col<span class=\"token operator\">+</span><span class=\"token string\">\"]:\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\t\t\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>cell<span class=\"token punctuation\">.</span><span class=\"token function\">isAlive</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">?</span><span class=\"token string\">\"live\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"dead\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\t\t\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\":\"</span><span class=\"token operator\">+</span>numOfLive<span class=\"token operator\">+</span><span class=\"token string\">\"-->\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\t\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> cell<span class=\"token punctuation\">.</span><span class=\"token function\">isAlive</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\t\t\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> numOfLive <span class=\"token operator\">&lt;</span><span class=\"token number\">2</span> <span class=\"token operator\">||</span> numOfLive <span class=\"token operator\">></span><span class=\"token number\">3</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\t\t\t\t\t\t\tcell<span class=\"token punctuation\">.</span><span class=\"token function\">die</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>\t\t\t\t\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"die\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\t\t\t\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\t\t\t\t\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> numOfLive <span class=\"token operator\">==</span> <span class=\"token number\">3</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>\t\t\t\t\t\tcell<span class=\"token punctuation\">.</span><span class=\"token function\">reborn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>\t\t\t\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"reborn\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\t\t\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>\t\t\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"UPDATE\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>\t\t\tframe<span class=\"token punctuation\">.</span><span class=\"token function\">repaint</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>\t\t\t<span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>\t\t\t\t<span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">InterruptedException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>\t\t\t\te<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre></pre></td></tr><tr><td data-num=\"71\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">cell</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>awt<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Graphics</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre> </pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Cell</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">boolean</span> alive <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">die</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> alive <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">reborn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> alive <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">isAlive</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">return</span> alive<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Graphics</span> g<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> size<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\tg<span class=\"token punctuation\">.</span><span class=\"token function\">drawRect</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> alive <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t\tg<span class=\"token punctuation\">.</span><span class=\"token function\">fillRect</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">field</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ArrayList</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">cell<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Cell</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Field</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> width<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> height<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token keyword\">private</span> <span class=\"token class-name\">Cell</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> field<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">Field</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> height<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>width <span class=\"token operator\">=</span> width<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>height <span class=\"token operator\">=</span> height<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\tfield <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Cell</span><span class=\"token punctuation\">[</span>height<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>width<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">return</span> width<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">return</span> height<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">Cell</span> <span class=\"token function\">place</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> row<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> col<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Cell</span> o<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\t<span class=\"token class-name\">Cell</span> ret <span class=\"token operator\">=</span> field<span class=\"token punctuation\">[</span>row<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>col<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\tfield<span class=\"token punctuation\">[</span>row<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>col<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> o<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> ret<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">Cell</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> row<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> col<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> field<span class=\"token punctuation\">[</span>row<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>col<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">Cell</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token function\">getNeighbour</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> row<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> col<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t\t<span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Cell</span><span class=\"token punctuation\">></span></span> list <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Cell</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> j<span class=\"token operator\">=</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">&lt;</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">int</span> r <span class=\"token operator\">=</span> row<span class=\"token operator\">+</span>i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">int</span> c <span class=\"token operator\">=</span> col<span class=\"token operator\">+</span>j<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> r <span class=\"token operator\">></span><span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">&amp;&amp;</span> r<span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>height <span class=\"token operator\">&amp;</span><span class=\"token operator\">&amp;</span> c<span class=\"token punctuation\">></span></span><span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">&amp;&amp;</span> c<span class=\"token operator\">&lt;</span>width <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>r<span class=\"token operator\">==</span> row <span class=\"token operator\">&amp;&amp;</span> c <span class=\"token operator\">==</span> col<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t\t\t\t\tlist<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>field<span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>c<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> list<span class=\"token punctuation\">.</span><span class=\"token function\">toArray</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Cell</span><span class=\"token punctuation\">[</span>list<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span>height<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\t\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> j<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">&lt;</span>width<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\t\t\t\tfield<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">field</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>awt<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Dimension</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>awt<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Graphics</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>swing<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">JFrame</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>swing<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">JPanel</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">cell<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Cell</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">View</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">JPanel</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">long</span> serialVersionUID <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">5258995676212660595L</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> GRID_SIZE <span class=\"token operator\">=</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token keyword\">private</span> <span class=\"token class-name\">Field</span> theField<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">View</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Field</span> field<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\ttheField <span class=\"token operator\">=</span> field<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">paint</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Graphics</span> g<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\t<span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">paint</span><span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> row <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> row<span class=\"token operator\">&lt;</span>theField<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> row<span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> col <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> col<span class=\"token operator\">&lt;</span>theField<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> col<span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t\t\t\t<span class=\"token class-name\">Cell</span> cell <span class=\"token operator\">=</span> theField<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">,</span> col<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> cell <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\t\t\t\tcell<span class=\"token punctuation\">.</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">,</span> col<span class=\"token operator\">*</span>GRID_SIZE<span class=\"token punctuation\">,</span> row<span class=\"token operator\">*</span>GRID_SIZE<span class=\"token punctuation\">,</span> GRID_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t<span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">Dimension</span> <span class=\"token function\">getPreferredSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Dimension</span><span class=\"token punctuation\">(</span>theField<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>GRID_SIZE<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> theField<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>GRID_SIZE<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t\t<span class=\"token class-name\">Field</span> field <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Field</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> row <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> row<span class=\"token operator\">&lt;</span>field<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> row<span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> col <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> col<span class=\"token operator\">&lt;</span>field<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> col<span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t\t\t\tfield<span class=\"token punctuation\">.</span><span class=\"token function\">place</span><span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">,</span> col<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Cell</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\t\t<span class=\"token class-name\">View</span> view <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">View</span><span class=\"token punctuation\">(</span>field<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\t\t<span class=\"token class-name\">JFrame</span> frame <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">JFrame</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\t\tframe<span class=\"token punctuation\">.</span><span class=\"token function\">setDefaultCloseOperation</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">JFrame</span><span class=\"token punctuation\">.</span>EXIT_ON_CLOSE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\t\tframe<span class=\"token punctuation\">.</span><span class=\"token function\">setResizable</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\t\tframe<span class=\"token punctuation\">.</span><span class=\"token function\">setTitle</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Cells\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\t\tframe<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>view<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\t\tframe<span class=\"token punctuation\">.</span><span class=\"token function\">pack</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>\t\tframe<span class=\"token punctuation\">.</span><span class=\"token function\">setVisible</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"设计理念\"><a class=\"anchor\" href=\"#设计理念\">#</a> 设计理念</h3>\n<ol>\n<li>数据与表现分离<br />\n程序的业务逻辑与表现无关<br />\n表现可以是图形的也可以是文本的<br />\n表现可以是当地的也可以是远程的</li>\n</ol>\n<blockquote>\n<p>表现与数据的关系<br />\n <code>View</code>  只管根据 <code>Field</code>  画出图形， <code>Field</code>  只管数据的存放。<br />\n一旦数据更新以后，通知 <code>View</code>  重新画出整个画面，不去精心设计哪个局部需要更新，这样简化了程序逻辑，是在计算机运算速度提高的基础上实现的。</p>\n</blockquote>\n<ol start=\"2\">\n<li>\n<p>责任驱动的设计<br />\n将程序要实现的功能分配到合适的类 / 对象中去是设计中非常中要的一环</p>\n</li>\n<li>\n<p>网格化<br />\n图形界面本身有更高的解析度<br />\n但是将画面网格化以后，数据就更容易处理了</p>\n</li>\n</ol>\n<h2 id=\"狐狸与兔子\"><a class=\"anchor\" href=\"#狐狸与兔子\">#</a> 狐狸与兔子</h2>\n<p>狐狸、兔子都有年龄；<br />\n到达一定年龄上限会自然死亡；<br />\n狐狸随机吃掉周围一只兔子；<br />\n狐狸、兔子可以随机生一只小的放在旁边格子；<br />\n如果不吃不生，狐狸、兔子可以随机向旁边格子移一步会随机吃掉。</p>\n<h3 id=\"foxandrabbit程序执行入口\"><a class=\"anchor\" href=\"#foxandrabbit程序执行入口\">#</a>  <code>FoxAndRabbit</code>  程序执行入口</h3>\n<p>主要思想：<br />\n两层 <code>for</code>  循环，挨个 <code>cell</code>  执行移动、进食、生育；<br />\n每次循环结束后 <code>repaint view</code> 。</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token class-name\">FoxAndRabbit</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">field<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Field</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">field<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">View</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">field<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Location</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ArrayList</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>swing<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">JFrame</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">animal<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Fox</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">animal<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Rabbit</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">animal<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Animal</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">cell<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Cell</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">FoxAndRabbit</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token keyword\">private</span> <span class=\"token class-name\">Field</span> thefield<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token keyword\">private</span> <span class=\"token class-name\">View</span> theview<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">FoxAndRabbit</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> size <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\tthefield <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Field</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> row <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> row <span class=\"token operator\">&lt;</span>thefield<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> row<span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> col <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> col <span class=\"token operator\">&lt;</span> thefield<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> col<span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">double</span> probability <span class=\"token operator\">=</span> <span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> probability <span class=\"token operator\">&lt;</span><span class=\"token number\">0.05</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\t\t\t\tthefield<span class=\"token punctuation\">.</span><span class=\"token function\">place</span><span class=\"token punctuation\">(</span> row<span class=\"token punctuation\">,</span> col<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Fox</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> probability <span class=\"token operator\">&lt;</span> <span class=\"token number\">0.15</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\t\t\t\tthefield<span class=\"token punctuation\">.</span><span class=\"token function\">place</span><span class=\"token punctuation\">(</span> row<span class=\"token punctuation\">,</span> col<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Rabbit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t\ttheview <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">View</span><span class=\"token punctuation\">(</span>thefield<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t\t<span class=\"token class-name\">JFrame</span> frame <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">JFrame</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t\tframe<span class=\"token punctuation\">.</span><span class=\"token function\">setDefaultCloseOperation</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">JFrame</span><span class=\"token punctuation\">.</span>EXIT_ON_CLOSE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t\tframe<span class=\"token punctuation\">.</span><span class=\"token function\">setResizable</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t\tframe<span class=\"token punctuation\">.</span><span class=\"token function\">setTitle</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"FoxAndRabbit\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t\tframe<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>theview<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t\tframe<span class=\"token punctuation\">.</span><span class=\"token function\">pack</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t\tframe<span class=\"token punctuation\">.</span><span class=\"token function\">setVisible</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">step</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> row <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> row <span class=\"token operator\">&lt;</span> thefield<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> row<span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> col <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> col <span class=\"token operator\">&lt;</span> thefield<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> col<span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\t\t\t\t<span class=\"token class-name\">Cell</span> cell <span class=\"token operator\">=</span> thefield<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">,</span> col<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> cell <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\t\t\t\t\t<span class=\"token class-name\">Animal</span> animal <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Animal</span><span class=\"token punctuation\">)</span>cell<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\t\t\t\t\tanimal<span class=\"token punctuation\">.</span><span class=\"token function\">grow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\t\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> animal<span class=\"token punctuation\">.</span><span class=\"token function\">isAlive</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\t\t\t\t\t\t<span class=\"token comment\">//move</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\t\t\t\t\t\t<span class=\"token class-name\">Location</span> loc <span class=\"token operator\">=</span> animal<span class=\"token punctuation\">.</span><span class=\"token function\">move</span><span class=\"token punctuation\">(</span>thefield<span class=\"token punctuation\">.</span><span class=\"token function\">getFreeNeighbour</span><span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">,</span> col<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>\t\t\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> loc <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\t\t\t\t\t\t\tthefield<span class=\"token punctuation\">.</span><span class=\"token function\">move</span><span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">,</span> col<span class=\"token punctuation\">,</span> loc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\t\t\t\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>\t\t\t\t\t\t<span class=\"token comment\">//eat   animal.eat(thefield);</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>\t\t\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> animal <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Fox</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\t\t\t\t\t\t\t<span class=\"token class-name\">Cell</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> neighbour <span class=\"token operator\">=</span> thefield<span class=\"token punctuation\">.</span><span class=\"token function\">getNeighbour</span><span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">,</span> col<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>\t\t\t\t\t\t\t<span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Animal</span><span class=\"token punctuation\">></span></span> listRabbit <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Animal</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>\t\t\t\t\t\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span> <span class=\"token class-name\">Cell</span> an <span class=\"token operator\">:</span> neighbour <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>\t\t\t\t\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> an <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Rabbit</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>\t\t\t\t\t\t\t\t\tlistRabbit<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Rabbit</span><span class=\"token punctuation\">)</span>an <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>\t\t\t\t\t\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>\t\t\t\t\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>\t\t\t\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span>listRabbit<span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>\t\t\t\t\t\t\t\t<span class=\"token class-name\">Animal</span> fed <span class=\"token operator\">=</span> animal<span class=\"token punctuation\">.</span><span class=\"token function\">feed</span><span class=\"token punctuation\">(</span>listRabbit<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>\t\t\t\t\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> fed <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>\t\t\t\t\t\t\t\t\tthefield<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Cell</span><span class=\"token punctuation\">)</span>fed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>\t\t\t\t\t\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>\t\t\t\t\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>\t\t\t\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>\t\t\t\t\t\t<span class=\"token comment\">//breed</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>\t\t\t\t\t\t<span class=\"token class-name\">Animal</span> baby <span class=\"token operator\">=</span> animal<span class=\"token punctuation\">.</span><span class=\"token function\">breed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>\t\t\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> baby <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>\t\t\t\t\t\t\tthefield<span class=\"token punctuation\">.</span><span class=\"token function\">placeRandomAdj</span><span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">,</span> col<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Cell</span><span class=\"token punctuation\">)</span>baby<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>\t\t\t\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>\t\t\t\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>\t\t\t\t\t\tthefield<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">,</span> col<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>\t\t\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span>\t</pre></td></tr><tr><td data-num=\"82\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"84\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">start</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> steps <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> steps<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>\t\t\t<span class=\"token function\">step</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>\t\t\ttheview<span class=\"token punctuation\">.</span><span class=\"token function\">repaint</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>\t\t\t<span class=\"token keyword\">try</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>\t\t\t\t<span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">InterruptedException</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>\t\t\t\te<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"96\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>\t\t<span class=\"token class-name\">FoxAndRabbit</span> fnr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FoxAndRabbit</span><span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>\t\tfnr<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"cell包\"><a class=\"anchor\" href=\"#cell包\">#</a>  <code>cell</code>  包</h3>\n<h4 id=\"cell接口类\"><a class=\"anchor\" href=\"#cell接口类\">#</a>  <code>Cell</code>  接口类</h4>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">cell</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>awt<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Graphics</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre> </pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">Cell</span> <span class=\"token punctuation\">&#123;</span>\t</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Graphics</span> g<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"field包\"><a class=\"anchor\" href=\"#field包\">#</a>  <code>field</code>  包</h3>\n<h4 id=\"location类\"><a class=\"anchor\" href=\"#location类\">#</a>  <code>Location</code>  类</h4>\n<p>用于定位，返回所要 <code>cell</code>  位置。</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">field</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Location</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> row<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> col<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">Location</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> row<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> col <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>col <span class=\"token operator\">=</span> col<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>row <span class=\"token operator\">=</span> row<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">getRow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> row<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">getCol</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> col<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4 id=\"field类\"><a class=\"anchor\" href=\"#field类\">#</a>  <code>Field</code>  类</h4>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">field</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ArrayList</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">cell<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Cell</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Field</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">//  这段代码没用到过</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">//\tprivate static final Location[] adjacent = &#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">//\t\t\tnew Location(-1,-1),new Location(-1,0),new Location(-1,1),</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">//\t\t\tnew Location(0,-1) ,new Location(0,0) ,new Location(0,-1), </span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">//\t\t\tnew Location(1,-1) ,new Location(1,-1),new Location(1,-1),</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\">//\t&#125;;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> width<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 长</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> height<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 宽</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token keyword\">private</span> <span class=\"token class-name\">Cell</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> field<span class=\"token punctuation\">;</span> <span class=\"token comment\">//cell 二维数组</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t * 构造方法：生成指定大小 cell 二维数组</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t * @param  width  长</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t * @param  height 宽</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t */</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">Field</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>height <span class=\"token operator\">=</span> height<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>width <span class=\"token operator\">=</span> width<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\tfield <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Cell</span><span class=\"token punctuation\">[</span>height<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>width<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t<span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t * 简单方法：获取长、宽、指定 cell</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t * @return [description]</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t */</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">return</span> width<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">return</span> height<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">Cell</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> row<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> col<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> field<span class=\"token punctuation\">[</span>row<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>col<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t<span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t * 获取周围 cell</pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t * @param  row 当前 cell 的坐标：行</pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t * @param  col 当前 cell 的坐标：列</pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t * @return     周围 cell 数组</pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\t */</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">Cell</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token function\">getNeighbour</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> row<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> col<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\t\t<span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Cell</span><span class=\"token punctuation\">></span></span> list <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Cell</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\t\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">&lt;</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">int</span> r <span class=\"token operator\">=</span> row<span class=\"token operator\">+</span>i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">int</span> c <span class=\"token operator\">=</span> col<span class=\"token operator\">+</span>j<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> r<span class=\"token operator\">></span><span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">&amp;&amp;</span> r<span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>height <span class=\"token operator\">&amp;</span><span class=\"token operator\">&amp;</span> c<span class=\"token punctuation\">></span></span><span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">&amp;&amp;</span> c<span class=\"token operator\">&lt;</span>width <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>r <span class=\"token operator\">==</span> row <span class=\"token operator\">&amp;&amp;</span> c <span class=\"token operator\">==</span> col<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\t\t\t\t\tlist<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>field<span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>c<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> list<span class=\"token punctuation\">.</span><span class=\"token function\">toArray</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Cell</span><span class=\"token punctuation\">[</span>list<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"60\"></td><td><pre>\t<span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"61\"></td><td><pre>\t * 列出周围的空 cell</pre></td></tr><tr><td data-num=\"62\"></td><td><pre>\t * @param  row 当前 cell 的坐标：行</pre></td></tr><tr><td data-num=\"63\"></td><td><pre>\t * @param  col 当前 cell 的坐标：列</pre></td></tr><tr><td data-num=\"64\"></td><td><pre>\t * @return     周围的空 cell 数组</pre></td></tr><tr><td data-num=\"65\"></td><td><pre>\t */</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">Location</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token function\">getFreeNeighbour</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> row<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> col<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>   </pre></td></tr><tr><td data-num=\"67\"></td><td><pre>\t\t<span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Location</span><span class=\"token punctuation\">></span></span> list <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Location</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>\t\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">&lt;</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">int</span> r <span class=\"token operator\">=</span> row<span class=\"token operator\">+</span>i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">int</span> c <span class=\"token operator\">=</span> col<span class=\"token operator\">+</span>j<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> r<span class=\"token operator\">></span><span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">&amp;&amp;</span> r<span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>height <span class=\"token operator\">&amp;</span><span class=\"token operator\">&amp;</span> c<span class=\"token punctuation\">></span></span><span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">&amp;&amp;</span> c<span class=\"token operator\">&lt;</span>width <span class=\"token operator\">&amp;&amp;</span> field<span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>c<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>\t\t\t\t\tlist<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Location</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> list<span class=\"token punctuation\">.</span><span class=\"token function\">toArray</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Location</span><span class=\"token punctuation\">[</span>list<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"80\"></td><td><pre>\t<span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"81\"></td><td><pre>\t * 在周围空 cell 里放置一个 cell</pre></td></tr><tr><td data-num=\"82\"></td><td><pre>\t * @param  row  当前 cell 的坐标：行</pre></td></tr><tr><td data-num=\"83\"></td><td><pre>\t * @param  col  当前 cell 的坐标：列</pre></td></tr><tr><td data-num=\"84\"></td><td><pre>\t * @param  cell 待放入的 cell</pre></td></tr><tr><td data-num=\"85\"></td><td><pre>\t * @return      是否成功放入 cell 进 field</pre></td></tr><tr><td data-num=\"86\"></td><td><pre>\t */</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">placeRandomAdj</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> row<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> col<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Cell</span> cell <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>   </pre></td></tr><tr><td data-num=\"88\"></td><td><pre>\t\t<span class=\"token keyword\">boolean</span> ret <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>\t\t<span class=\"token class-name\">Location</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token class-name\">FreeAdj</span> <span class=\"token operator\">=</span> <span class=\"token function\">getFreeNeighbour</span><span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">,</span> col<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token class-name\">FreeAdj</span><span class=\"token punctuation\">.</span>length <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>\t\t\t<span class=\"token keyword\">int</span> idx <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token class-name\">FreeAdj</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>\t\t\tfield<span class=\"token punctuation\">[</span><span class=\"token class-name\">FreeAdj</span><span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">getRow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token class-name\">FreeAdj</span><span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">getCol</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> cell<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>\t\t\tret <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> ret<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"98\"></td><td><pre>\t<span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"99\"></td><td><pre>\t * 根据坐标删除 cell</pre></td></tr><tr><td data-num=\"100\"></td><td><pre>\t * @param  row 待删除 cell 的坐标：行</pre></td></tr><tr><td data-num=\"101\"></td><td><pre>\t * @param  col 待删除 cell 的坐标：列</pre></td></tr><tr><td data-num=\"102\"></td><td><pre>\t * @return     </pre></td></tr><tr><td data-num=\"103\"></td><td><pre>\t */</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">Cell</span> <span class=\"token function\">remove</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> row<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> col <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>\t\t<span class=\"token class-name\">Cell</span> ret <span class=\"token operator\">=</span> field<span class=\"token punctuation\">[</span>row<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>col<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>\t\tfield<span class=\"token punctuation\">[</span>row<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>col<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> ret<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"110\"></td><td><pre>\t<span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"111\"></td><td><pre>\t * 删除 cell</pre></td></tr><tr><td data-num=\"112\"></td><td><pre>\t * @param cell 待删除的 cell</pre></td></tr><tr><td data-num=\"113\"></td><td><pre>\t */</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">remove</span><span class=\"token punctuation\">(</span> <span class=\"token class-name\">Cell</span> cell <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> row <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> row <span class=\"token operator\">&lt;</span> height<span class=\"token punctuation\">;</span> row<span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>\t\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> col <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> col <span class=\"token operator\">&lt;</span>width<span class=\"token punctuation\">;</span> col<span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> field<span class=\"token punctuation\">[</span>row<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>col<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> cell <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>\t\t\t\t\tfield<span class=\"token punctuation\">[</span>row<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>col<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>\t\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"125\"></td><td><pre>\t<span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"126\"></td><td><pre>\t * 清空所有 cell</pre></td></tr><tr><td data-num=\"127\"></td><td><pre>\t */</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> height<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>\t\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> width<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre>\t\t\t\tfield<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"136\"></td><td><pre>\t<span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"137\"></td><td><pre>\t * 移动 cell</pre></td></tr><tr><td data-num=\"138\"></td><td><pre>\t * @param row 当前 cell 的坐标：行</pre></td></tr><tr><td data-num=\"139\"></td><td><pre>\t * @param col 当前 cell 的坐标：列</pre></td></tr><tr><td data-num=\"140\"></td><td><pre>\t * @param loc 目标坐标的 Location</pre></td></tr><tr><td data-num=\"141\"></td><td><pre>\t */</span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">move</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> row<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> col<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Location</span> loc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"143\"></td><td><pre>\t\tfield<span class=\"token punctuation\">[</span>loc<span class=\"token punctuation\">.</span><span class=\"token function\">getRow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>loc<span class=\"token punctuation\">.</span><span class=\"token function\">getCol</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> field<span class=\"token punctuation\">[</span>row<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>col<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre>\t\t<span class=\"token function\">remove</span><span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">,</span>col<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"145\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"146\"></td><td><pre></pre></td></tr><tr><td data-num=\"147\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">Cell</span> <span class=\"token function\">place</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> row<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> col<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Cell</span> c<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"148\"></td><td><pre>\t\t<span class=\"token class-name\">Cell</span> ret <span class=\"token operator\">=</span> field<span class=\"token punctuation\">[</span>row<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>col<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"149\"></td><td><pre>\t\tfield<span class=\"token punctuation\">[</span>row<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>col<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> c<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"150\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> ret<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"151\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"152\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4 id=\"view类\"><a class=\"anchor\" href=\"#view类\">#</a>  <code>View</code>  类</h4>\n<p>继承自 <code>JPanel</code>  面板<br />\n重写的方法： <code>paint</code> ，设置刚好的尺寸。</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">field</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>awt<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Color</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>awt<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Dimension</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>awt<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Graphics</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>swing<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">JPanel</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">cell<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Cell</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">View</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">JPanel</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">long</span> serialVersionUID <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">2417015700213488315L</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> GRID_SIZE <span class=\"token operator\">=</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token keyword\">private</span> <span class=\"token class-name\">Field</span> thefield<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">View</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Field</span> field<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\tthefield <span class=\"token operator\">=</span> field<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t<span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">paint</span><span class=\"token punctuation\">(</span> <span class=\"token class-name\">Graphics</span> g <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\t<span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">paint</span><span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\tg<span class=\"token punctuation\">.</span><span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Color</span><span class=\"token punctuation\">.</span>gray<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> row <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> row <span class=\"token operator\">&lt;</span> thefield<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> row<span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t\t\tg<span class=\"token punctuation\">.</span><span class=\"token function\">drawLine</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> row<span class=\"token operator\">*</span>GRID_SIZE<span class=\"token punctuation\">,</span> thefield<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>GRID_SIZE<span class=\"token punctuation\">,</span> row<span class=\"token operator\">*</span>GRID_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> col <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> col <span class=\"token operator\">&lt;</span> thefield<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> col<span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\t\tg<span class=\"token punctuation\">.</span><span class=\"token function\">drawLine</span><span class=\"token punctuation\">(</span>col<span class=\"token operator\">*</span>GRID_SIZE<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> col<span class=\"token operator\">*</span>GRID_SIZE<span class=\"token punctuation\">,</span> thefield<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>GRID_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> row <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> row <span class=\"token operator\">&lt;</span> thefield<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> row<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> col <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> col <span class=\"token operator\">&lt;</span> thefield<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> col<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t\t\t\t<span class=\"token class-name\">Cell</span> cell <span class=\"token operator\">=</span> thefield<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">,</span> col<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> cell <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t\t\t\t\tcell<span class=\"token punctuation\">.</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span> g<span class=\"token punctuation\">,</span> col<span class=\"token operator\">*</span>GRID_SIZE<span class=\"token punctuation\">,</span> row<span class=\"token operator\">*</span>GRID_SIZE<span class=\"token punctuation\">,</span> GRID_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t<span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">Dimension</span> <span class=\"token function\">getPreferredSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Dimension</span><span class=\"token punctuation\">(</span>thefield<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>GRID_SIZE<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> thefield<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>GRID_SIZE<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"animal-包\"><a class=\"anchor\" href=\"#animal-包\">#</a>  <code>animal</code>  包</h3>\n<h4 id=\"animal抽象类\"><a class=\"anchor\" href=\"#animal抽象类\">#</a>  <code>Animal</code>  抽象类</h4>\n<p>是 <code>fox</code> ， <code>rabbit</code>  的父类。</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">animal</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ArrayList</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">field<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Location</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">abstract</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Animal</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> ageLimit<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 生存时间</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> breedableAge<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 生育年龄</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> age<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 现年龄</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">boolean</span> isAlive <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 是否存活</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t * 构造方法</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t * @param  ageLimit     生存时间</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t * @param  breedableAge 生育年龄</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t */</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">Animal</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> ageLimit<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> breedableAge<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>ageLimit <span class=\"token operator\">=</span> ageLimit<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>breedableAge <span class=\"token operator\">=</span> breedableAge<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t<span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t * 简单方法：获取年龄</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t * @return 现年龄</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t */</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t<span class=\"token keyword\">protected</span> <span class=\"token keyword\">int</span> <span class=\"token function\">getAge</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> age<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t<span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t * 简单方法：获取年龄百分比</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t * @return 年龄百分比</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t */</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t<span class=\"token keyword\">protected</span> <span class=\"token keyword\">double</span> <span class=\"token function\">getAgePercent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span><span class=\"token punctuation\">)</span>age<span class=\"token operator\">/</span>ageLimit<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span>\t</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t<span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t * 简单方法：存活状态</pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t * @return 是否存活</pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t */</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">isAlive</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> isAlive<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\t<span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\t * 简单方法：生育状态</pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\t * @return 是否能够生育</pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\t */</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">isBreedable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> age <span class=\"token operator\">></span> breedableAge<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span>\t</pre></td></tr><tr><td data-num=\"55\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"56\"></td><td><pre>\t<span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\t * 简单方法：寿命增长</pre></td></tr><tr><td data-num=\"58\"></td><td><pre>\t * @param addage 增长数值</pre></td></tr><tr><td data-num=\"59\"></td><td><pre>\t */</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>\t<span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">longerlife</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> addage <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>\t\tageLimit <span class=\"token operator\">+=</span> addage<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>\t<span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"65\"></td><td><pre>\t * 简单方法：成长（到年龄死亡）</pre></td></tr><tr><td data-num=\"66\"></td><td><pre>\t */</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">grow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>\t\tage<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>age <span class=\"token operator\">></span> ageLimit<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>\t\t\t<span class=\"token function\">die</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>\t<span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"75\"></td><td><pre>\t * 简单方法：死亡</pre></td></tr><tr><td data-num=\"76\"></td><td><pre>\t */</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">die</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>\t\tisAlive <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"81\"></td><td><pre>\t<span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"82\"></td><td><pre>\t * 移动方法</pre></td></tr><tr><td data-num=\"83\"></td><td><pre>\t * @param  freeAdj 周围空 cell 坐标</pre></td></tr><tr><td data-num=\"84\"></td><td><pre>\t * @return         其中一个空 cell 坐标</pre></td></tr><tr><td data-num=\"85\"></td><td><pre>\t */</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">Location</span> <span class=\"token function\">move</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Location</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> freeAdj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>\t\t<span class=\"token class-name\">Location</span> ret <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> freeAdj<span class=\"token punctuation\">.</span>length <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">0.02</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>\t\t\tret <span class=\"token operator\">=</span> freeAdj<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>freeAdj<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> ret<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"94\"></td><td><pre>\t<span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"95\"></td><td><pre>\t * 抽象方法：生育</pre></td></tr><tr><td data-num=\"96\"></td><td><pre>\t */</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">abstract</span> <span class=\"token class-name\">Animal</span> <span class=\"token function\">breed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>\t<span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"100\"></td><td><pre>\t * 返回值方法：进食</pre></td></tr><tr><td data-num=\"101\"></td><td><pre>\t * @param  neighbour 附近动物的数组</pre></td></tr><tr><td data-num=\"102\"></td><td><pre>\t * @return 被吃的动物          </pre></td></tr><tr><td data-num=\"103\"></td><td><pre>\t */</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">Animal</span> <span class=\"token function\">feed</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Animal</span><span class=\"token punctuation\">></span></span> neighbour<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"108\"></td><td><pre>\t<span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token string\">\" \"</span><span class=\"token operator\">+</span>age<span class=\"token operator\">+</span><span class=\"token string\">\":\"</span><span class=\"token operator\">+</span><span class=\"token punctuation\">(</span>isAlive<span class=\"token operator\">?</span><span class=\"token string\">\"live\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"dead\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4 id=\"fox类\"><a class=\"anchor\" href=\"#fox类\">#</a>  <code>Fox</code>  类</h4>\n<p>继承 <code>Animal</code> ， <code>Cell</code></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">animal</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>awt<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Color</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>awt<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Graphics</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ArrayList</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">cell<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Cell</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Fox</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Animal</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Cell</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t * 构造方法</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t * 生存时间 20，生育年龄 4</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t */</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">Fox</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t<span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">// 最大年龄，生育年龄</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t<span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t * 重写接口 cell 方法：draw</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t * @param g    cell 图</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t * @param x    x 坐标</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t * @param y    y 坐标</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t * @param size 大小</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t */</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t<span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span> <span class=\"token class-name\">Graphics</span> g<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> size <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\t<span class=\"token keyword\">int</span> alpha <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token operator\">-</span><span class=\"token function\">getAgePercent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t\tg<span class=\"token punctuation\">.</span><span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>alpha<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t\tg<span class=\"token punctuation\">.</span><span class=\"token function\">fillRect</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t<span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t * 重写抽象方法：Animal 的生育</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t * @return Animal</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t */</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t<span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">Animal</span> <span class=\"token function\">breed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t\t<span class=\"token class-name\">Animal</span> ret <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t\t<span class=\"token comment\">// 生育的概率是 5%</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token function\">isBreedable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">0.05</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>   </pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t\t\tret <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Fox</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> ret<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\t<span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\t * 重写方法：Animal 的进食</pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\t * @param  neighbour 附近兔子的数组</pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\t * @return           被吃的兔子</pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\t */</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>\t<span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">Animal</span> <span class=\"token function\">feed</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Animal</span><span class=\"token punctuation\">></span></span> neighbour<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\t\t<span class=\"token class-name\">Animal</span> ret <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>\t\t<span class=\"token comment\">// 被吃的概率为 20%</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">0.2</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\t\t\tret <span class=\"token operator\">=</span> neighbour<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>neighbour<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>\t\t\t<span class=\"token function\">longerlife</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> ret<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"63\"></td><td><pre>\t<span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token string\">\"Fox:\"</span><span class=\"token operator\">+</span><span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4 id=\"rabbit类\"><a class=\"anchor\" href=\"#rabbit类\">#</a>  <code>Rabbit</code>  类</h4>\n<p>继承 <code>Animal</code> ， <code>Cell</code></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">animal</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>awt<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Color</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>awt<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Graphics</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">cell<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Cell</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Rabbit</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Animal</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Cell</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t * 构造方法</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t * 生存时间 10，生育年龄 2</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t */</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">Rabbit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t<span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t * 重写接口 cell 方法：draw</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t * @param g    cell 图</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t * @param x    x 坐标</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t * @param y    y 坐标</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t * @param size 大小</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t */</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t<span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Graphics</span> g<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> size<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\t<span class=\"token keyword\">int</span> alpha <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token operator\">-</span><span class=\"token function\">getAgePercent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\tg<span class=\"token punctuation\">.</span><span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>alpha<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t\tg<span class=\"token punctuation\">.</span><span class=\"token function\">fillRect</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t<span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t * 重写抽象方法：Animal 的生育</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t * @return Animal</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t */</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t<span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">Animal</span> <span class=\"token function\">breed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t\t<span class=\"token class-name\">Animal</span> ret <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t\t<span class=\"token comment\">// 生育的概率是 12%</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token function\">isBreedable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">0.12</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t\t\tret <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Rabbit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> ret<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\t<span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token string\">\"Rabbit:\"</span><span class=\"token operator\">+</span><span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"课堂讨论\"><a class=\"anchor\" href=\"#课堂讨论\">#</a> 课堂讨论</h1>\n<h2 id=\"细胞自动机-2\"><a class=\"anchor\" href=\"#细胞自动机-2\">#</a> 细胞自动机</h2>\n<ol>\n<li>为什么没有 <code>Cell.setAlive()</code> ？为什么不是在 <code>Cell</code>  提供 <code>setAlive(boolean)</code>  函数？而是采用复杂的 <code>die()</code> 、 <code>reborn()</code>  两个函数？</li>\n</ol>\n<blockquote>\n<p>提高可阅读性，且 <code>Cellmachine</code>  类就是用来实现人机交互，业务逻辑交给 <code>Cell</code>  类。</p>\n</blockquote>\n<ol start=\"2\">\n<li>为什么 <code>Field.getNeighbour()</code>  不直接看 <code>Cell.isAlive()</code>  来返回一个数字，而是要返回一个数组让外面来数数？</li>\n</ol>\n<blockquote>\n<p><code>Field</code>  这个类的职责是为对象提供一个可定位的安放空间，它不需要知道对象的任何额外信息。这种低耦合设计使得 <code>Cell</code>  变动时 <code>Field</code>  无须作出调整。</p>\n</blockquote>\n<ol start=\"3\">\n<li>为什么不是由 <code>Cell</code>  自己判断自己的邻居的情况来决定自己是否应该被 <code>die</code>  或 <code>reborn</code> ？</li>\n</ol>\n<blockquote>\n<p><code>Cell</code>  要知道自己被生还是被死，就要获取一个数组， <code>Cell</code>  类， <code>Cellmachine</code>  类， <code>Field</code>  类就会相互使用，面向设计原则有一点是单一原则，各类各司其职，判断细胞是生是死让 <code>Cellmachine</code>  做就行了， <code>Cell</code>  只要负责提供细胞就行了。<br />\n好处就是简化了 <code>Cellmachine</code>  的代码，增加可读性，降低复杂性。</p>\n</blockquote>\n<h2 id=\"狐狸与兔子-2\"><a class=\"anchor\" href=\"#狐狸与兔子-2\">#</a> 狐狸与兔子</h2>\n<ol start=\"4\">\n<li><code>Fox.breed()</code>  和 <code>Rabbit.breed()</code>  几乎一样，有什么好办法修改？注意 <code>Fox</code>  和 <code>Rabbit</code>  的 <code>breed()</code>  返回的具体类型不同。</li>\n</ol>\n<blockquote>\n<p><code>Animal</code>  中定义</p>\n</blockquote>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">protected</span> <span class=\"token keyword\">double</span> breedPercent<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">abstract</span> <span class=\"token class-name\">Animal</span> <span class=\"token function\">newAnimal</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token class-name\">Animal</span> <span class=\"token function\">breed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token class-name\">Animal</span> ret <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token function\">isBreedable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span>  <span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;</span> breedPercent<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token function\">newAnimal</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token keyword\">return</span> ret<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><blockquote>\n<p><code>Fox</code>  中定义</p>\n</blockquote>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">protected</span> <span class=\"token keyword\">double</span> breedPercent <span class=\"token operator\">=</span> <span class=\"token number\">0.05</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token class-name\">Animal</span> <span class=\"token function\">newAnimal</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Fox</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><blockquote>\n<p><code>Rabbit</code>  中定义</p>\n</blockquote>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">protected</span> <span class=\"token keyword\">double</span> breedPercent <span class=\"token operator\">=</span> <span class=\"token number\">0.12</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token class-name\">Animal</span> <span class=\"token function\">newAnimal</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Rabbit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ol start=\"5\">\n<li>在城堡游戏中， <code>Handler</code>  是知道 <code>Game</code>  的；在细胞自动机中， <code>Cell</code>  是不知道 <code>Field</code>  的。在现在版本的狐狸与兔子中， <code>Cell</code>  也是不知道 <code>Field</code>  的。那么，如果让 <code>Cell</code>  知道 <code>Field</code>  会怎样呢？两种做法各有什么优缺点呢？</li>\n</ol>\n<blockquote>\n<p><code>Cell</code>  不知道 <code>Field</code>  的话， <code>Cell</code>  比较独立，对 <code>Field</code>  的修改不会影响到 <code>Cell</code> ， <code>Cell</code>  也可以单独拿到其他地方用。<br />\n如果 <code>Cell</code>  和 <code>Field</code>  之间有重复的复杂的交互的话，可以把交互过程放到一个方法里；如果这种交互的主体是 <code>Cell</code>  的话，那么把交互方法放入 <code>Cell</code>  就有一定合理性，这类交互越多， <code>Cell</code>  知道 <code>Field</code>  的好处就越多。其中就是独立和便捷之间的权衡。</p>\n</blockquote>\n<ol start=\"6\">\n<li>如果另外用一个 <code>ArrayList&lt;Animal&gt;</code>  来表示所有的动物，每一步遍历这个列表而非整个 <code>Field</code> ，这样做是否更好？<br />\n提示：这样就需要每个 <code>Animal</code>  知道自己在 <code>Field</code>  里的位置。</li>\n</ol>\n<blockquote>\n<p><code>Animal</code>  知道位置的话对 <code>Field</code>  就有了依赖。<br />\n死亡时需要查找和删除动物，使用 <code>ArrayList</code>  效率不高，用 <code>HashMap</code>  好些。<br />\n在动物出生和移动时，需要同时设置 <code>Field</code>  和 <code>Animal</code>  中的数据。</p>\n</blockquote>\n<ol start=\"7\">\n<li>现在 <code>Cell</code>  接口其实是承担了两个责任的。在 <code>Field</code>  看过来，它只认识 <code>Cell</code> ，它认为 <code>Cell</code>  是存放在其中的数据。而对于 <code>View</code>  来说，它看到的是 <code>Cell</code>  所具有的 <code>draw</code>  方法，从这个角度来说 <code>Cell</code>  表示了表现。<br />\n有没有必要两种分开。比如有一个 <code>Cell</code>  抽象类表示可以放进 <code>Field</code>  的东西，另一个 <code>Drawable</code>  接口表示可以被 <code>View</code>  画出来的东西？</li>\n</ol>\n",
            "tags": [
                "计算机科学",
                "Java",
                "面向对象程序设计-Java语言-浙江大学-翁恺",
                "Java"
            ]
        },
        {
            "id": "https://shoka.lostyu.me/computer-science/note/v2yume-setup-log/",
            "url": "https://shoka.lostyu.me/computer-science/note/v2yume-setup-log/",
            "title": "V2Yume配置记录",
            "date_published": "2020-06-16T13:11:48.000Z",
            "content_html": "<div class=\"note info\">\n<p>以下内容基于：</p>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3YyYm9hcmQvdjJib2FyZA==\">V2board</span>：多用户管理，aaPanel + LNMP + Laravel + React</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0NvbGV0dGVDb250cmVyYXMvdjJyYXktcG9zZWlkb24=\">Poseidon</span> ：V2Ray 服务端，基于 docker 运行</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY2xvdWRmbGFyZS5jb20v\">CloudFlare</span>：实现 WebSocket-TLS 模式</li>\n</ul>\n</div>\n<h1 id=\"服务器准备\"><a class=\"anchor\" href=\"#服务器准备\">#</a> 服务器准备</h1>\n<p>SSH 连接 Linux 服务器，操作系统 <code>CentOS 7</code> <br />\n 最低配置要求为 1Core/512M RAM</p>\n<h2 id=\"安装内核加速\"><a class=\"anchor\" href=\"#安装内核加速\">#</a> 安装内核加速</h2>\n<p>推荐使用 <code>bbr plus</code> 。<br />\n先安装内核，选择 2，重启后，开启加速，选择 7。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">wget</span> -N --no-check-certificate <span class=\"token string\">\"https://raw.githubusercontent.com/chiakge/Linux-NetSpeed/master/tcp.sh\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">chmod</span> +x tcp.sh</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>./tcp.sh</pre></td></tr></table></figure><h2 id=\"同步服务器时间\"><a class=\"anchor\" href=\"#同步服务器时间\">#</a> 同步服务器时间</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>yum -y <span class=\"token function\">install</span> ntpdate</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>timedatectl set-timezone Asia/Shanghai <span class=\"token comment\">#设置为北京时间</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>ntpdate time.nist.gov</pre></td></tr></table></figure><blockquote>\n<p>ntp 常用服务器</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>IP</th>\n<th>Location</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>210.72.145.44</td>\n<td>210.72.145.44</td>\n<td>中国（国家授时中心）</td>\n</tr>\n<tr>\n<td><span class=\"exturl\" data-url=\"aHR0cDovL250cC5mdWRhbi5lZHUuY24=\">ntp.fudan.edu.cn</span></td>\n<td></td>\n<td>中国（复旦大学）</td>\n</tr>\n<tr>\n<td><span class=\"exturl\" data-url=\"aHR0cDovL250cC5hcGkuYno=\">ntp.api.bz</span></td>\n<td></td>\n<td>中国（上海 NTP 服务器）</td>\n</tr>\n<tr>\n<td>133.100.11.8</td>\n<td>133.100.11.8</td>\n<td>日本（福冈大学）</td>\n</tr>\n<tr>\n<td><span class=\"exturl\" data-url=\"aHR0cDovL2FzaWEucG9vbC5udHAub3Jn\">asia.pool.ntp.org</span></td>\n<td></td>\n<td>台湾（台警大授时中心）</td>\n</tr>\n<tr>\n<td><span class=\"exturl\" data-url=\"aHR0cDovL3RpbWUud2luZG93cy5jb20=\">time.windows.com</span></td>\n<td></td>\n<td>美国（微软公司授时主机）</td>\n</tr>\n<tr>\n<td><span class=\"exturl\" data-url=\"aHR0cDovL3RpbWUtYS5uaXN0Lmdvdg==\">time-a.nist.gov</span></td>\n<td>129.6.15.28</td>\n<td>NIST,Gaithersburg,Maryland</td>\n</tr>\n<tr>\n<td><span class=\"exturl\" data-url=\"aHR0cDovL3RpbWUtYi5uaXN0Lmdvdg==\">time-b.nist.gov</span></td>\n<td>129.6.15.29</td>\n<td>NIST,Gaithersburg,Maryland</td>\n</tr>\n<tr>\n<td><span class=\"exturl\" data-url=\"aHR0cDovL3RpbWUtYS50aW1lZnJlcS5ibGRyZG9jLmdvdg==\">time-a.timefreq.bldrdoc.gov</span></td>\n<td>132.163.4.101</td>\n<td>NIST,Boulder,Colorado</td>\n</tr>\n<tr>\n<td><span class=\"exturl\" data-url=\"aHR0cDovL3RpbWUtYi50aW1lZnJlcS5ibGRyZG9jLmdvdg==\">time-b.timefreq.bldrdoc.gov</span></td>\n<td>132.163.4.102</td>\n<td>NIST,Boulder,Colorado</td>\n</tr>\n<tr>\n<td><span class=\"exturl\" data-url=\"aHR0cDovL3RpbWUtYy50aW1lZnJlcS5ibGRyZG9jLmdvdg==\">time-c.timefreq.bldrdoc.gov</span></td>\n<td>132.163.4.103</td>\n<td>NIST,Boulder,Colorado</td>\n</tr>\n<tr>\n<td><span class=\"exturl\" data-url=\"aHR0cDovL3V0Y25pc3QuY29sb3JhZG8uZWR1\">utcnist.colorado.edu</span></td>\n<td>128.138.140.44</td>\n<td>UniversityofColorado,Boulder</td>\n</tr>\n<tr>\n<td><span class=\"exturl\" data-url=\"aHR0cDovL3RpbWUubmlzdC5nb3Y=\">time.nist.gov</span></td>\n<td>192.43.244.18</td>\n<td>NCAR,Boulder,Colorado</td>\n</tr>\n<tr>\n<td><span class=\"exturl\" data-url=\"aHR0cDovL3RpbWUtbncubmlzdC5nb3Y=\">time-nw.nist.gov</span></td>\n<td>131.107.1.10</td>\n<td>Microsoft,Redmond,Washington</td>\n</tr>\n<tr>\n<td><span class=\"exturl\" data-url=\"aHR0cDovL25pc3QxLnN5bW1ldHJpY29tLmNvbQ==\">nist1.symmetricom.com</span></td>\n<td>69.25.96.13</td>\n<td>Symmetricom,SanJose,California</td>\n</tr>\n<tr>\n<td><span class=\"exturl\" data-url=\"aHR0cDovL25pc3QxLWRjLmdsYXNzZXkuY29t\">nist1-dc.glassey.com</span></td>\n<td>216.200.93.8</td>\n<td>Abovenet,Virginia</td>\n</tr>\n<tr>\n<td><span class=\"exturl\" data-url=\"aHR0cDovL25pc3QxLW55LmdsYXNzZXkuY29t\">nist1-ny.glassey.com</span></td>\n<td>208.184.49.9</td>\n<td>Abovenet,NewYorkCity</td>\n</tr>\n<tr>\n<td><span class=\"exturl\" data-url=\"aHR0cDovL25pc3QxLXNqLmdsYXNzZXkuY29t\">nist1-sj.glassey.com</span></td>\n<td>207.126.98.204</td>\n<td>Abovenet,SanJose,California</td>\n</tr>\n<tr>\n<td><span class=\"exturl\" data-url=\"aHR0cDovL25pc3QxLmFvbC1jYS50cnVldGltZS5jb20=\">nist1.aol-ca.truetime.com</span></td>\n<td>207.200.81.113</td>\n<td>TrueTime,AOLfacility,Sunnyvale,California</td>\n</tr>\n<tr>\n<td><span class=\"exturl\" data-url=\"aHR0cDovL25pc3QxLmFvbC12YS50cnVldGltZS5jb20=\">nist1.aol-va.truetime.com</span></td>\n<td>64.236.96.53</td>\n<td>TrueTime,AOLfacility,Virginia</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"关闭防火墙\"><a class=\"anchor\" href=\"#关闭防火墙\">#</a> 关闭防火墙</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>systemctl start supervisord</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>systemctl disable firewalld</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>systemctl stop firewalld</pre></td></tr></table></figure><h1 id=\"域名准备\"><a class=\"anchor\" href=\"#域名准备\">#</a> 域名准备</h1>\n<p>借助 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY2xvdWRmbGFyZS5jb20v\">CloudFlare</span> 实现强制 SSL、CDN 加速、隐藏 IP 地址 blabla</p>\n<p>需要注意的配置：</p>\n<ul>\n<li>DNS 解析，代理状态为 已代理。</li>\n<li>您的 SSL/TLS 加密模式为 完全 FULL！</li>\n</ul>\n<h1 id=\"v2board安装\"><a class=\"anchor\" href=\"#v2board安装\">#</a> V2Board 安装</h1>\n<h2 id=\"基于aapanel部署\"><a class=\"anchor\" href=\"#基于aapanel部署\">#</a> 基于<span class=\"exturl\" data-url=\"aHR0cHM6Ly9mb3J1bS5hYXBhbmVsLmNvbS9kLzktYWFwYW5lbC1saW51eC1wYW5lbC02NzAtaW5zdGFsbGF0aW9uLXR1dG9yaWFs\"> aaPanel</span> 部署</h2>\n<ol>\n<li>\n<p>安装 aaPanel</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>yum <span class=\"token function\">install</span> -y <span class=\"token function\">wget</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">wget</span> -O install.sh http://www.aapanel.com/script/install_6.0_en.sh <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">bash</span> install.sh</pre></td></tr></table></figure><p>安装完成后登陆，进行环境的安装。</p>\n<p>选择使用 LNMP 的环境安装方式勾选如下信息：</p>\n<p>☑️ Nginx 1.17<br />\n☑️ MySQL 5.6<br />\n☑️ PHP 7.3</p>\n<p>选择 Fast 快速编译后进行安装。</p>\n</li>\n<li>\n<p>安装 Redis<br />\naaPanel 面板 &gt; App Store &gt; 找到 PHP 7.3 点击 Setting &gt; Install extentions &gt; redis 进行安装。</p>\n</li>\n<li>\n<p>解除被禁止的函数<br />\n aaPanel 面板 &gt; App Store &gt; 找到 PHP 7.3 点击 Setting &gt; Disabled functions 将  <code>putenv</code>   <code>proc_open</code>   <code>pcntl_alarm</code>   <code>pcntl_signal</code>  从列表中删除。</p>\n</li>\n<li>\n<p>添加站点<br />\n aaPanel 面板 &gt; Website &gt; Add site。</p>\n<blockquote>\n<p>在 Domain 填入你指向服务器的域名<br />\n在 Database 选择 MySQL<br />\n 在 PHP Verison 选择 PHP-73</p>\n</blockquote>\n</li>\n<li>\n<p>安装 V2Board<br />\n 通过 SSH 登录到服务器后访问站点路径如： <code>/www/wwwroot/domain.com</code> 。</p>\n<p>以下命令都需要在站点目录进行执行。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 删除目录下文件</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>chattr -i .user.ini</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">rm</span> -rf .htaccess <span class=\"token number\">404</span>.html index.html .user.ini</pre></td></tr></table></figure><p>执行命令从 Github 克隆到当前目录。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">git</span> clone https://github.com/v2board/v2board.git ./</pre></td></tr></table></figure><p>执行命令下载 composer.phar 到当前目录。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">wget</span> https://getcomposer.org/download/1.9.0/composer.phar</pre></td></tr></table></figure><p>执行命令进行包安装。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>php composer.phar <span class=\"token function\">install</span></pre></td></tr></table></figure><p>安装过程中报错或者无法继续安装的请分配 swap，如何分配 swap 请查阅 google。</p>\n<p>执行命令安装 V2board</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>php artisan v2board:install</pre></td></tr></table></figure><p>根据提示完成安装。</p>\n</li>\n<li>\n<p>配置站点目录及伪静态<br />\n添加完成后编辑添加的站点 &gt; Site directory &gt; Running directory 选择 /public 保存。</p>\n<p>添加完成后编辑添加的站点 &gt; URL rewrite 填入伪静态信息。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>location /downloads <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>location / <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    try_files <span class=\"token variable\">$uri</span> <span class=\"token variable\">$uri</span>/ /index.php<span class=\"token variable\">$is_args</span><span class=\"token variable\">$query_string</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>location ~ .*<span class=\"token punctuation\">\\</span>.<span class=\"token punctuation\">(</span>js<span class=\"token operator\">|</span>css<span class=\"token punctuation\">)</span>?$</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    expires      1h<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    error_log off<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    access_log /dev/null<span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></li>\n<li>\n<p>配置定时任务<br />\n aaPanel 面板 &gt; Cron。</p>\n<blockquote>\n<p>在 Type of Task 选择 Shell Script<br />\n 在 Name of Task 填写 v2board<br />\n 在 Period 选择 N Minutes 1 Minute<br />\n 在 Script content 填写 php /www/wwwroot/domain.com/artisan schedule:run</p>\n</blockquote>\n<p>根据上述信息添加每 1 分钟执行一次的定时任务。<br />\n记得将路径修改成自己的。</p>\n</li>\n<li>\n<p>启动队列服务<br />\n V2board 的邮件系统强依赖队列服务，你想要使用邮件验证及群发邮件必须启动队列服务。<br />\n下面以 aaPanel 中 nodejs 的 PM2 服务来守护队列服务作为演示。</p>\n<p>aaPanel 面板 &gt; App Store &gt; Deployment</p>\n<p>找到 PM2 Manager 4.2.2 进行安装，安装完成后按照如下填写</p>\n<blockquote>\n<p>在 Project root directory 选择站点目录<br />\n在 Startup file name 填写 pm2.yaml<br />\n 在 project name 填写 v2board</p>\n</blockquote>\n<p>填写后点击 Add 添加即可运行。当然你也可以使用 supervisor 进行守护。</p>\n</li>\n</ol>\n<h2 id=\"告别500错误\"><a class=\"anchor\" href=\"#告别500错误\">#</a> 告别 500 错误</h2>\n<ol>\n<li>\n<p>目录权限问题，检查站点根目录权限，递归 755，保证目录有可写文件的权限</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">chown</span> -R www:www *</pre></td></tr></table></figure></li>\n<li>\n<p>修改  <code>.env</code>  文件， <code>APP_DEBUG=true</code> ，开启 debug 模式，查看具体报错内容<br />\n每次修改 .env 文件后需要执行以下命令清空缓存</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>php artisan config:clear</pre></td></tr></table></figure></li>\n<li>\n<p>aaPanel 安装 Redis 扩展失败<br />\n如报错</p>\n<blockquote>\n<p>configure: error: C preprocessor “/lib/cpp” fails sanity check</p>\n</blockquote>\n<p>缺少必要的 C++ 库，如下命令重装解决。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>yum reinstall glibc-headers gcc-c++ -y</pre></td></tr></table></figure></li>\n</ol>\n<h2 id=\"节点配置\"><a class=\"anchor\" href=\"#节点配置\">#</a> 节点配置</h2>\n<ol>\n<li>\n<p>在 系统配置 &gt; 服务端 界面，设置一个  <code>通讯密钥</code></p>\n</li>\n<li>\n<p>先添加权限组，再添加节点，记录  <code>节点ID</code> ，协议配置中的  <code>路径</code></p>\n<blockquote>\n<p>节点地址： 你的代理服务器绑定的域名<br />\n TLS： 支持<br />\n连接端口： 443<br />\n 服务端口： 443<br />\n 传输协议： WebSocket<br />\n 点击编辑传输协议配置</p>\n</blockquote>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token property\">\"path\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/路径\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></li>\n</ol>\n<h1 id=\"poseidon对接\"><a class=\"anchor\" href=\"#poseidon对接\">#</a> Poseidon 对接</h1>\n<h2 id=\"安装并启动-dockerdocker-compose\"><a class=\"anchor\" href=\"#安装并启动-dockerdocker-compose\">#</a> 安装并启动 Docker/docker-compose</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">curl</span> -fsSL https://get.docker.com <span class=\"token operator\">|</span> <span class=\"token function\">bash</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">curl</span> -L <span class=\"token string\">\"https://github.com/docker/compose/releases/download/1.25.3/docker-compose-<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">uname</span> -s<span class=\"token variable\">)</span></span>-<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">uname</span> -m<span class=\"token variable\">)</span></span>\"</span> -o /usr/local/bin/docker-compose</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">chmod</span> a+x /usr/local/bin/docker-compose</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">rm</span> -f <span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">which</span> <span class=\"token function\">dc</span><span class=\"token variable\">`</span></span> </pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">ln</span> -s /usr/local/bin/docker-compose /usr/bin/dc</pre></td></tr><tr><td data-num=\"6\"></td><td><pre> </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>systemctl start docker</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token function\">service</span> docker start</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>systemctl <span class=\"token builtin class-name\">enable</span> docker.service</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>systemctl status docker.service</pre></td></tr></table></figure><h2 id=\"安装v2ray-poseidon\"><a class=\"anchor\" href=\"#安装v2ray-poseidon\">#</a> 安装 v2ray-poseidon</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">curl</span> -o go.sh -L -s https://raw.githubusercontent.com/ColetteContreras/v2ray-poseidon/master/install-release.sh</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">bash</span> go.sh <span class=\"token comment\"># Install latest version of v2ray-poseidon</span></pre></td></tr></table></figure><h2 id=\"修改配置文件\"><a class=\"anchor\" href=\"#修改配置文件\">#</a> 修改配置文件</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">cd</span> /root/v2ray-poseidon/docker/v2board/ws</pre></td></tr></table></figure><p>修改 config.json</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token property\">\"nodeId\"</span><span class=\"token operator\">:</span> <span class=\"token comment\">// 面板里添加完节点后生成的自增 ID</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token property\">\"webapi\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span><span class=\"token comment\">//v2board 的域名信息</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token property\">\"token\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//v2board 和 v2ray-poseidon 的通信密钥</span></pre></td></tr></table></figure><p>修改 docker-compose.yml</p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token punctuation\">-</span> <span class=\"token string\">\"80:10086\"</span> <span class=\"token comment\"># 把 80 端口 修改掉，避免端口占用报错</span></pre></td></tr></table></figure><h2 id=\"添加站点\"><a class=\"anchor\" href=\"#添加站点\">#</a> 添加站点</h2>\n<p>aaPanel 添加一个站点，域名就是代理服务器想绑定的域名。</p>\n<p>站点配置 Configuration &gt; SSL &gt; Let's Encrypt &gt; 选择 Cloudflare &gt; 配置一下邮箱和 API</p>\n<p>站点配置 Configuration &gt; Config</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>location /路径 <span class=\"token comment\"># 节点 websocket 配置中的路径</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    proxy_pass http://127.0.0.1:端口号<span class=\"token punctuation\">;</span> <span class=\"token comment\"># docker-compose.yml 里改掉的 端口号</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    proxy_redirect off<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    proxy_http_version <span class=\"token number\">1.1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    proxy_set_header Upgrade <span class=\"token variable\">$http_upgrade</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    proxy_set_header Connection <span class=\"token string\">\"upgrade\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    proxy_set_header Host <span class=\"token variable\">$http_host</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    proxy_read_timeout 300s<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>Security &gt; Firewall &gt; 放行上述端口号</p>\n<h2 id=\"启动docker\"><a class=\"anchor\" href=\"#启动docker\">#</a> 启动 Docker</h2>\n<p>保持后台运行。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">dc</span> up -d</pre></td></tr></table></figure><p>查看一下日志，看看有没有报错。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">dc</span> logs</pre></td></tr></table></figure><h1 id=\"配置相关\"><a class=\"anchor\" href=\"#配置相关\">#</a> 配置相关</h1>\n<h2 id=\"支付配置\"><a class=\"anchor\" href=\"#支付配置\">#</a> 支付配置</h2>\n<p>目前支持四种方式，但是都不太理想</p>\n<ul>\n<li>支付宝，容易被请喝茶</li>\n<li>Stripe，很难申请</li>\n<li>BitpayX，对用户不友好</li>\n<li>PayTaro，好不容易才找到了注册接口，收费 50 软妹币，暂时选用这个</li>\n</ul>\n<p>事实上，只是打算自用，并不打算卖钱，毕竟只有一个节点，呵呵_(:зゝ∠)_</p>\n",
            "tags": [
                "计算机科学",
                "二进制杂谈",
                "教程",
                "机场"
            ]
        },
        {
            "id": "https://shoka.lostyu.me/computer-science/java/course-2/week-5/",
            "url": "https://shoka.lostyu.me/computer-science/java/course-2/week-5/",
            "title": "第5周 设计原则",
            "date_published": "2020-06-16T13:01:16.000Z",
            "content_html": "<div class=\"note info\">\n<p>以下为个人学习笔记和习题整理<br />\n课程：面向对象程序设计 ——Java 语言<br />\n - 浙江大学 - 翁恺 @ 中国大学 MOOC<br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuaWNvdXJzZTE2My5vcmcvY291cnNlL1pKVS0xMDAxNTQyMDAx\">https://www.icourse163.org/course/ZJU-1001542001</span></p>\n</div>\n<h1 id=\"课堂笔记\"><a class=\"anchor\" href=\"#课堂笔记\">#</a> 课堂笔记</h1>\n<h2 id=\"消除代码复制\"><a class=\"anchor\" href=\"#消除代码复制\">#</a> 消除代码复制</h2>\n<p>两个基本手段，就是函数和父类。</p>\n<h2 id=\"封装\"><a class=\"anchor\" href=\"#封装\">#</a> 封装</h2>\n<p>对于类的设计来说，有两个核心术语：耦合和聚合。</p>\n<p>耦合这个词指的是类和类之间的联系。<br />\n程序设计的目标是一系列通过定义明确的接口通信来协同工作的类。<br />\n耦合度反映了这些类联系的紧密度。<br />\n我们努力要获得低的耦合度，或者叫作松耦合 <code>loose coupling</code> 。</p>\n<p>耦合度决定修改应用程序的容易程度。<br />\n在一个紧耦合的结构中，对一个类的修改也会导致 对其他一些类的修改。这是要努力避免的，否则，一点小小的改变就可能使整个应用程序发生 改变。另外，要想找到所有需要修改的地方，并一一加以修改，却是一件既困难又费时的事情。<br />\n在一个松耦合的系统中，常常可以修改一个类，但同时不会修改其他类，而且 整个程序还可以正常运作。</p>\n<p><strong>用封装来降低耦合</strong>。</p>\n<h2 id=\"可扩展性\"><a class=\"anchor\" href=\"#可扩展性\">#</a> 可扩展性</h2>\n<p>可扩展性的意思就是代码的某些部分不需要经过修改就能适应将来可能的变化。</p>\n<p>聚合与程序中一个单独的单元所承担的任务的数量和种类相对应有关，它是针对类或方法这样大小的程序单元而言的理想情况下，一个代码单元应该负责一个聚合的任务（也就是说，一个任务可以被看作是 一个逻辑单元）。<br />\n一个方法应该实现一个逻辑操作，而一个类应该代表一定类型的实体。</p>\n<p>聚合理论背后的要点是重用：如果一个方法或类是只负责一件定义明确的事情，那么就很有可能在另外不同的上下文环境中使用。</p>\n<p>遵循这个理论的一个额外的好处是，当程序某部分的代码需要改变时，在某个代码单元中很可能会找到所有需要改变的相关代码段。</p>\n<p><strong>用接口来实现聚合</strong>。</p>\n<p><strong>用容器来实现灵活性</strong>。</p>\n<p><strong>以框架 + 数据来提高可扩展性</strong>。<br />\n从程序中识别出框架和数据，以代码实现框架，将部分功能以数据的方式加载，这样能在很大程度上实现可扩展性。</p>\n<h1 id=\"课内项目\"><a class=\"anchor\" href=\"#课内项目\">#</a> 课内项目</h1>\n<h2 id=\"城堡游戏\"><a class=\"anchor\" href=\"#城堡游戏\">#</a> 城堡游戏</h2>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>Game.java</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">castle</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HashMap</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Game</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Room</span> currentRoom<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Handler</span><span class=\"token punctuation\">></span></span> handlers <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Handler</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Game</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    \thandlers<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"go\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HandlerGo</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    \thandlers<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"bye\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HandlerBye</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    \thandlers<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"help\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HandlerHelp</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token function\">createRooms</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">createRooms</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token class-name\">Room</span> outside<span class=\"token punctuation\">,</span> lobby<span class=\"token punctuation\">,</span> pub<span class=\"token punctuation\">,</span> study<span class=\"token punctuation\">,</span> bedroom<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>      </pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token comment\">//\t制造房间</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        outside <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Room</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"城堡外\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        lobby <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Room</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"大堂\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        pub <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Room</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"小酒吧\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        study <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Room</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"书房\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        bedroom <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Room</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"卧室\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token comment\">//\t初始化房间的出口</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token comment\">//        outside.setExit(null, lobby, study, pub);</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token comment\">//        lobby.setExits(null, null, null, outside);</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token comment\">//        pub.setExits(null, outside, null, null);</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token comment\">//        study.setExits(outside, bedroom, null, null);</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token comment\">//        bedroom.setExits(null, null, null, study);</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        outside<span class=\"token punctuation\">.</span><span class=\"token function\">setExit</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"east\"</span><span class=\"token punctuation\">,</span> lobby<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        outside<span class=\"token punctuation\">.</span><span class=\"token function\">setExit</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"south\"</span><span class=\"token punctuation\">,</span> study<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        outside<span class=\"token punctuation\">.</span><span class=\"token function\">setExit</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"west\"</span><span class=\"token punctuation\">,</span> pub<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        lobby<span class=\"token punctuation\">.</span><span class=\"token function\">setExit</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"west\"</span><span class=\"token punctuation\">,</span> outside<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        pub<span class=\"token punctuation\">.</span><span class=\"token function\">setExit</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"east\"</span><span class=\"token punctuation\">,</span> outside<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        study<span class=\"token punctuation\">.</span><span class=\"token function\">setExit</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"north\"</span><span class=\"token punctuation\">,</span> outside<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        study<span class=\"token punctuation\">.</span><span class=\"token function\">setExit</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"east\"</span><span class=\"token punctuation\">,</span> bedroom<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        bedroom<span class=\"token punctuation\">.</span><span class=\"token function\">setExit</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"west\"</span><span class=\"token punctuation\">,</span> study<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        lobby<span class=\"token punctuation\">.</span><span class=\"token function\">setExit</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"up\"</span><span class=\"token punctuation\">,</span> pub<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        pub<span class=\"token punctuation\">.</span><span class=\"token function\">setExit</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"down\"</span><span class=\"token punctuation\">,</span> lobby<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        currentRoom <span class=\"token operator\">=</span> outside<span class=\"token punctuation\">;</span>  <span class=\"token comment\">//\t从城堡门外开始</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">printWelcome</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"欢迎来到城堡！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"这是一个超级无聊的游戏。\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"如果需要帮助，请输入 'help' 。\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre><span class=\"token comment\">//        System.out.println (\"现在你在\" + currentRoom);</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre><span class=\"token comment\">//        System.out.print (\"出口有：\");</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre><span class=\"token comment\">//        if(currentRoom.northExit != null)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre><span class=\"token comment\">//            System.out.print(\"north \");</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre><span class=\"token comment\">//        if(currentRoom.eastExit != null)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre><span class=\"token comment\">//            System.out.print(\"east \");</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre><span class=\"token comment\">//        if(currentRoom.southExit != null)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre><span class=\"token comment\">//            System.out.print(\"south \");</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre><span class=\"token comment\">//        if(currentRoom.westExit != null)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre><span class=\"token comment\">//            System.out.print(\"west \");</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre><span class=\"token comment\">//        System.out.println();</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>        <span class=\"token function\">showPrompt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    <span class=\"token comment\">// 以下为用户命令</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre></pre></td></tr><tr><td data-num=\"72\"></td><td><pre><span class=\"token comment\">//    private void printHelp() </span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre><span class=\"token comment\">//    &#123;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre><span class=\"token comment\">//        System.out.print (\"迷路了吗？你可以做的命令有：go bye help\");</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre><span class=\"token comment\">//        System.out.println (\"如：\\tgo east\");</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre><span class=\"token comment\">//    &#125;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">goRoom</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> direction<span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"79\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre><span class=\"token comment\">//        Room nextRoom = null;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre><span class=\"token comment\">//        if(direction.equals(\"north\")) &#123;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre><span class=\"token comment\">//            nextRoom = currentRoom.northExit;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre><span class=\"token comment\">//        &#125;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre><span class=\"token comment\">//        if(direction.equals(\"east\")) &#123;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre><span class=\"token comment\">//            nextRoom = currentRoom.eastExit;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre><span class=\"token comment\">//        &#125;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre><span class=\"token comment\">//        if(direction.equals(\"south\")) &#123;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre><span class=\"token comment\">//            nextRoom = currentRoom.southExit;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre><span class=\"token comment\">//        &#125;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre><span class=\"token comment\">//        if(direction.equals(\"west\")) &#123;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre><span class=\"token comment\">//            nextRoom = currentRoom.westExit;</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre><span class=\"token comment\">//        &#125;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>    \t<span class=\"token class-name\">Room</span> nextRoom <span class=\"token operator\">=</span> currentRoom<span class=\"token punctuation\">.</span><span class=\"token function\">getExit</span><span class=\"token punctuation\">(</span>direction<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>    \t</pre></td></tr><tr><td data-num=\"95\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nextRoom <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"那里没有门！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>        <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>            currentRoom <span class=\"token operator\">=</span> nextRoom<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre><span class=\"token comment\">//            System.out.println (\"你在\" + currentRoom);</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre><span class=\"token comment\">//            System.out.print (\"出口有:\");</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre><span class=\"token comment\">//            if(currentRoom.northExit != null)</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre><span class=\"token comment\">//                System.out.print(\"north \");</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre><span class=\"token comment\">//            if(currentRoom.eastExit != null)</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre><span class=\"token comment\">//                System.out.print(\"east \");</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre><span class=\"token comment\">//            if(currentRoom.southExit != null)</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre><span class=\"token comment\">//                System.out.print(\"south \");</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre><span class=\"token comment\">//            if(currentRoom.westExit != null)</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre><span class=\"token comment\">//                System.out.print(\"west \");</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre><span class=\"token comment\">//            System.out.println();</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>            <span class=\"token function\">showPrompt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"115\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">showPrompt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"现在你在\"</span> <span class=\"token operator\">+</span> currentRoom<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"出口有：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre><span class=\"token comment\">//        if(currentRoom.northExit != null)</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre><span class=\"token comment\">//            System.out.print(\"north \");</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre><span class=\"token comment\">//        if(currentRoom.eastExit != null)</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre><span class=\"token comment\">//            System.out.print(\"east \");</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre><span class=\"token comment\">//        if(currentRoom.southExit != null)</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre><span class=\"token comment\">//            System.out.print(\"south \");</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre><span class=\"token comment\">//        if(currentRoom.westExit != null)</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre><span class=\"token comment\">//            System.out.print(\"west \");</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>currentRoom<span class=\"token punctuation\">.</span><span class=\"token function\">getExitDesc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"130\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">play</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre>    \t<span class=\"token class-name\">Scanner</span> in <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>    \t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>    \t\t<span class=\"token class-name\">String</span> line <span class=\"token operator\">=</span> in<span class=\"token punctuation\">.</span><span class=\"token function\">nextLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre>    \t\t<span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> words <span class=\"token operator\">=</span> line<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>    \t\t<span class=\"token class-name\">Handler</span> handler <span class=\"token operator\">=</span> handlers<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>words<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre>    \t\t</pre></td></tr><tr><td data-num=\"137\"></td><td><pre>    \t\t<span class=\"token class-name\">String</span> value <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre>    \t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>words<span class=\"token punctuation\">.</span>length <span class=\"token operator\">></span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>    \t\t\tvalue <span class=\"token operator\">=</span> words<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre>    \t\t</pre></td></tr><tr><td data-num=\"141\"></td><td><pre>    \t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>handler <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre>    \t\t\thandler<span class=\"token punctuation\">.</span><span class=\"token function\">doCmd</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"143\"></td><td><pre>    \t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>handler<span class=\"token punctuation\">.</span><span class=\"token function\">isBye</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre>    \t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"145\"></td><td><pre>    \t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"146\"></td><td><pre>    \t\t</pre></td></tr><tr><td data-num=\"147\"></td><td><pre>    \t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"148\"></td><td><pre>    \tin<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"149\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"150\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"151\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"152\"></td><td><pre><span class=\"token comment\">//\t\tScanner in = new Scanner(System.in);</span></pre></td></tr><tr><td data-num=\"153\"></td><td><pre>\t\t<span class=\"token class-name\">Game</span> game <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Game</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"154\"></td><td><pre>\t\tgame<span class=\"token punctuation\">.</span><span class=\"token function\">printWelcome</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"155\"></td><td><pre>\t\tgame<span class=\"token punctuation\">.</span><span class=\"token function\">play</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"156\"></td><td><pre><span class=\"token comment\">//        while ( true ) &#123;</span></pre></td></tr><tr><td data-num=\"157\"></td><td><pre><span class=\"token comment\">//        \t\tString line = in.nextLine();</span></pre></td></tr><tr><td data-num=\"158\"></td><td><pre><span class=\"token comment\">//        \t\tString[] words = line.split(\" \");</span></pre></td></tr><tr><td data-num=\"159\"></td><td><pre><span class=\"token comment\">//        \t\tif ( words[0].equals(\"help\") ) &#123;</span></pre></td></tr><tr><td data-num=\"160\"></td><td><pre><span class=\"token comment\">//        \t\t\tgame.printHelp();</span></pre></td></tr><tr><td data-num=\"161\"></td><td><pre><span class=\"token comment\">//        \t\t&#125; else if (words[0].equals(\"go\") ) &#123;</span></pre></td></tr><tr><td data-num=\"162\"></td><td><pre><span class=\"token comment\">//        \t\t\tgame.goRoom(words[1]);</span></pre></td></tr><tr><td data-num=\"163\"></td><td><pre><span class=\"token comment\">//        \t\t&#125; else if ( words[0].equals(\"bye\") ) &#123;</span></pre></td></tr><tr><td data-num=\"164\"></td><td><pre><span class=\"token comment\">//        \t\t\tbreak;</span></pre></td></tr><tr><td data-num=\"165\"></td><td><pre><span class=\"token comment\">//        \t\t&#125;</span></pre></td></tr><tr><td data-num=\"166\"></td><td><pre><span class=\"token comment\">//        &#125;</span></pre></td></tr><tr><td data-num=\"167\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"168\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"感谢您的光临。再见！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"169\"></td><td><pre><span class=\"token comment\">//        in.close();</span></pre></td></tr><tr><td data-num=\"170\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"171\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>Room.java</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">castle</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HashMap</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Room</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">//    public String description;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">//    public Room northExit;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">//    public Room southExit;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">//    public Room eastExit;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">//    public Room westExit;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> description<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token keyword\">private</span> <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Room</span><span class=\"token punctuation\">></span></span> exits <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Room</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Room</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> description<span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>description <span class=\"token operator\">=</span> description<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setExit</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> dir<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Room</span> room<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    \texits<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span>dir<span class=\"token punctuation\">,</span> room<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\">//    public void setExits(Room north, Room east, Room south, Room west) </span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\">//    &#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\">//        if(north != null)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token comment\">//            northExit = north;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token comment\">//        if(east != null)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\">//            eastExit = east;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token comment\">//        if(south != null)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token comment\">//            southExit = south;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token comment\">//        if(west != null)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token comment\">//            westExit = west;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token comment\">//    &#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token keyword\">return</span> description<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getExitDesc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    \t<span class=\"token class-name\">StringBuffer</span> sb <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">StringBuffer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token comment\">//    \t不用 String 然后字符串相加，因为那样系统开销会很大。</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    \t</pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    \t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> dir <span class=\"token operator\">:</span> exits<span class=\"token punctuation\">.</span><span class=\"token function\">keySet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    \t\tsb<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>dir<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    \t\tsb<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">' '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    \t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    \t</pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token comment\">//    \tif (northExit != null)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre><span class=\"token comment\">//    \t\tsb.append(\"north \");</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token comment\">//    \tif (eastExit != null)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre><span class=\"token comment\">//    \t\tsb.append(\"east \");</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre><span class=\"token comment\">//    \tif(westExit != null)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre><span class=\"token comment\">//    \t\tsb.append(\"west \");</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre><span class=\"token comment\">//    \tif(southExit != null)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre><span class=\"token comment\">//    \t\tsb.append(\"south \");</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    \t<span class=\"token keyword\">return</span> sb<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Room</span> <span class=\"token function\">getExit</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> direction<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre><span class=\"token comment\">//    \tRoom ret = null;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre><span class=\"token comment\">//    \tif(direction.equals(\"north\")) &#123;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre><span class=\"token comment\">//            ret = northExit;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre><span class=\"token comment\">//        &#125;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre><span class=\"token comment\">//        if(direction.equals(\"east\")) &#123;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre><span class=\"token comment\">//        \tret = eastExit;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre><span class=\"token comment\">//        &#125;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre><span class=\"token comment\">//        if(direction.equals(\"south\")) &#123;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre><span class=\"token comment\">//        \tret = southExit;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre><span class=\"token comment\">//        &#125;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre><span class=\"token comment\">//        if(direction.equals(\"west\")) &#123;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre><span class=\"token comment\">//        \tret = westExit;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre><span class=\"token comment\">//        &#125;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"75\"></td><td><pre>        <span class=\"token keyword\">return</span> exits<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>direction<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>Handler.java</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">castle</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Handler</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token keyword\">protected</span> <span class=\"token class-name\">Game</span> game<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">Handler</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Game</span> game<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>game <span class=\"token operator\">=</span> game<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">doCmd</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> word<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">isBye</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>HandlerGo.java</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">castle</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HandlerGo</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Handler</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">HandlerGo</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Game</span> game<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\t<span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>game<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">doCmd</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> word<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\tgame<span class=\"token punctuation\">.</span><span class=\"token function\">goRoom</span><span class=\"token punctuation\">(</span>word<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>HandlerHelp.java</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">castle</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HandlerHelp</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Handler</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">HandlerHelp</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Game</span> game<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\t<span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>game<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">doCmd</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> word<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"迷路了吗？你可以做的命令有：go bye help\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"如：\\tgo east\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span>\t</pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>HandlerBye.java</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">castle</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HandlerBye</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Handler</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">HandlerBye</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Game</span> game<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\t<span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>game<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">isBye</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span>\t</pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "计算机科学",
                "Java",
                "面向对象程序设计-Java语言-浙江大学-翁恺",
                "Java"
            ]
        },
        {
            "id": "https://shoka.lostyu.me/computer-science/java/course-2/week-4/",
            "url": "https://shoka.lostyu.me/computer-science/java/course-2/week-4/",
            "title": "第4周 继承与多态",
            "date_published": "2020-06-15T13:01:16.000Z",
            "content_html": "<div class=\"note info\">\n<p>以下为个人学习笔记和习题整理<br />\n课程：面向对象程序设计 ——Java 语言<br />\n - 浙江大学 - 翁恺 @ 中国大学 MOOC<br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuaWNvdXJzZTE2My5vcmcvY291cnNlL1pKVS0xMDAxNTQyMDAx\">https://www.icourse163.org/course/ZJU-1001542001</span></p>\n</div>\n<h1 id=\"课堂笔记\"><a class=\"anchor\" href=\"#课堂笔记\">#</a> 课堂笔记</h1>\n<p>面向对象程序设计语言有三大特性：封装、继承和多态性。</p>\n<h2 id=\"继承派生extends\"><a class=\"anchor\" href=\"#继承派生extends\">#</a> 继承 / 派生 <code>extends</code></h2>\n<p>用来做基础派生其它类的那个类称为父类、超类或者基类，派生出来的新类称为子类。<br />\nJava 用关键字 <code>extends</code>  表示这种继承 / 派生关系。</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">ThisClass</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">SuperClass</span> <span class=\"token punctuation\">&#123;</span> </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\">//…</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"子类父类关系\"><a class=\"anchor\" href=\"#子类父类关系\">#</a> 子类父类关系</h2>\n<p>继承表达了一种 <code>is-a</code>  关系，就是说，子类的对象可以被看作是父类的对象。<br />\nJava 的继承只允许<strong>单继承</strong>，即一个类只能有一个父类。</p>\n<p>哪些东西被继承了，子类从父类那里得到了什么？<br />\n答案是所有的东西，所有的父类的成员，包括变量和方法，都成为了子类的成员，除了构造方法。<br />\n构造方法是父类所<strong>独有</strong>的，因为它们的名字就是类的名字，所以父类的构造方法在子类中不存在。除此之外，子类继承得到了父类所有的成员。</p>\n<p>但是得到不等于可以随便使用。<br />\n每个成员有不同的访问属性，子类继承得到了父类所有的成员，但是不同的访问属性使得子类在使用这些成员时有所不同：<br />\n有些父类的成员直接成为子类的对外的界面，有些则被深深地隐藏起来，即使子类自己也不能直接访问。</p>\n<p>下表列出了不同访问属性的父类成员在子类中的访问属性：</p>\n<table>\n<thead>\n<tr>\n<th>父类成员访问属性</th>\n<th>在父类中的含义</th>\n<th>在子类中的含义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>public</code></td>\n<td>对所有人开放</td>\n<td>对所有人开放</td>\n</tr>\n<tr>\n<td><code>protected</code></td>\n<td>只有包内其它类、自己和子类可以访问</td>\n<td>只有包内其它类、自己和子类可以访问</td>\n</tr>\n<tr>\n<td>缺省</td>\n<td>只有包内其它类可以访问</td>\n<td>如果子类与父类在同一个包内：只有包内其它类可以访问。否则：相当于 <code>private</code> ，不能访问</td>\n</tr>\n<tr>\n<td><code>private</code></td>\n<td>只有自己可以访问</td>\n<td>不能访问</td>\n</tr>\n</tbody>\n</table>\n<p><code>public</code>  的成员直接成为子类的 <code>public</code>  的成员， <code>protected</code>  的成员也直接成为子类的 <code>protected</code>  的成员。<br />\nJava 的 <code>protected</code>  的意思是包内和子类可访问，所以它比缺省的访问属性要宽一些。</p>\n<p>对于父类的缺省的未定义访问属性的成员来说，他们是在父类所在的包内可见。<br />\n如果子类不属于父类的包，那么在子类里面，这些缺省属性的成员和 <code>private</code>  的成员是一样的：不可见。</p>\n<p>父类的 <code>private</code>  的成员在子类里仍然是存在的，只是子类中不能直接访问。</p>\n<p>我们<strong>不可以</strong>在子类中重新定义继承得到的成员的<strong>访问属性</strong>。<br />\n如果我们试图重新定义一个在父类中已经存在的成员变量，那么我们是在定义一个与父类的成员变量<strong>完全无关</strong>的变量，在子类中我们可以访问这个定义在子类中的变量，在父类的方法中访问父类的那个。<br />\n尽管它们同名但是互不影响。</p>\n<p>在构造一个子类的对象时，父类的构造方法也是会被调用的，而且父类的构造方法在子类的构造方法之前被调用。<br />\n在程序运行过程中，子类对象的一部分空间存放的是父类对象。<br />\n因为子类从父类得到继承，在子类对象初始化过程中可能会使用到父类的成员。所以父类的空间正是要先被初始化的，然后子类的空间才得到初始化。在这个过程中，如果父类的构造方法需要参数，如何传递参数就很重要了。</p>\n<h2 id=\"多态变量\"><a class=\"anchor\" href=\"#多态变量\">#</a> 多态变量</h2>\n<p>子类型类似于类的层次，类型也构成了类型层次。<br />\n子类所定义的类型是其超类的类型的子类型。</p>\n<p>当把一个对象赋值给一个变量时，对象的类型必须与变量的类型相匹配，如:</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">Car</span> myCar <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Car</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>是一个有效的赋值，因为 <code>Car</code>  类型的对象被赋值给声明为保存 <code>Car</code>  类型对象的变量。但是由于引入了继承，这里的类型规则就得叙述得更完整些:<br />\n 一个变量可以保存其所声明的类型或该类型的任何子类型。</p>\n<p>对象变量可以保存其声明的类型的对象，或该类型的任何子类型的对象。</p>\n<p>Java 中保存对象类型的变量是多态变量。<br />\n“多态” 这个术语（字面意思是许多形态）是指，一个变量可以保存不同类型（即其声明的类型或任何子类型）的对象。</p>\n<ul>\n<li>类定义了类型</li>\n<li>子类定义了子类型</li>\n<li>子类的对象可以被当作父类的对象来使用\n<ul>\n<li>赋值给父类的变量</li>\n<li>传递给需要父类对象的函数</li>\n<li>放进存放父类对象的容器里</li>\n</ul>\n</li>\n</ul>\n<p>Java 的对象变量是多态的，它们能保存不止一种类型的对象。 它们可以保存的是声明类型的对象，或声明类型的子类的对象。 当把子类的对象赋给父类的变量的时候，就发生了向上造型。</p>\n<h2 id=\"造型cast\"><a class=\"anchor\" href=\"#造型cast\">#</a> 造型 <code>cast</code></h2>\n<p>子类的对象可以赋值给父类的变量。</p>\n<blockquote>\n<p>注意 java 中不存在对象对对象的赋值！</p>\n</blockquote>\n<p>父类的对象不能赋值给子类的变量！</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">Vechicle</span> <span class=\"token class-name\">V</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\">Car</span> <span class=\"token class-name\">C</span><span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Car</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>v<span class=\"token operator\">=</span>c<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 可以 </span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>c<span class=\"token operator\">=</span>v<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 编译错误！</span></pre></td></tr></table></figure><p>可以用造型：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>c <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Car</span><span class=\"token punctuation\">)</span> v<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// 只有当 v 这个变量实际管理的是 Car 才行</span></pre></td></tr></table></figure><p>用括号围起类型放在值的前面。<br />\n对象本身并没有发生任何变化，所以不是 “类型转换”<br />\n 运行时有机制来检查这样的转化是否合理  <code>C1assCastException</code></p>\n<h3 id=\"向上造型\"><a class=\"anchor\" href=\"#向上造型\">#</a> 向上造型</h3>\n<ul>\n<li>拿一个子类的对象，当作父类的对象来用</li>\n<li>向上造型是默认的，不需要运算符</li>\n<li>向上造型总是安全的</li>\n</ul>\n<h2 id=\"多态\"><a class=\"anchor\" href=\"#多态\">#</a> 多态</h2>\n<p>所有的类都是继承自 <code>Object</code>  类</p>\n<p><code>Object</code>  类的函数，如</p>\n<ol>\n<li><code>toString()</code></li>\n<li><code>equals()</code></li>\n</ol>\n<p>如果子类的方法覆盖 <code>@Override</code>  了父类的方法，我们也说父类的那个方法在子类有了新的版本或者新的实现。</p>\n<p>覆盖的新版本具有与老版本相同的方法签名：相同的方法名称和参数表。</p>\n<p>子类和父类中存在名称和参数表完全相同的函数，这一对函数构成覆盖关系。</p>\n<p>通过父类的变量，调用存在覆盖关系的函数时， 会调用变量当时所管理的对象所属的类的函数。</p>\n<p>对于外界来说，子类并没有增加新的方法，仍然是在父类中定义过的那个方法。<br />\n不同的是，这是一个新版本，所以通过子类的对象调用这个方法，执行的是子类自己的方法。</p>\n<p>覆盖关系并不说明父类中的方法已经不存在了，而是当通过一个子类的对象调用这个方法时，子类中的方法取代了父类的方法，父类的这个方法被 “覆盖” 起来而看不见了。<br />\n而当通过父类的对象调用这个方法时，实际上执行的仍然是父类中的这个方法。<br />\n注意这里说的是对象而不是变量，因为一个类型为父类的变量有可能实际指向的是一个子类的对象。</p>\n<p>当调用一个方法时，究竟应该调用哪个方法，这件事情叫做绑定。<br />\n绑定表明了调用一个方法的时候，我们使用的是哪个方法。<br />\n绑定有两种：<br />\n一种是早绑定，又称静态绑定，根据变量的声明类型来决定，这种绑定在编译的时候就确定了；<br />\n另一种是晚绑定，即动态绑定。动态绑定在运行的时候，根据变量当时实际所指的对象的类型，动态决定调用的方法。即，根据变量的动态类型来决定。<br />\nJava 缺省使用动态绑定。<br />\n在成员函数中调用其他成员函数也是通过 <code>this</code>  这个对象变量来调用的。</p>\n<h1 id=\"课内项目\"><a class=\"anchor\" href=\"#课内项目\">#</a> 课内项目</h1>\n<h2 id=\"媒体数据库\"><a class=\"anchor\" href=\"#媒体数据库\">#</a> 媒体数据库</h2>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Item</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> title<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> playingTime<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">boolean</span> gotIt <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> comment<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token comment\">// 构造器</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">Item</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> title<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> playingTime<span class=\"token punctuation\">,</span> <span class=\"token keyword\">boolean</span> gotIt<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> comment<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t<span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>title <span class=\"token operator\">=</span> title<span class=\"token punctuation\">;</span>\t\t</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>playingTime <span class=\"token operator\">=</span> playingTime<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>gotIt <span class=\"token operator\">=</span> gotIt<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>comment <span class=\"token operator\">=</span> comment<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token comment\">// 无参数构造器，子类 super () 调用</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">Item</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\t</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setTitle</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> title<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>title <span class=\"token operator\">=</span> title<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> CD <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Item</span> <span class=\"token punctuation\">&#123;</span>\t</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> artist<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> numofTracks<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token function\">CD</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> title<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> artist<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> numofTracks<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> playingTime<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> comment<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t<span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">,</span> playingTime<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> comment<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 调用 Item 的构造器</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">//\t\tthis.title = title;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>artist <span class=\"token operator\">=</span> artist<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>numofTracks <span class=\"token operator\">=</span> numofTracks<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">//\t\tthis.playingTime = playingTime;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">//\t\tthis.comment = comment;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"CD:\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\t<span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>artist<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\t<span class=\"token class-name\">CD</span> cd <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token function\">CD</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"b\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t\tcd<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t\t</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>cd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>cd<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\t</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t\t<span class=\"token class-name\">String</span> s <span class=\"token operator\">=</span> <span class=\"token string\">\"aa\"</span> <span class=\"token operator\">+</span> cd<span class=\"token punctuation\">;</span><span class=\"token comment\">//cd 会自动 toString ()</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t\t</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t\t<span class=\"token class-name\">CD</span> cd1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token function\">CD</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"b\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>cd<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>cd1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t\t<span class=\"token comment\">// 如果没有自己的 equals 方法，将显示 false</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t<span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token string\">\"CD [artist=\"</span> <span class=\"token operator\">+</span> artist <span class=\"token operator\">+</span> <span class=\"token string\">\", numofTracks=\"</span> <span class=\"token operator\">+</span> numofTracks <span class=\"token operator\">+</span> <span class=\"token string\">\", toString()=\"</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"]\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t<span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">equals</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Object</span> obj<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t\t<span class=\"token class-name\">CD</span> cc <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>CD<span class=\"token punctuation\">)</span> obj<span class=\"token punctuation\">;</span><span class=\"token comment\">// 向下造型</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> artist<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>cc<span class=\"token punctuation\">.</span>artist<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> DVD <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Item</span> <span class=\"token punctuation\">&#123;</span>\t</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> title<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> director<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> playingTime<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">boolean</span> gotIt <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> comment<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token function\">DVD</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> title<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> director<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> playingTime<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> comment<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">//\t\tsuper();</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t<span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">,</span> playingTime<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> comment<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">//\t\tthis.title = title;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t<span class=\"token function\">setTitle</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"b\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>director <span class=\"token operator\">=</span> director<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\">//\t\tthis.playingTime = playingTime;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">//\t\tthis.comment = comment;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\t<span class=\"token comment\">// TODO Auto-generated method stub</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\">//\t\tSystem.out.println(\"DVD:\" + title + \":\" + director);\t</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"DVD:\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\t<span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>director<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>Database.java</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ArrayList</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Database</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">//\tprivate ArrayList&lt;CD> listCD = new ArrayList&lt;CD>();</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">//\tprivate ArrayList&lt;DVD> listDVD = new ArrayList&lt;DVD>();</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">private</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Item</span><span class=\"token punctuation\">></span></span> listItem <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Item</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">//\tpublic void add(CD cd) &#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">//\t\tlistCD.add(cd);</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">//\t&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">//\t// 函数重载</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">//\tpublic void add(DVD dvd) &#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\">//\t\tlistDVD.add(dvd);</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\">//\t&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Item</span> item<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\tlistItem<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">list</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\">//\t\tfor (CD cd:listCD) &#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\">//\t\t\tcd.print();</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\">//\t\t&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\">//\t\t</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\">//\t\tfor (DVD dvd:listDVD) &#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\">//\t\t\tdvd.print();</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token comment\">//\t\t&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\t</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Item</span> item<span class=\"token operator\">:</span>listItem<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\t\titem<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t\t</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t\t<span class=\"token class-name\">Item</span> item <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Item</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t\t<span class=\"token class-name\">CD</span> cd <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token function\">CD</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"a\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t\titem <span class=\"token operator\">=</span> cd<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t\t<span class=\"token class-name\">CD</span> cc <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>CD<span class=\"token punctuation\">)</span> item<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 强制转换</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t\t</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t\t<span class=\"token class-name\">Database</span> db <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Database</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t\tdb<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token function\">CD</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"abc\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"abc\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">60</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t\tdb<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token function\">CD</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"efg\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"efg\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">60</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t\tdb<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token function\">DVD</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"xxx\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"aaa\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">60</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t\tdb<span class=\"token punctuation\">.</span><span class=\"token function\">list</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"课堂讨论\"><a class=\"anchor\" href=\"#课堂讨论\">#</a> 课堂讨论</h1>\n<ol>\n<li>关于 <code>super()</code> ：能在一个构造函数里调用两次 <code>super()</code>  吗？ <code>super()</code>  必须在构造函数的第一行吗？</li>\n</ol>\n<blockquote>\n<p>不可以调用两次，且必须在第一行。<br />\n子类是从父类继承而来，继承了父类的属性和方法，如果在子类中先不完成父类的成员的初始化，则子类无法使用，因为在 java 中不允许调用没初始化的成员。在构造器中是顺序执行的，也就是说 super () 必须在第一行进行父类的初始化。</p>\n</blockquote>\n<ol start=\"2\">\n<li>父类的私有的成员函数在子类中能使用吗？</li>\n</ol>\n<blockquote>\n<p>子类不可直接调用父类的 <code>private</code>  方法，可以通过父类的 <code>public</code> （及其他子类可访问）方法和 <code>this</code>  间接使用父类 <code>private</code>  方法。</p>\n</blockquote>\n<ol start=\"3\">\n<li>假设现有 4 个类: <code>Person</code> 、 <code>Teacher</code> 、 <code>Student</code>  和 <code>PhDStudent</code> 。 <code>Teacher</code>  和 <code>Student</code>  都是 <code>Person</code>  的子类， <code>PhDStudent</code>  是 <code>Student</code>  的子类。以下的赋值语句哪些是合法的，为什么？：</li>\n</ol>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 变量管理对象，是否合法</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\">Person</span> p1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Student</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 合法</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token class-name\">Person</span> p2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PhDStudent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 合法</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token class-name\">PhDStudent</span> phd1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Student</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 不合法</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token class-name\">Teacher</span> t1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 不合法</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token class-name\">Student</span> s1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PhDStudent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 合法</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// 变量赋值运算，类型是否安全</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>s1 <span class=\"token operator\">=</span> p1<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 不合法</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>s1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Student</span><span class=\"token punctuation\">)</span>p1<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>s1 <span class=\"token operator\">=</span> p2<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>s1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">PhDStudent</span><span class=\"token punctuation\">)</span>p2<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>s1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Student</span><span class=\"token punctuation\">)</span>p2<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>p1 <span class=\"token operator\">=</span> s1<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 子类型给父类型，安全</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>t1 <span class=\"token operator\">=</span> s1<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 子类型给子类型，不可转换</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>s1 <span class=\"token operator\">=</span> phd1<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 子类型给父类型，安全</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token class-name\">Phd1</span> <span class=\"token operator\">=</span> s1<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>phd1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">PhD</span> <span class=\"token class-name\">Student</span><span class=\"token punctuation\">)</span>s1<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>4. <code>Item</code>  的 <code>print</code>  函数有几种可能的实现方式：<br />\n1. 和视频中一样， <code>Item</code>  的 <code>print</code>  输出 <code>Item</code>  的私有成员变量，然后 <code>CD</code>  等子类 <code>override</code>  这个 <code>print</code>  函数，实现完整的输出，并在其中通过 <code>super.</code>  调用 <code>Item</code>  的 <code>print</code> ；<br />\n2.  <code>Item</code>  的 <code>print</code>  会输出完整的内容，但是其中子类的部分，会调用一个 <code>protected</code>  的 <code>print_task</code>  函数来输出。子类则不去 <code>override</code>   <code>print</code> ，而是 <code>override</code>  这个 <code>print_task</code>  函数，实现子类自己的成员变量的输出；<br />\n3.  <code>Item</code>  的 <code>print</code>  函数什么也不做。另外给一个 <code>format</code>  函数，输出格式化的私有成员变量的内容表达。子类利用这个 <code>format</code>  函数得到内容后输出。</p>\n<p>你觉得这些方案哪个更合适？为什么？如果你有更好的方案，也请提出来。</p>\n",
            "tags": [
                "计算机科学",
                "Java",
                "面向对象程序设计-Java语言-浙江大学-翁恺",
                "Java"
            ]
        },
        {
            "id": "https://shoka.lostyu.me/computer-science/java/course-2/week-3/",
            "url": "https://shoka.lostyu.me/computer-science/java/course-2/week-3/",
            "title": "第3周 对象容器",
            "date_published": "2020-06-14T07:47:18.000Z",
            "content_html": "<div class=\"note info\">\n<p>以下为个人学习笔记和习题整理<br />\n课程：面向对象程序设计 ——Java 语言<br />\n - 浙江大学 - 翁恺 @ 中国大学 MOOC<br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuaWNvdXJzZTE2My5vcmcvY291cnNlL1pKVS0xMDAxNTQyMDAx\">https://www.icourse163.org/course/ZJU-1001542001</span></p>\n</div>\n<h1 id=\"课堂笔记\"><a class=\"anchor\" href=\"#课堂笔记\">#</a> 课堂笔记</h1>\n<p>容器 <code>collection</code>  或 <code>container</code>  是现代程序设计非常基础而重要的手段。</p>\n<p>所谓容器，就是 “放东西的东西”。<br />\n数组可以看作是一种容器，但是数组的元素个数一旦确定就无法改变，这在实际使用中是很大的不足。<br />\n一般意义上的容器，是指具有自动增长容量能力的存放数据的一种数据结构。<br />\n在面向对象语言中，这种数据结构本身表达为一个对象。<br />\n所以才有 “放东西的东西” 的说法。</p>\n<h2 id=\"顺序容器\"><a class=\"anchor\" href=\"#顺序容器\">#</a> 顺序容器</h2>\n<p>即放进容器中的对象是按照指定的顺序（放的顺序）排列起来的，而且允许具有相同值的多个对象存在。</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>容器类</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> notes <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>容器类有两个类型：</p>\n<ul>\n<li>容器的类型 <code>ArrayList</code></li>\n<li>元素的类型 <code>String</code></li>\n</ul>\n<p>根据下标索引操作 <code>ArrayList</code></p>\n<h2 id=\"对象数组\"><a class=\"anchor\" href=\"#对象数组\">#</a> 对象数组</h2>\n<p>当数组的元素的类型是类的时候，数组的每一个元素其实只是对象的<strong>管理者</strong>，而不是对象本身。<br />\n因此，仅仅创建数组并没有创建其中的每一个对象！</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    \t<span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> ia <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    \t<span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> a <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    \t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>ia<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 0</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    \t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// null</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    \t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>ia<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 2</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    \t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// nulla</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    \t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 报错</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    \t<span class=\"token class-name\">String</span> s <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    \t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 报错</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    \t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span>a<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    \t\ta<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token operator\">+</span>i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    \t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    \t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 1</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul>\n<li><code>for each</code>  循环</li>\n</ul>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ArrayList</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Value</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>i <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    \t<span class=\"token class-name\">Value</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> a <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Value</span><span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    \t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>a<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    \t\ta<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Value</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    \t\ta<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    \t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    \t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Value</span> v <span class=\"token operator\">:</span> a<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    \t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 0 1 2 3 4 5 6 7 8 9 </span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    \t\tv<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    \t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    \t</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    \t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Value</span> v <span class=\"token operator\">:</span> a<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    \t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 0 0 0 0 0 0 0 0 0 0</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    \t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    \t<span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> b <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    \tb<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"first\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    \tb<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"second\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    \t</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    \t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> s <span class=\"token operator\">:</span> b<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    \t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// first second</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    \t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"集合容器set\"><a class=\"anchor\" href=\"#集合容器set\">#</a> 集合容器 <code>set</code></h2>\n<p>集合就是数学中的集合的概念：所有的元素都具有唯一的值，元素在其中没有顺序。</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ArrayList</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HashSet</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Value</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>i <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token string\">\"\"</span><span class=\"token operator\">+</span>i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    \t<span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> b <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    \tb<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"first\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    \tb<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"second\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    \tb<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"first\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    \t</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    \t<span class=\"token comment\">/*for (String s : b) &#123;</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    \t\tSystem.out.println(s);</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    \t&#125;*/</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    \t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [first, second, first]</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    \t</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    \t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"------------\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    \t</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    \t<span class=\"token class-name\">HashSet</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> s <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashSet</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    \ts<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"first\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    \ts<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"second\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    \ts<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"first\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 集合没有重复元素</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    \t</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    \t<span class=\"token comment\">/*for (String k : s) &#123;</pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    \t\tSystem.out.println(k);</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    \t&#125;*/</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    \t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [first, second]</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"43\"></td><td><pre>first</pre></td></tr><tr><td data-num=\"44\"></td><td><pre>second</pre></td></tr><tr><td data-num=\"45\"></td><td><pre>first</pre></td></tr><tr><td data-num=\"46\"></td><td><pre>------------</pre></td></tr><tr><td data-num=\"47\"></td><td><pre>first</pre></td></tr><tr><td data-num=\"48\"></td><td><pre>second</pre></td></tr><tr><td data-num=\"49\"></td><td><pre> */</span></pre></td></tr></table></figure><h2 id=\"散列表hash\"><a class=\"anchor\" href=\"#散列表hash\">#</a> 散列表 <code>Hash</code></h2>\n<p>传统意义上的 <code>Hash</code>  表，是能以 <code>int</code>  做值，将数据存放起来的数据结构。<br />\nJava 的 <code>Hash</code>  表可以以任何实现了 <code>hash()</code>  函数的类的对象做值来存放对象。<br />\n键是唯一的，如果同一个键被设定了多次值，只保留最后一个。<br />\n键和值都必须是对象。</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HashMap</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Coin</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token keyword\">private</span> <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> coinnames <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">Coin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\tcoinnames<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"penney\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\tcoinnames<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"dime\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\tcoinnames<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token number\">25</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"quarter\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\tcoinnames<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"half-dolar\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\tcoinnames<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"五毛\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>coinnames<span class=\"token punctuation\">.</span><span class=\"token function\">keySet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 4</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>coinnames<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\t<span class=\"token comment\">// 遍历，对 key 的集合进行 for each</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Integer</span> k <span class=\"token operator\">:</span> coinnames<span class=\"token punctuation\">.</span><span class=\"token function\">keySet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\t\t<span class=\"token class-name\">String</span> s <span class=\"token operator\">=</span> coinnames<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> amount<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>coinnames<span class=\"token punctuation\">.</span><span class=\"token function\">containsKey</span><span class=\"token punctuation\">(</span>amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\t\t<span class=\"token keyword\">return</span> coinnames<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\t<span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t\t\t<span class=\"token keyword\">return</span> <span class=\"token string\">'NOT FOUND'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    \t<span class=\"token class-name\">Scanner</span> in <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    \t<span class=\"token keyword\">int</span> amount <span class=\"token operator\">=</span> in<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    \t<span class=\"token class-name\">Coin</span> coin <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Coin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    \t<span class=\"token class-name\">String</span> name <span class=\"token operator\">=</span> coin<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span>amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    \t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"课内项目\"><a class=\"anchor\" href=\"#课内项目\">#</a> 课内项目</h1>\n<h2 id=\"记事本\"><a class=\"anchor\" href=\"#记事本\">#</a> 记事本</h2>\n<p>功能：</p>\n<ul>\n<li>能存储记录</li>\n<li>不限制能存储的记录的数量</li>\n<li>能知道已经存储的记录的数量</li>\n<li>能查看存进去的每一条记录</li>\n<li>能删除一条记录</li>\n<li>能列出所有的记录</li>\n</ul>\n<p>接口设计：<br />\n <code>add(String note);</code> <br />\n <code>getSize();</code> <br />\n <code>getNote(int index);</code> <br />\n <code>removeNote(int index);</code> <br />\n <code>list();</code></p>\n<blockquote>\n<p>人机交互部分需与业务逻辑分开</p>\n</blockquote>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">notebook</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ArrayList</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">NoteBook</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token comment\">// ArrayList of String</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token comment\">// 用来存放 String 的一个 ArrayList</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token comment\">// ArrayList 是泛型类</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token keyword\">private</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> notes <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token comment\">//private int size = 0;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token comment\">// 添加一条数据</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> add <span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> s<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\tnotes<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t<span class=\"token comment\">//notes.add (0); // 报错</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t<span class=\"token comment\">//size++;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token comment\">// 加入某个现有元素前面</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> s<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> location<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\tnotes<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>location<span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">getSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t\t<span class=\"token comment\">//return size;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> notes<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t<span class=\"token comment\">// 根据编号获得数据内容</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getNote</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> index<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> notes<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t<span class=\"token comment\">// 根据编号删除数据内容</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">removeNote</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> index<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t\t<span class=\"token comment\">//return notes.remove (index); // 报错</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t\tnotes<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t<span class=\"token comment\">// 数据列表</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token function\">list</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t\t<span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> a <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span>notes<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t\t<span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t\t * for (int =0; i &lt; notes.size(); i++) &#123; a[i] = notes.get(i) &#125;</pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t\t */</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t\tnotes<span class=\"token punctuation\">.</span><span class=\"token function\">toArray</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> a<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\t\t<span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> a <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\t\ta<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"first\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\t\ta<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"second\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\t\t</pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\t\t<span class=\"token class-name\">NoteBook</span> nb <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">NoteBook</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>\t\tnb<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"first\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\t\tnb<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"second\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\t\tnb<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"third\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>nb<span class=\"token punctuation\">.</span><span class=\"token function\">getSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>nb<span class=\"token punctuation\">.</span><span class=\"token function\">getNote</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>nb<span class=\"token punctuation\">.</span><span class=\"token function\">getNote</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>\t\t</pre></td></tr><tr><td data-num=\"59\"></td><td><pre>\t\tnb<span class=\"token punctuation\">.</span><span class=\"token function\">removeNote</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>\t\t<span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> b <span class=\"token operator\">=</span>nb<span class=\"token punctuation\">.</span><span class=\"token function\">list</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> s <span class=\"token operator\">:</span> a<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre></pre></td></tr><tr><td data-num=\"66\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"课堂讨论\"><a class=\"anchor\" href=\"#课堂讨论\">#</a> 课堂讨论</h1>\n<ol>\n<li>当我们用 <code>add</code>  函数把对象放进容器中去的时候，究竟是把什么放进了容器？放进去的是对象本身吗？放进去以后，那个对象还在外面吗？如果修改了放进去的那个对象，容器中的对象会变化吗？写点代码来验证自己的猜测吧。</li>\n</ol>\n<blockquote>\n<ol>\n<li>放进容器的是对象的引用（类似于 C++ 的指针，对象的地址），而非对象本身。</li>\n<li>对象本身存在堆上，如果已经有变量存储它（实际上存储的也是引用）的话，放进容器后还是可以通过变量访问该对象。</li>\n<li>修改放进去的对象， <code>ArrayList</code>  容器的对象也会变化，因为是同一个对象。<br />\n但需要注意的是，简单地赋新值给变量，只会让变量关联到一个新的对象上，并没有改变原来的对象；另外，不可变类是不能修改其对象的，比如 <code>String</code></li>\n</ol>\n</blockquote>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ArrayList</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    \t<span class=\"token class-name\">ArrayList</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span> list <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> array <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        list<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"before modification:\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"array: \"</span> <span class=\"token operator\">+</span> array<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"list.get(0): \"</span> <span class=\"token operator\">+</span> list<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"array: \"</span> <span class=\"token operator\">+</span> <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"list.get(0): \"</span> <span class=\"token operator\">+</span> <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        array<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">42</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\nafter modification:\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"array: \"</span> <span class=\"token operator\">+</span> array<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"list.get(0): \"</span> <span class=\"token operator\">+</span> list<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>        </pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"array: \"</span> <span class=\"token operator\">+</span> <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"list.get(0): \"</span> <span class=\"token operator\">+</span> <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>before modification:</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>array: [I@7852e922</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>list.get(0): [I@7852e922</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>array: [1, 2, 3]</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>list.get(0): [1, 2, 3]</pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>after modification:</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>array: [I@7852e922</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>list.get(0): [I@7852e922</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>array: [42, 2, 3]</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>list.get(0): [42, 2, 3]</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>*/</span></pre></td></tr></table></figure><ol start=\"2\">\n<li>如何设计能传递任意数量参数的函数？</li>\n</ol>\n<blockquote>\n<p>在定义方法时，在最后一个形参后加上三点 <code>...</code> ，就表示该形参可以接受多个参数值，多个参数值被当成数组传入。<br />\n上述定义有几个要点需要注意：</p>\n<ol>\n<li>可变参数只能作为函数的最后一个参数，但其前面可以有也可以没有任何其他参数；</li>\n<li>由于可变参数必须是最后一个参数，所以一个函数最多只能有一个可变参数；</li>\n<li>Java 的可变参数，会被编译器转型为一个数组。</li>\n</ol>\n</blockquote>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">int</span> max <span class=\"token operator\">=</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span>MIN_VALUE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> k <span class=\"token operator\">:</span> value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> k<span class=\"token operator\">></span>max <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            max <span class=\"token operator\">=</span> k<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">return</span> max<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">12</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\">// 输出：12</span></pre></td></tr></table></figure><ol start=\"3\">\n<li>集合能用 <code>get()</code>  函数来获得某个位置上的元素吗？</li>\n</ol>\n<blockquote>\n<p>不能。<br />\n首先在 Java 的 <code>HashSet</code>  类中没有定义 <code>get()</code>  方法，调用无效；<br />\n其次，作为数学意义上的具有无序性的集合，试图以线性的索引去获取其中的值是毫无意义的。</p>\n</blockquote>\n<ol start=\"4\">\n<li>学生成绩的数据结构<br />\n如果要写程序表达一个班级的很多个学生的很多门课的成绩，应该如何表达这些数据？<br />\n如果我们希望通过学生的姓名，可以找到他的所有的成绩，而每一门课的成绩，是由课程名称和分数构成的。<br />\n而如果我们还希望这个程序能找出某一门课的全部学生的成绩应该怎样做呢？<br />\n注意，并非所有的学生都参加了所有的课程。</li>\n</ol>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HashMap</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ScoreTable</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token comment\">// student name - course name, score</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">private</span> <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">HashMap</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span> students <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> student<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> course<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Integer</span> score<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t<span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> <span class=\"token keyword\">record</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>students<span class=\"token punctuation\">.</span><span class=\"token function\">containsKey</span><span class=\"token punctuation\">(</span>student<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t\t<span class=\"token keyword\">record</span> <span class=\"token operator\">=</span> students<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>student<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\t\t<span class=\"token keyword\">record</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\t<span class=\"token keyword\">record</span><span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span>course<span class=\"token punctuation\">,</span> score<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\tstudents<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span>student<span class=\"token punctuation\">,</span> <span class=\"token keyword\">record</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getByStudent</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> student<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\t<span class=\"token class-name\">String</span> records <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\t<span class=\"token class-name\">String</span> comma <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t\t</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>students<span class=\"token punctuation\">.</span><span class=\"token function\">containsKey</span><span class=\"token punctuation\">(</span>student<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\t\t<span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> <span class=\"token keyword\">record</span> <span class=\"token operator\">=</span> students<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>student<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> course <span class=\"token operator\">:</span> <span class=\"token keyword\">record</span><span class=\"token punctuation\">.</span><span class=\"token function\">keySet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\t\t\trecords <span class=\"token operator\">+=</span> comma <span class=\"token operator\">+</span> <span class=\"token string\">\"科目\"</span> <span class=\"token operator\">+</span> course <span class=\"token operator\">+</span> <span class=\"token string\">\"的成绩：\"</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">record</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>course<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t\t\t\tcomma <span class=\"token operator\">=</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t\t</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token function\">recordFilter</span><span class=\"token punctuation\">(</span>records<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getByCourse</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> course<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t\t<span class=\"token class-name\">String</span> records <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t\t<span class=\"token class-name\">String</span> comma <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t\t</pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> student <span class=\"token operator\">:</span> students<span class=\"token punctuation\">.</span><span class=\"token function\">keySet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t\t\t<span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> <span class=\"token keyword\">record</span> <span class=\"token operator\">=</span> students<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>student<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">record</span><span class=\"token punctuation\">.</span><span class=\"token function\">containsKey</span><span class=\"token punctuation\">(</span>course<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t\t\t\trecords <span class=\"token operator\">+=</span> comma <span class=\"token operator\">+</span> <span class=\"token string\">\"学生\"</span> <span class=\"token operator\">+</span> student <span class=\"token operator\">+</span> <span class=\"token string\">\"的成绩：\"</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">record</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>course<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t\t\t\tcomma <span class=\"token operator\">=</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span>\t\t\t</pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span>\t\t</pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\t\t</pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token function\">recordFilter</span><span class=\"token punctuation\">(</span>records<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\t<span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> <span class=\"token function\">recordFilter</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> s<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token operator\">?</span> s<span class=\"token operator\">:</span><span class=\"token string\">\"没有记录\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>\t\t<span class=\"token class-name\">ScoreTable</span> s <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ScoreTable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\t\t<span class=\"token class-name\">Scanner</span> in <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>        <span class=\"token class-name\">String</span> student<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>        <span class=\"token class-name\">String</span> course<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>        <span class=\"token keyword\">int</span> score<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>        GO<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"输入数据请输入'1'\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"学生查询请输入'2'\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"课程查询请输入'3'\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"~~退出请输入'0'~~\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>            <span class=\"token keyword\">int</span> jd <span class=\"token operator\">=</span> in<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>            <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>jd<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>            <span class=\"token keyword\">case</span> <span class=\"token number\">0</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>                <span class=\"token keyword\">break</span> GO<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>            <span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入姓名，课程，成绩：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>                student <span class=\"token operator\">=</span> in<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>                course <span class=\"token operator\">=</span> in<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>                score <span class=\"token operator\">=</span> in<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>                s<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>student<span class=\"token punctuation\">,</span> course<span class=\"token punctuation\">,</span> score<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>            <span class=\"token keyword\">case</span> <span class=\"token number\">2</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入姓名：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>                student <span class=\"token operator\">=</span> in<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span><span class=\"token function\">getByStudent</span><span class=\"token punctuation\">(</span>student<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>            <span class=\"token keyword\">case</span> <span class=\"token number\">3</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入课程：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>                course <span class=\"token operator\">=</span> in<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span><span class=\"token function\">getByCourse</span><span class=\"token punctuation\">(</span>course<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span>        </pre></td></tr><tr><td data-num=\"89\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>        in<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre></pre></td></tr><tr><td data-num=\"94\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "计算机科学",
                "Java",
                "面向对象程序设计-Java语言-浙江大学-翁恺",
                "Java"
            ]
        }
    ]
}
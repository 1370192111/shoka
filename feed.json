{
    "version": "https://jsonfeed.org/version/1",
    "title": "優萌初華",
    "subtitle": "有夢書架",
    "icon": "https://shoka.lostyu.me/images/favicon.ico",
    "description": "琉璃的医学 & 编程笔记",
    "home_page_url": "https://shoka.lostyu.me",
    "items": [
        {
            "id": "https://shoka.lostyu.me/computer-science/mse/itmd-534/lecture-7/",
            "url": "https://shoka.lostyu.me/computer-science/mse/itmd-534/lecture-7/",
            "title": "Lecture 7. Storyboards",
            "date_published": "2020-11-06T07:29:08.000Z",
            "content_html": "<h1 id=\"why-storyboards\"><a class=\"anchor\" href=\"#why-storyboards\">#</a> Why Storyboards</h1>\n<ul>\n<li>\n<p>We've collected data from real users and from competitive products<br />\n 我们已经从真实用户和竞争产品中收集了数据</p>\n</li>\n<li>\n<p>We've determined the Mental Models our users have by developing Personas<br />\n 我们通过开发 Personas 来确定用户拥有的心理模型</p>\n</li>\n<li>\n<p>We have a good idea of the Scenarios of use that our users will attempt<br />\n 我们对用户会尝试的使用场景有很好的了解</p>\n</li>\n<li>\n<p>It's pretty tempting to go find a computer and start building something!<br />\n 很容易找到计算机并开始构建东西！</p>\n</li>\n<li>\n<p>We stop thinking conceptually and start thinking pragmatically<br />\n 我们停止从概念上思考，开始进行务实思考</p>\n</li>\n<li>\n<p>We focus on the software tool's constraints instead of the problem's constraints<br />\n 我们专注于软件工具的约束，而不是问题的约束</p>\n</li>\n<li>\n<p>We pay attention to painstaking details (colors, font sizes, pixels) instead of overarching concepts (users, goals, needs)<br />\n 我们注重细节（颜色，字体大小，像素），而不是总体概念（用户，目标，需求）</p>\n</li>\n</ul>\n<h2 id=\"storyboard-overview\"><a class=\"anchor\" href=\"#storyboard-overview\">#</a> Storyboard overview</h2>\n<ul>\n<li>\n<p>Borrowed from the film/animation/comic industries<br />\n 从电影 / 动画 / 漫画行业借来的</p>\n<ul>\n<li>One panel = One Scene<br />\n 一个面板 = 一个场景</li>\n<li>Presented to a group of people<br />\n 介绍给一群人</li>\n<li>Gauge their reactions, understanding<br />\n 衡量他们的反应，理解</li>\n<li>Takes time up front, saves time later<br />\n 提前安排时间，以后节省时间</li>\n</ul>\n</li>\n<li>\n<p>Intended to visualize our scenarios<br />\n 旨在可视化我们的方案</p>\n</li>\n<li>\n<p>Provide a mechanism to gracefully move from conceptual design to screen design<br />\n 提供从概念设计到屏幕设计的优雅过渡机制</p>\n</li>\n<li>\n<p>Allow us to make mistakes early, in paper (cheap and quick), instead of later, in software (expensive and tedious)<br />\n 让我们尽早在纸上（便宜又快速）犯错误，而不是以后在软件上（昂贵而乏味）犯错误。</p>\n</li>\n<li>\n<p>Getting feedback from the users early in the process<br />\n 在此过程的早期就获得用户的反馈</p>\n<ul>\n<li>In initial tests to gauge user reaction<br />\n 在初步测试中评估用户反应</li>\n<li>In study of customers to match with their ideas<br />\n 研究客户以符合他们的想法</li>\n<li>To rapidly design interfaces from interaction with potential users<br />\n 通过与潜在用户的互动来快速设计界面</li>\n<li>To clearly articulate an idea with clients or management<br />\n 与客户或管理层明确表达一个想法</li>\n</ul>\n</li>\n<li>\n<p>Help with the design process<br />\n 帮助设计过程</p>\n<ul>\n<li>The individual steps of a design are made clear by this process<br />\n 通过此过程可以明确设计的各个步骤</li>\n<li>Complex interactions can be broken into multiple screens if the complexity is displayed by the storyboard process<br />\n 如果情节提要过程显示复杂性，则可以将复杂的交互分为多个屏幕</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"storyboarding\"><a class=\"anchor\" href=\"#storyboarding\">#</a> Storyboarding</h2>\n<p class=\"gallery\" data-height=\"220\"><img data-src=\"https://i.loli.net/2020/11/06/wuBdgTQKUsa9Cly.jpg\" alt=\"\" title=\"gas pump\" /><br />\n<img data-src=\"https://i.loli.net/2020/11/06/WyHMxZXcGn2RowD.jpg\" alt=\"\" title=\"grocery app\" /><br />\n<img data-src=\"https://i.loli.net/2020/11/06/uHoy4skVm7x8FG5.jpg\" alt=\"\" title=\"my muse\" /></p>\n<ul>\n<li>Storyboard drawings do not need to be perfect.<br />\n 情节提要板图纸不一定是完美的。</li>\n<li>The purpose of a storyboard is to get an idea across to a potential user.<br />\n 故事板的目的是将想法传达给潜在用户。</li>\n<li>In fact, if the drawings are of poor quality –it is better for the use of explaining an activity.<br />\n 实际上，如果图纸质量较差–最好用于解释活动。</li>\n<li>Perfectly finished drawings distract the observer to the color, accuracy etc. of the drawing rather than the interaction process.<br />\n 完美完成的工程图使观察者分散到工程图的颜色、准确性等方面，而不是交互过程。</li>\n</ul>\n<p><img data-src=\"https://i.loli.net/2020/11/06/Yw7ylUdB2MR1qiF.jpg\" alt=\"\" title=\"Credits: university of Edinburgh\" /></p>\n",
            "tags": [
                "计算机科学",
                "Master of Software Engineering",
                "ITMD 534. Human Computer Interaction",
                "人机交互"
            ]
        },
        {
            "id": "https://shoka.lostyu.me/computer-science/mse/itmd-534/lecture-6/",
            "url": "https://shoka.lostyu.me/computer-science/mse/itmd-534/lecture-6/",
            "title": "Lecture 6. Aesthetics in HCI",
            "date_published": "2020-10-29T08:09:18.000Z",
            "content_html": "<h1 id=\"aesthetics-in-hci\"><a class=\"anchor\" href=\"#aesthetics-in-hci\">#</a> Aesthetics in HCI</h1>\n<p>人机交互中的美学</p>\n<p>Traditional emphasis on usability is now giving way to include user experience as a measure of good UI design.<br />\n 传统上对可用性的强调正逐渐让位，包括用户体验在内，作为衡量良好 UI 设计的方法。</p>\n<h2 id=\"various-movements-in-art\"><a class=\"anchor\" href=\"#various-movements-in-art\">#</a> Various Movements in Art</h2>\n<p>各种艺术运动</p>\n<table>\n<tbody>\n<tr>\n<td>Greek and Roman</td>\n<td>希腊和罗马</td>\n</tr>\n<tr>\n<td>Medieval</td>\n<td>中世纪</td>\n</tr>\n<tr>\n<td>Renaissance</td>\n<td>文艺复兴</td>\n</tr>\n<tr>\n<td>Baroque</td>\n<td>巴洛克式</td>\n</tr>\n<tr>\n<td>Neo Classical</td>\n<td>新古典</td>\n</tr>\n<tr>\n<td>Realism</td>\n<td>现实主义</td>\n</tr>\n<tr>\n<td>Impressionism</td>\n<td>印象派</td>\n</tr>\n<tr>\n<td>Cubism</td>\n<td>立体主义</td>\n</tr>\n<tr>\n<td>Abstract Art</td>\n<td>抽象艺术</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"golden-proportions-黄金比例\"><a class=\"anchor\" href=\"#golden-proportions-黄金比例\">#</a> Golden Proportions 黄金比例</h1>\n<p>Golden proportions are found both in nature and in man-made structures<br />\n 在自然界和人造结构中都可以找到黄金比例</p>\n<ul>\n<li>Studies have shown that humans have a preference for Golden Proportions<br />\n 研究表明，人类偏爱黄金比例</li>\n<li>Golden proportions consist of the golden ratio and are closely related to Fibonacci sequence<br />\n 黄金比例由黄金分割率组成，与斐波那契数列密切相关\n<ul>\n<li>The golden ratio is one where the ratio of the smaller segment to the larger segment is the same as the larger segment to the sum of both segments.<br />\n 黄金分割率是较小部分与较大部分之比，与较大部分与两个部分之和之比相同的比率。</li>\n<li>The golden proportion is a visual representation of the golden number (Φ) which is approximately 1.618<br />\n 黄金比例是黄金分割数（Φ）的视觉表示，约为 1.618</li>\n</ul>\n</li>\n</ul>\n<p><img data-src=\"https://i.loli.net/2020/11/03/S14kUx3MvL5TuHO.jpg\" alt=\"\" title=\"Courtesy: bypeople.com\" /></p>\n<h2 id=\"fibonacci-sequence-斐波那契数列\"><a class=\"anchor\" href=\"#fibonacci-sequence-斐波那契数列\">#</a> Fibonacci Sequence 斐波那契数列</h2>\n<p>The golden ratio is closely connected to Fibonacci sequence<br />\n 黄金比例与斐波那契数列紧密相关</p>\n<ul>\n<li>Fibonacci sequence begins by definition with the numbers 0, 1 and then each successive number in the sequence is the sum of the previous two numbers<br />\n 斐波那契数列的定义是从数字 0、1 开始，然后序列中的每个连续数字都是前两个数字的和<br />\n <code>0,1,1,2,3,5,8,13,21,34,55.....</code></li>\n<li>If you take any number in the sequence and divide it by the previous number the result approximates Phi or the golden ratio<br />\n 如果将序列中的任何数字除以前一个数字，则结果近似为 Φ 或黄金比例<br />\n <code>13/8 = 1.625</code>   <code>21/13 - 1.615</code>   <code>34/21 - 1.619</code>   <code>55/34 = 1.6176</code></li>\n<li>This sequence is found all around us in nature<br />\n 在自然界中发现了这个序列</li>\n</ul>\n<p class=\"gallery\" data-height=\"220\"><img data-src=\"https://i.loli.net/2020/11/03/sGWNKhtoE3r5U4B.jpg\" alt=\"\" title=\"Courtesy: Flickr.com\" /><br />\n<img data-src=\"https://i.loli.net/2020/11/03/ZQIU3uTdcFag6A8.jpg\" alt=\"\" /><br />\n<img data-src=\"https://i.loli.net/2020/11/03/491l3pMzdKZLYU2.jpg\" alt=\"\" /><br />\n<img data-src=\"https://i.loli.net/2020/11/03/my2UeGdPM5g7cjv.jpg\" alt=\"\" /><br />\n<img data-src=\"https://i.loli.net/2020/11/03/RfJdPyhAepOzT1q.jpg\" alt=\"\" /><br />\n<img data-src=\"https://i.loli.net/2020/11/03/KDiGv6k3zUmSWE1.jpg\" alt=\"\" /><br />\n<img data-src=\"https://i.loli.net/2020/11/03/cY4oLsjWgX2TKH8.jpg\" alt=\"\" /></p>\n<h2 id=\"golden-ratio-and-the-rule-of-third-黄金分割率与三分法则\"><a class=\"anchor\" href=\"#golden-ratio-and-the-rule-of-third-黄金分割率与三分法则\">#</a> Golden Ratio and the rule of third 黄金分割率与三分法则</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj05Q2lTM1NVNGxrMCZhbXA7YWJfY2hhbm5lbD1TZWVrZXI=\">Video: The Golden Ratio vs. The Rule of Thirds</span></p>\n<p><div class=\"video-container\"><iframe src=\"https://www.youtube.com/embed/9CiS3SU4lk0\" frameborder=\"0\" loading=\"lazy\" allowfullscreen></iframe></div></p>\n<h2 id=\"example\"><a class=\"anchor\" href=\"#example\">#</a> Example</h2>\n<p><img data-src=\"https://i.loli.net/2020/11/03/RaTQNoCEX673sLu.jpg\" alt=\"\" title=\"Courtesy: tympanus.net\" /></p>\n<p>MmDesign uses the principle of the golden rectangle for the dominant image on its site.<br />\nMmDesign 在其网站的主要图像上使用金色矩形的原理。</p>\n<p>Not only is the image striking, it has the perfect harmonic shape.<br />\n 图像不仅引人注目，而且具有完美的谐波形状。</p>\n<p>The golden rectangle is not just for site design but can be used to create balanced parts throughout a site.<br />\n 黄金矩形不仅用于站点设计，还可以用于在整个站点中创建平衡零件。</p>\n<p><img data-src=\"https://i.loli.net/2020/11/03/RwDa8AJTzKgFPXs.jpg\" alt=\"\" title=\"Courtesy: webdesign.tutplus.com\" /></p>\n<p>The screenshot above shows how the layoutlargely comprises previous client work.<br />\n 上面的屏幕截图显示了布局如何主要包括以前的客户端工作。</p>\n<p>It also features a block of content about the agency itselfand a navigation bar in the center of the screen.<br />\n 它还具有关于代理机构本身的内容块以及屏幕中心的导航栏。</p>\n<p>The contact button, as shown also uses the golden mean as a grid system to organize the layout in a unique way.<br />\n 如图所示，接触按钮还使用黄金分割作为网格系统，以独特的方式组织布局。</p>\n<h1 id=\"layout-design-版图设计\"><a class=\"anchor\" href=\"#layout-design-版图设计\">#</a> Layout Design 版图设计</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1OOFRRZkUxcUtlRSZhbXA7YWJfY2hhbm5lbD1TYXRvcmlHcmFwaGljcw==\">Master LAYOUT &amp; COMPOSITION Design - Why Layout Is SO IMPORTANT</span></p>\n<p><div class=\"video-container\"><iframe src=\"https://www.youtube.com/embed/N8TQfE1qKeE\" frameborder=\"0\" loading=\"lazy\" allowfullscreen></iframe></div></p>\n<h1 id=\"gestalt-theory-格式塔理论\"><a class=\"anchor\" href=\"#gestalt-theory-格式塔理论\">#</a> Gestalt Theory 格式塔理论</h1>\n<p>This is a theory of understanding form in its unified whole.<br />\n 这是一种理解理论，它是一个统一的整体。</p>\n<p>Developed in the Berlin School of experimental psychology, it deals with the capability of human perception to generate forms out of seemingly unconnected lines and shapes.<br />\n 它是由柏林实验心理学学院开发的，旨在处理人类感知能力，以看似无关的线条和形状生成形式。</p>\n<p>It supports the idea that the whole is more than the sum of its parts.<br />\n 它支持这样的想法，即整体不仅仅是其各个部分的总和。</p>\n<ul>\n<li>Closure 闭合</li>\n<li>Similarity 相似</li>\n<li>Good Continuation 良好的延续性</li>\n<li>Proximity 邻近</li>\n<li>Good Form 良好的形式</li>\n<li>Object and background 对象和背景</li>\n</ul>\n<h2 id=\"closure-闭合\"><a class=\"anchor\" href=\"#closure-闭合\">#</a> Closure 闭合</h2>\n<p>Closure is the key for an observer to decipher shapes and forms in a picture with various lines and shapes.<br />\n 闭合是观察者解密具有各种线条和形状的图片中的形状和形式的关键。</p>\n<p>The human brain tends to fill up missing lines to build up a shape that is familiar to it.<br />\n 人脑往往会填补缺失的线条，以建立自己熟悉的形状。</p>\n<p>In the figure below the invisible lines form a triangle.<br />\n 在下图中，看不见的线形成一个三角形。</p>\n<p class=\"gallery\" data-height=\"220\"><img data-src=\"https://i.loli.net/2020/11/05/lRd6TzcVx1GMAeW.png\" alt=\"\" /><br />\n<img data-src=\"https://i.loli.net/2020/11/05/12QPgFZIEpw5scr.jpg\" alt=\"\" /></p>\n<h2 id=\"similarity-相似\"><a class=\"anchor\" href=\"#similarity-相似\">#</a> Similarity 相似</h2>\n<p>Perception of patterns depends on characteristics of the shapes, size, color etc. in the visual field.<br />\n 模式的感知取决于视野中形状，大小，颜色等的特征。</p>\n<p>Human brain has a tendency of building patterns based on similarities.<br />\n 人脑倾向于建立基于相似性的模式。</p>\n<p class=\"gallery\" data-height=\"220\"><img data-src=\"https://i.loli.net/2020/11/05/y7IDvoWrsB6x29P.png\" alt=\"\" /><br />\n<img data-src=\"https://i.loli.net/2020/11/05/L8JFG4KEDWXlcw2.jpg\" alt=\"\" /></p>\n<h2 id=\"good-continuation-良好的延续性\"><a class=\"anchor\" href=\"#good-continuation-良好的延续性\">#</a> Good Continuation 良好的延续性</h2>\n<p>This principle describes the tendency of the eye to follow a line or curve and continue in the same direction.<br />\n 该原理描述了，眼睛遵循直线或曲线，并朝同一方向延伸的趋势。</p>\n<p>It can be used effectively in guiding the eye to a desired location.<br />\n 它可以有效地用于将眼睛引导到所需位置。</p>\n<p>In the figure below the dots appear to form a line and the eye continues to follow it through the square and an imaginary line is inferred<br />\n 在下图中，点似乎形成一条线，并且眼睛继续跟随它穿过正方形，并推断出一条假想线。</p>\n<p class=\"gallery\" data-height=\"220\"><img data-src=\"https://i.loli.net/2020/11/05/7e8zcfMUpduP3as.png\" alt=\"\" /><br />\n<img data-src=\"https://i.loli.net/2020/11/05/c8CfpMoH6vLjzwt.jpg\" alt=\"\" /></p>\n<h2 id=\"proximity-接近\"><a class=\"anchor\" href=\"#proximity-接近\">#</a> Proximity 接近</h2>\n<p>When we see a collection of objects, the objects that are close together form a group in our mind.<br />\n 当我们看到对象的集合时，彼此靠近的对象在我们的脑海中形成了一个群体。</p>\n<p>Even if the objects are dissimilar – the fact that they are close to each other will evoke this sense of a group.<br />\n 即使对象不同，它们彼此靠近的事实也会唤起这种群体感。</p>\n<p>In the figure below, this principle is highlighted.<br />\n 在下图中，突出显示了此原理。</p>\n<p class=\"gallery\" data-height=\"220\"><img data-src=\"https://i.loli.net/2020/11/05/6sQdz8JWZpgYuNt.png\" alt=\"\" /><br />\n<img data-src=\"https://i.loli.net/2020/11/05/uqaw8k3Zzr2c4FT.jpg\" alt=\"\" /></p>\n<h2 id=\"good-form-好的形式\"><a class=\"anchor\" href=\"#good-form-好的形式\">#</a> Good Form 好的形式</h2>\n<p>Humans tend to organize an image in a regular, orderly, symmetric and simple form.<br />\n 人类倾向于以规则，有序，对称和简单的形式来组织图像。</p>\n<p>The principle of <strong>Pragnanz</strong> encompasses all the gestalt principles to create a perception of the whole.<br />\nPragnanz 原则涵盖了所有格式塔原理，从而营造出整体感。</p>\n<p>When a complicated set of images are presented, the human mind tries to simplify them by keeping fewer elements and building an image closer to symmetry.<br />\n 当呈现一组复杂的图像时，人的大脑试图通过减少元素数量，并构建更接近对称的图像来简化它们。</p>\n<p class=\"gallery\" data-height=\"220\"><img data-src=\"https://i.loli.net/2020/11/05/WCYqio26XhuMmO4.png\" alt=\"\" /><br />\n<img data-src=\"https://i.loli.net/2020/11/05/1YqTVmvGOBRH6Ig.jpg\" alt=\"\" /><br />\n<img data-src=\"https://i.loli.net/2020/11/05/bKulknV1rpfaOGv.jpg\" alt=\"\" title=\"Pragnanz\" /></p>\n<h2 id=\"object-and-background-对象和背景\"><a class=\"anchor\" href=\"#object-and-background-对象和背景\">#</a> Object and Background 对象和背景</h2>\n<p>The phenomenon of figure and ground was first investigated by Edgar Rubin a Danish psychologist.<br />\n 图形与背景现象最先由丹麦心理学家 Edgar Rubin 研究。</p>\n<p>It deals with the perception in a visual filed of some objects being in the foreground having dominant role and others are relegated to the background.<br />\n 它处理了视觉文件中的感知，即某些对象位于前景中并具有主导作用，而其他对象则降级为背景。</p>\n<p><img data-src=\"https://i.loli.net/2020/11/05/yB8LMIhnWUoVAEP.jpg\" alt=\"\" /></p>\n<h3 id=\"foreground-and-background-前景和背景\"><a class=\"anchor\" href=\"#foreground-and-background-前景和背景\">#</a> Foreground and Background 前景和背景</h3>\n<p>Use of shapes in layouts and design bring in the aspect of foreground and background objects.<br />\n 在布局和设计中使用形状会带来前景和背景对象的方面。</p>\n<p>The foreground shapes usually convey the main subject matter while the background is used to support the foreground.<br />\n 前景形状通常传达主要主题，而背景则用于支撑前景。</p>\n<p>By careful use of shapes, various meaning can be conveyed.<br />\n 通过仔细使用形状，可以传达各种含义。</p>\n<p><img data-src=\"https://i.loli.net/2020/11/05/PwQViKyBNu72ekO.jpg\" alt=\"\" /></p>\n<h3 id=\"simplicity-简单\"><a class=\"anchor\" href=\"#simplicity-简单\">#</a> Simplicity 简单</h3>\n<ul>\n<li>\n<p>Perfection is achieved not when there is nothing more to add but there is nothing more to take away<br />\n 当没有更多可添加，但没有其他可取的东西时，就无法实现完美。</p>\n</li>\n<li>\n<p>Simplicity does not mean the absence of any décor.<br />\n 简单并不意味着没有任何装饰。<br />\nIt only means that the décor should belong intimately to the design proper and anything foreign to it should be taken away.\t<br />\n它仅意味着装饰应与设计本身紧密相关，并且应删除所有与设计无关的内容。</p>\n</li>\n<li>\n<p>Keep it simple stupid (KISS)<br />\n 保持简单愚蠢（KISS）</p>\n</li>\n<li>\n<p>Less is more<br />\n 少即是多</p>\n</li>\n<li>\n<p>When in doubt leave it out<br />\n 如有疑问，请忽略</p>\n</li>\n</ul>\n<h4 id=\"reduction-削减\"><a class=\"anchor\" href=\"#reduction-削减\">#</a> Reduction 削减</h4>\n<p>Remove inessential elements<br />\n 删除非必要元素</p>\n<ol>\n<li>Decide what essentially needs to be conveyed by the design;<br />\n 决定设计需要传达的内容；</li>\n<li>Critically examine every element (label, control, color, font, line weight) to decide whether it serves an essential purpose<br />\n 严格检查每个元素（标签，控件，颜色，字体，线条粗细），以决定其是否满足基本目的</li>\n<li>Remove it if it isn't essential<br />\n 如果不是必需的，请将其删除</li>\n</ol>\n<p><img data-src=\"https://i.loli.net/2020/11/05/7Hli1DzvyIaBXQc.jpg\" alt=\"\" /></p>\n<h4 id=\"double-duty-双重职责\"><a class=\"anchor\" href=\"#double-duty-双重职责\">#</a> Double duty 双重职责</h4>\n<ul>\n<li>\n<p>Use regular pattern<br />\n 使用常规模式</p>\n</li>\n<li>\n<p>Limit inessential variation among elements<br />\n 限制元素之间的非本质变化</p>\n</li>\n<li>\n<p>Use the same font, color, line width, dimensions, orientation for multiple elements<br />\n 对多个元素使用相同的字体，颜色，线宽，尺寸，方向</p>\n</li>\n</ul>\n<p><img data-src=\"https://i.loli.net/2020/11/05/XFVpAfu7QB4SKDq.jpg\" alt=\"\" /></p>\n<h4 id=\"contrast-对比\"><a class=\"anchor\" href=\"#contrast-对比\">#</a> Contrast 对比</h4>\n<p>Contrast encodes information along visual dimensions<br />\n 对比度沿视觉维度编码信息</p>\n<p><img data-src=\"https://i.loli.net/2020/11/05/DYhlBs9IK4wLOMZ.jpg\" alt=\"\" /></p>\n<p>Ask yourself these questions:<br />\n 问自己以下问题：</p>\n<ul>\n<li>find all the letters on the left edge of the page (position)<br />\n 找到页面左侧（位置）的所有字母</li>\n<li>find all the red letters (hue)<br />\n 查找所有红色字母（色相）</li>\n<li>find all the K's (shape)<br />\n 找到所有的 K（形状）</li>\n</ul>\n<p>Which of these questions felt easy to answer, and which felt hard?<br />\n 以下哪个问题容易回答，哪个很难？<br />\nThe easy ones were selective visual variables.<br />\n 容易的是选择性的视觉变量。</p>\n<p><img data-src=\"https://i.loli.net/2020/11/05/YcENPgmAvtL4zXV.jpg\" alt=\"\" /></p>\n<h3 id=\"white-space-空白空间\"><a class=\"anchor\" href=\"#white-space-空白空间\">#</a> White Space 空白空间</h3>\n<ul>\n<li>Use white space for grouping instead of lines<br />\n 使用空白分组而不是线条</li>\n<li>Use margins to draw eye around design<br />\n 使用边距在设计周围吸引眼球</li>\n<li>Integrate figure and ground<br />\n 整合图形与背景\n<ul>\n<li>Object should be scaled proportionally to its background<br />\n 对象应与其背景成比例缩放</li>\n</ul>\n</li>\n<li>Don't crowd controls together<br />\n 不要挤在一起\n<ul>\n<li>Crowding creates spatial tension and inhibits scanning<br />\n 拥挤会造成空间紧张并阻碍扫描</li>\n</ul>\n</li>\n</ul>\n<p class=\"gallery\" data-height=\"220\"><img data-src=\"https://i.loli.net/2020/11/05/TbEZJNzASlY1voD.jpg\" alt=\"\" title=\"Crowded Dialogue. Courtesy: Mullet and Sano\" /><br />\n<img data-src=\"https://i.loli.net/2020/11/05/JPxuHyI6S7lRXCG.jpg\" alt=\"\" title=\"Using White Space. Courtesy: Mullet and Sano\" /><br />\n<img data-src=\"https://i.loli.net/2020/11/05/Lv4HlyUOcIBiaP3.jpg\" alt=\"\" title=\"White Space avoids noise. Courtesy: Edward Tufte\" /></p>\n<h1 id=\"grids-网格\"><a class=\"anchor\" href=\"#grids-网格\">#</a> Grids 网格</h1>\n<ul>\n<li>Grids enable you to build solid structure and form into your designs<br />\n 网格能够在设计中构建坚固的结构和形式</li>\n<li>In its most basic terms, a grid system is a structure comprising a series of horizontal and vertical lines which intersect and are then used to arrange content<br />\n 从最基本的角度来说，网格系统是一种结构，包括一系列水平线和垂直线，这些线相交，然后用于布置内容</li>\n<li>Using a grid system in your designs is one way to achieve a level of consistency that would be otherwise extremely difficult to master and to portray in your designs<br />\n 在设计中使用网格系统，是达到一致性水平的一种方法，否则将很难掌握和描述您的设计</li>\n</ul>\n<p class=\"gallery\" data-height=\"220\"><img data-src=\"https://i.loli.net/2020/11/05/QkL7e84dWtrVlbR.jpg\" alt=\"\" title=\"Courtesy: webdesign.tutsplus.com\" /><br />\n<img data-src=\"https://i.loli.net/2020/11/05/ObJ9qxpIZrWGvuy.jpg\" alt=\"\" title=\"The screen on the left displays better visual balance and consistency. The result is much more pleasant to look at and use. 左侧的屏幕显示出更好的视觉平衡和一致性。结果使使用和观看时更加愉悦\" /><br />\n<img data-src=\"https://i.loli.net/2020/11/05/7bAOksC3GNX4Ydg.jpg\" alt=\"\" title=\"Layout of The Atlantic magazine home page and the underlying grid. 《大西洋》杂志首页和底层网格的布局\" /></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj03WWNWelVZLUE3OCZhbXA7YWJfY2hhbm5lbD1MaW5rZWRJbkxlYXJuaW5n\">Layout and composition tutorial: Grid variations | lynda.com</span></p>\n<p><div class=\"video-container\"><iframe src=\"https://www.youtube.com/embed/7YcVzUY-A78\" frameborder=\"0\" loading=\"lazy\" allowfullscreen></iframe></div></p>\n<h1 id=\"typography-版式\"><a class=\"anchor\" href=\"#typography-版式\">#</a> Typography 版式</h1>\n<p>A good UI design relies heavily on the correct use of typography.<br />\n 良好的 UI 设计在很大程度上取决于字体的正确使用。</p>\n<p>Typography has its own meta-language. 印刷术有其自己的元语言。</p>\n<p>Its shapes and relationships convey meaning even before we decode the words with which they give shape and voice.<br />\n 它的形状和关系传达了意义，甚至在我们解码它们赋予形状和声音的单词之前</p>\n<p><img data-src=\"https://i.loli.net/2020/11/06/QWD8Fd4lHjsfEUS.jpg\" alt=\"\" /></p>\n<h2 id=\"form-and-counterform-形式与反形式\"><a class=\"anchor\" href=\"#form-and-counterform-形式与反形式\">#</a> Form and Counterform 形式与反形式</h2>\n<p>Every letter consists of the shape filled with ink, the form, and the shape defined by that shape, the counterform.<br />\n 每个字母都由填充有墨水的形状，形式和由该形状定义的形状（对应形式）组成。</p>\n<p>A counterform can be entirely closed, such as the interior space of the &quot;o&quot; partially open like the &quot;n&quot; or broadly open, such as the space defined by the curve and cross stroke of the &quot;f&quot;.<br />\n 配套产品可以完全封闭，例如 “o” 的内部空间。 像 “n” 一样部分打开 或宽阔的空间，例如由 “f” 的曲线和交叉笔划定义的空间</p>\n<p><img data-src=\"https://i.loli.net/2020/11/06/kr1SENMI2pUyV65.jpg\" alt=\"\" /></p>\n<h2 id=\"stems-and-bowls茎和碗\"><a class=\"anchor\" href=\"#stems-and-bowls茎和碗\">#</a> Stems and Bowls 茎和碗</h2>\n<p>The stem of a letterform is the vertical stroke.<br />\n 字母的茎是垂直笔画。</p>\n<p>The thickness of this stroke does much to define the color density of the type, that is, how much ink the letterform will express on the paper.<br />\n 此笔划的厚度在很大程度上决定了该类型的颜色密度，即该字母将在纸张上表达多少墨水。</p>\n<p>The bowls of the letterform are the rounded shapes, the geometry of the curves that make the &quot;e&quot; and &quot;o&quot; and &quot;c&quot; move to the same visual rhythm.<br />\n 字母形的碗是圆形的，曲线的几何形状使 “e”，“o” 和 “c” 移动到相同的视觉节奏。</p>\n<p><img data-src=\"https://i.loli.net/2020/11/06/uj1XrEgaQOwtABx.jpg\" alt=\"\" /></p>\n<h2 id=\"ascenders-and-descenders-上升和下降\"><a class=\"anchor\" href=\"#ascenders-and-descenders-上升和下降\">#</a> Ascenders and Descenders 上升和下降</h2>\n<p>The letters grouped together to make up a word align to four horizontal marks.<br />\n 组合在一起组成一个单词的字母与四个水平标记对齐。</p>\n<p>The most obvious mark is the <ins>baseline</ins>, the bottom of letters such as &quot;x&quot; and &quot;d&quot;.<br />\n 最明显的标记是基线，即字母的底部，例如 “x” 和 “d”。</p>\n<p>Lowercase letters have a second mark, the <ins>x height</ins>, that is, simply the height of the lowercase “x” in any font.<br />\n 小写字母有第二个标记，x 高度，即任何字体中小写字母 “x” 的高度。</p>\n<p>Variations in this height can make a font appear large or small in contrast to other fonts, independent of size.<br />\n 高度的变化会使字体与其他字体形成对比，而与字体大小无关。</p>\n<p><ins>Ascenders</ins> and <ins>descenders</ins> are those parts of the letterform that rise above the x height, such as the stem of the &quot;d&quot; or fall below the baseline, such as the stem of the &quot;p&quot; respectively.<br />\n 升序和降序分别是字母形状中上升到 x 高度以上的部分，例如 “d” 的茎，或下降到基线以下的那些部分，例如 “p” 的茎。</p>\n<p>The top of the ascender defines the top of a capital letter, the <ins>cap height</ins>.<br />\n 上升器的顶部定义了大写字母的顶部，即帽高。</p>\n<p><img data-src=\"https://i.loli.net/2020/11/06/Aa1pQ3sPyf5bSKe.png\" alt=\"\" /></p>\n<h2 id=\"readability可读性\"><a class=\"anchor\" href=\"#readability可读性\">#</a> Readability 可读性</h2>\n<ul>\n<li>\n<p>Many factors affect readability although the two main elements that make for good and readable composition are the correct proportions of type size to line (or “column”) width, and the horizontal flow created by the white space between the lines.<br />\n 尽管影响字体质量和可读性的两个主要因素是，字体大小与线条（或 “列”）宽度的正确比例，以及线条之间的空白所产生的水平流动，但许多因素都会影响可读性。</p>\n</li>\n<li>\n<p>Type that is too large for the column width limits the number of words that will fit on a line, creating uneven word spacing and excess hyphenation.<br />\n 对于列宽而言，太大的类型会限制一行中适合的单词数，从而导致单词间距不均和过多的连字符。</p>\n</li>\n<li>\n<p>Type that is too small for the column, forces the reader to move closer to the page, effectively reducing the eye span and increasing the number of saccadic movements to the end of the line. This quickly leads to fatigue.<br />\n 对于列而言，该类型太小，会迫使阅读器移近页面，从而有效地减小了眼睛的跨度，并增加了行尾扫视的次数。 这很快导致疲劳。</p>\n</li>\n</ul>\n<p class=\"gallery\" data-height=\"220\"><img data-src=\"https://i.loli.net/2020/11/06/iuAlbZpEgzTSHIq.jpg\" alt=\"\" /><br />\n<img data-src=\"https://i.loli.net/2020/11/06/9GUteVDNWwyBjKf.jpg\" alt=\"\" /><br />\n<img data-src=\"https://i.loli.net/2020/11/06/2rSI7jDLOyonMsf.jpg\" alt=\"\" /></p>\n<h2 id=\"typography-in-design-设计中的版式\"><a class=\"anchor\" href=\"#typography-in-design-设计中的版式\">#</a> Typography in Design 设计中的版式</h2>\n<p>Apart from the letters themselves the spacing between letters and between lines and margin spaces make a complete statement on the use of typography in design<br />\n 除了字母本身之外，字母之间以及线条和边距空间之间的间距还完整说明了排版在设计中的使用</p>\n<p><img data-src=\"https://i.loli.net/2020/11/06/gqAQEzYiBbeuovH.jpg\" alt=\"\" /></p>\n<h3 id=\"kerning-字距\"><a class=\"anchor\" href=\"#kerning-字距\">#</a> Kerning 字距</h3>\n<ul>\n<li>\n<p>Kerning involves adjusting the spacing between two letters in a given font. Note that this is a separate issue than tracking, which adjusts the space between all letters simultaneously<br />\n 字距调整涉及调整给定字体中两个字母之间的间距。 请注意，这是与分散不同的问题，分散会同时调整所有字母之间的间距</p>\n</li>\n<li>\n<p>Notice how the uppercase &quot;D&quot; in the example below stands out significantly from the rest of the word<br />\n 请注意，以下示例中的大写字母 “D” 与其他单词相比有何突出之处</p>\n</li>\n</ul>\n<p><img data-src=\"https://i.loli.net/2020/11/06/yERbJgIO4qkYud5.jpg\" alt=\"\" /></p>\n<h3 id=\"fonts-字体\"><a class=\"anchor\" href=\"#fonts-字体\">#</a> Fonts 字体</h3>\n<ul>\n<li>\n<p>There is an inherent psychology associated with certain types of fonts<br />\n 与某些类型的字体有关的内在心理</p>\n</li>\n<li>\n<p>Compare the fonts on left with those on the right<br />\n 比较左边的字体和右边的字体</p>\n</li>\n</ul>\n<p class=\"gallery\" data-height=\"220\"><img data-src=\"https://i.loli.net/2020/11/06/8qA7hPeatibExOF.jpg\" alt=\"\" /><br />\n<img data-src=\"https://i.loli.net/2020/11/06/riQWZYs1B6PSztw.jpg\" alt=\"\" /></p>\n<h3 id=\"alignment-对齐方式\"><a class=\"anchor\" href=\"#alignment-对齐方式\">#</a> Alignment 对齐方式</h3>\n<p>Creative use of typography provides the right focus on this site design.<br />\n 字体创造性使用可以正确地关注此网站设计。</p>\n<p><img data-src=\"https://i.loli.net/2020/11/06/MYTzplFN8B63JR4.jpg\" alt=\"\" /></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1PM2ZWTW0tRWYwWSZhbXA7YWJfY2hhbm5lbD1Ta2V0Y2hUb2dldGhlcg==\">Improving Web and Mobile App Typography - 5 basic guidelines</span></p>\n<p><div class=\"video-container\"><iframe src=\"https://www.youtube.com/embed/O3fVMm-Ef0Y\" frameborder=\"0\" loading=\"lazy\" allowfullscreen></iframe></div></p>\n<h3 id=\"font-to-help-memory-字体以帮助记忆\"><a class=\"anchor\" href=\"#font-to-help-memory-字体以帮助记忆\">#</a> Font to help Memory 字体以帮助记忆</h3>\n<ul>\n<li>\n<p>A team of researchers at Australia's Royal Melbourne Institute of Technology has come up with a new type font called Sans Forgetica.<br />\n 澳大利亚皇家墨尔本理工学院的一组研究人员提出了一种新字体，称为 Sans Forgetica。<br />\nIts purpose is to help readers remember what has been written using it.<br />\n 其目的是帮助读者记住使用它编写的内容。</p>\n</li>\n<li>\n<p>The idea behind the new font was to create a slightly more difficult reading experience, forcing the reader to absorb each word as they stare at it.<br />\n 新字体背后的想法是创造稍微困难的阅读体验，迫使读者在凝视每个单词时吸收它们。</p>\n</li>\n</ul>\n<p><img data-src=\"https://i.loli.net/2020/11/06/PcCaW2HGbv1qo5V.jpg\" alt=\"\" /></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly90ZWNoeHBsb3JlLmNvbS9uZXdzLzIwMTgtMTAtZm9udC1yZWFkc2Fucy1mb3JnZXRpY2EuaHRtbA==\">A font that helps you remember what you read—Sans Forgetica</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1DRVh6U2VodTVITSZhbXA7ZmVhdHVyZT15b3V0dS5iZSZhbXA7YWJfY2hhbm5lbD1STUlUVW5pdmVyc2l0eQ==\">Sans Forgetica | The font to remember | RMIT University</span></p>\n<p><div class=\"video-container\"><iframe src=\"https://www.youtube.com/embed/CEXzSehu5HM\" frameborder=\"0\" loading=\"lazy\" allowfullscreen></iframe></div></p>\n<h1 id=\"color\"><a class=\"anchor\" href=\"#color\">#</a> Color</h1>\n<ul>\n<li>We see the world via a reflective color model<br />\n 我们通过反射色模型看到世界\n<ul>\n<li>Light strikes a surface and is reflected to our eyes -- Properties of surface dictate color<br />\n 光线撞击表面并反射到我们的眼睛 -- 表面的性质决定了颜色</li>\n<li>Subtractive color model -- Cyan Magenta, Yellow primaries<br />\n 减色模型 -- 青色、洋红色，黄色原色</li>\n</ul>\n</li>\n<li>Colors on display follow the emitted model<br />\n 显示器的颜色遵循发射模型\n<ul>\n<li>Additive color model -- Red Green Blue primaries<br />\n 加色模型 -- 红色、绿色、蓝色原色</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"hsv-model\"><a class=\"anchor\" href=\"#hsv-model\">#</a> HSV Model</h2>\n<p><img data-src=\"https://i.loli.net/2020/11/06/jeYOVS7ArRaNlCp.jpg\" alt=\"\" /></p>\n<ul>\n<li>\n<p>Hue<br />\n 色相</p>\n<ul>\n<li>Basic Color, Pigment<br />\n 基本颜色，颜料</li>\n<li>Wavelength (red, green, yellow, blue)<br />\n 波长（红色，绿色，黄色，蓝色）</li>\n<li>Spectrum (VIBGYOR)<br />\n 频谱<br />\n<img data-src=\"https://i.loli.net/2020/11/06/oOaXTyiYrZuQDS2.jpg\" alt=\"\" /></li>\n</ul>\n</li>\n<li>\n<p>Saturation<br />\n 饱和度</p>\n<ul>\n<li>Relative purity, Brightness or intensity of a color<br />\n 相对纯度，颜色的亮度或强度</li>\n<li>Pastel versus strong (baby blue, sky blue, royal blue)<br />\n 柔 vs 强（浅蓝色，天蓝色，宝蓝色）<br />\n<img data-src=\"https://i.loli.net/2020/11/06/gIZ5Qj9ALErcwbm.jpg\" alt=\"\" /></li>\n</ul>\n</li>\n<li>\n<p>Value<br />\n 价值</p>\n<ul>\n<li>Lightness or darkness of a color<br />\n 颜色的明暗</li>\n<li>Amount of energy (white, light gray, dark gray, black)<br />\n 能量（白色，浅灰色，深灰色，黑色）</li>\n<li>Usually V = 0.299*R + 0.587*G + 0.114*B<br />\n<img data-src=\"https://i.loli.net/2020/11/06/rI9Bkl3DiN2La76.jpg\" alt=\"\" /></li>\n</ul>\n</li>\n<li>\n<p>Most commonly used model<br />\n 最常用的模型</p>\n</li>\n</ul>\n<h2 id=\"guidelines\"><a class=\"anchor\" href=\"#guidelines\">#</a> Guidelines</h2>\n<ul>\n<li>Display color images on black background<br />\n 在黑色背景上显示彩色图像</li>\n<li>Choose bright foreground color (white, bold green …)<br />\n 选择明亮的前景色（白色，绿色的粗体...）</li>\n<li>Avoid brown and green as background color<br />\n 避免使用棕色和绿色作为背景色</li>\n<li>Be sure foreground colors contrast in both brightness and hue with background colors<br />\n 确保前景色与背景色在亮度和色调上形成对比</li>\n<li>Use color sparingly – design b/w and then add color<br />\n 少用颜色–设计黑白，然后添加颜色</li>\n<li>Use color to draw attention, communicate organization and to establish relationships<br />\n 用颜色吸引注意力，沟通组织并建立关系</li>\n<li>Avoid using color in non-task related ways<br />\n 避免以与任务无关的方式使用颜色</li>\n</ul>\n<h2 id=\"associations\"><a class=\"anchor\" href=\"#associations\">#</a> Associations</h2>\n<table>\n<tbody>\n<tr>\n<td>\n<p>Red<br />\n 红色</p>\n</td>\n<td>\n<p>Hot, warning, aggression, love<br />\n 热，警告，侵略，爱</p>\n</td>\n</tr>\n<tr>\n<td>\n<p>Pink<br />\n 粉红色</p>\n</td>\n<td>\n<p>Female, Cute, Cotton, Candy<br />\n 女性，可爱，棉花，糖果</p>\n</td>\n</tr>\n<tr>\n<td>\n<p>Orange<br />\n 橙色</p>\n</td>\n<td>\n<p>Autumn, Warm, Halloween<br />\n 秋天，温暖，万圣节</p>\n</td>\n</tr>\n<tr>\n<td>\n<p>Yellow<br />\n 黄色</p>\n</td>\n<td>\n<p>Happy, Caution, Joy<br />\n 快乐，谨慎，喜悦</p>\n</td>\n</tr>\n<tr>\n<td>\n<p>Brown<br />\n 棕色</p>\n</td>\n<td>\n<p>Warm, Fall, Dirt, Earth<br />\n 温暖，秋天，泥土，地球</p>\n</td>\n</tr>\n<tr>\n<td>\n<p>Green<br />\n 绿色</p>\n</td>\n<td>\n<p>Lush, Pastoral, Envy<br />\n 郁郁葱葱，田园风光，嫉妒</p>\n</td>\n</tr>\n<tr>\n<td>\n<p>Purple<br />\n 紫色</p>\n</td>\n<td>\n<p>Royal, Sophisticated, Barney<br />\n 皇家，精致，巴尼</p>\n</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"cultural-colors\"><a class=\"anchor\" href=\"#cultural-colors\">#</a> Cultural Colors</h2>\n<p><img data-src=\"https://i.loli.net/2020/11/06/wu812AmKhnDMRtB.jpg\" alt=\"\" /></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1uWDBESGQ1UU5TOCZhbXA7YWJfY2hhbm5lbD1QQlNvZmZib29r\">The Effect of Color | Off Book | PBS Digital Studios</span></p>\n<p><div class=\"video-container\"><iframe src=\"https://www.youtube.com/embed/nX0DHd5QNS8\" frameborder=\"0\" loading=\"lazy\" allowfullscreen></iframe></div></p>\n<h1 id=\"minimalist-design-极简设计\"><a class=\"anchor\" href=\"#minimalist-design-极简设计\">#</a> Minimalist Design 极简设计</h1>\n<ul>\n<li>&quot;Less is More&quot;<br />\n“少即是多”</li>\n<li>Identify what is really needed<br />\n 确定真正需要的</li>\n<li>If complex to explain/document, then redesign<br />\n 如果要解释 / 记录很复杂，请重新设计</li>\n<li>Concise language<br />\n 简洁的语言</li>\n<li>Avoid extraneous pictures and information<br />\n 避免多余的图片和信息\n<ul>\n<li>Fewer options and menu choices<br />\n 更少的选项和菜单选择</li>\n<li>Reduces planning time<br />\n 减少计划时间</li>\n<li>Extra options can confuse users<br />\n 额外的选项可能会使用户感到困惑</li>\n<li>Reduces manual size, etc.<br />\n 缩小手动尺寸等</li>\n<li>E.g. in XXX product: &quot;Show Actuator&quot;<br />\n 例如 在 XXX 产品中：“显示执行器”</li>\n</ul>\n</li>\n</ul>\n<p class=\"gallery\" data-height=\"220\"><img data-src=\"https://i.loli.net/2020/11/06/5aruD7XoEMPHmqh.jpg\" alt=\"\" /><br />\n<img data-src=\"https://i.loli.net/2020/11/06/wJdZPluFzLacmEj.jpg\" alt=\"\" /></p>\n<p>Minimalism is a way of thinking, a process, which strips the subject down to its bare bones.<br />\n 极简主义是一种思维方式，是一个过程，可以将主体分解为裸露的骨头。</p>\n<p>Removing all these superfluous elements leaves the 'core' essentials, free from distraction.<br />\n 删除所有这些多余的元素将使 “核心” 要素免于分心。</p>\n<p>It's more than a trend or fashion, it's is one of the most significant design movements of the 20th and early 21st century.<br />\n 它不只是一种趋势或时尚，它还是 20 世纪和 21 世纪初最重要的设计运动之一。</p>\n<p class=\"gallery\" data-height=\"220\"><img data-src=\"https://i.loli.net/2020/11/06/2bF45Iq7U9kOLix.jpg\" alt=\"\" /><br />\n<img data-src=\"https://i.loli.net/2020/11/06/7ohrungXk2tUMfS.jpg\" alt=\"\" /></p>\n<p>The MOMA home screen is designed with the beautiful ideas of minimalism.<br />\nMOMA 主屏幕采用极简主义的精美设计。</p>\n<p>The subtle colors and minimal titles – give it an aura of sophistication and class.<br />\n 细腻的色彩和极少的标题–赋予其精致和一流的氛围。</p>\n<p>However, the use of icons to browse various data items is impossible to remember and results in extensive searching.<br />\n 但是，使用图标浏览各种数据项是不可能记住的，并且会导致大量搜索。</p>\n<dl>\n<dt>Use color 使用颜色</dt>\n<dd>don't just go for black and white because of a self-imposed (and unnecessary) restriction.<br />\n 不仅限于黑白，因为存在自我限制（并且是不必要的）。<br />\nUse as much color as the design requires – 'too much' color could be used as a process of juxtaposition.<br />\n 根据设计需要，使用尽可能多的颜色 - “过多” 的颜色可以并置使用。<br />\nYou also shouldn't focus on leaving white space for the sake of it, since 'open' space is more critical to communicate effectively.<br />\n 同样，也不应该为此而留白空间，因为 “开放” 空间对于有效沟通至关重要。</dd>\n<dt>Think about the user 考虑用户</dt>\n<dd>To paraphrase Steve Jobs, &quot;design is how it works, not just what it looks and feels like&quot;.<br />\n 用史蒂夫・乔布斯的话解释：“设计是它的工作方式，而不仅仅是它的外观和感觉”。<br />\nWhen used correctly, minimalist techniques emphasize functionality and typography equally.<br />\n 如果使用得当，极简主义技术会同时强调功能和排版。<br />\nHaving a miniscule amount of information on a near empty page will just scare people away.<br />\n 在接近空白的页面上只有很少量的信息，只会吓跑用户。</dd>\n<dt>Embrace clarity, not chaos 拥抱清晰，不要混乱</dt>\n<dd>Don't make the mistake of thinking a minimalist design adds mystery to your brand or website, you'll just end up confusing people.<br />\n 不要误以为极简设计会给您的品牌或网站增添神秘感，最终只会使人们感到困惑。<br />\nIf people want mystery, they'll watch Sherlock; when they use a website, read a magazine or open an app, they want clarity, accessibility and intuitive functions.<br />\n 如果想要神秘，人们会看 Sherlock 的。 当他们使用网站，阅读杂志或打开应用程序时，他们想要清晰的、可访问的和直观的功能。</dd>\n</dl>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1jWkRQamQtRmM1dyZhbXA7YWJfY2hhbm5lbD1CbG9vbWJlcmdRdWlja1Rha2U=\">Brand Free: How Minimalist Design Connects People</span></p>\n<p><div class=\"video-container\"><iframe src=\"https://www.youtube.com/embed/cZDPjd-Fc5w\" frameborder=\"0\" loading=\"lazy\" allowfullscreen></iframe></div></p>\n<p class=\"gallery\" data-height=\"220\"><img data-src=\"https://i.loli.net/2020/11/06/hyETuV8sgMJlcAH.jpg\" alt=\"\" /><br />\n<img data-src=\"https://i.loli.net/2020/11/06/h9jaHKY5yXn346P.jpg\" alt=\"\" /></p>\n",
            "tags": [
                "计算机科学",
                "Master of Software Engineering",
                "ITMD 534. Human Computer Interaction",
                "人机交互"
            ]
        },
        {
            "id": "https://shoka.lostyu.me/computer-science/mse/itmd-510/week-9/",
            "url": "https://shoka.lostyu.me/computer-science/mse/itmd-510/week-9/",
            "title": "Week 9. Streams API",
            "date_published": "2020-10-24T14:51:29.000Z",
            "content_html": "<h1 id=\"note\"><a class=\"anchor\" href=\"#note\">#</a> Note</h1>\n<h2 id=\"streams-api-interface\"><a class=\"anchor\" href=\"#streams-api-interface\">#</a> Streams API Interface</h2>\n<h3 id=\"lambda-expressions\"><a class=\"anchor\" href=\"#lambda-expressions\">#</a> Lambda Expressions</h3>\n<p>3 ways to execute</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">Comparator</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Employee</span><span class=\"token punctuation\">></span></span> byAge <span class=\"token operator\">=</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token punctuation\">(</span><span class=\"token class-name\">Employee</span> emp1<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Employee</span> emp2<span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> emp1<span class=\"token punctuation\">.</span><span class=\"token function\">getAge</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> emp2<span class=\"token punctuation\">.</span><span class=\"token function\">getAge</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Employee</span><span class=\"token punctuation\">></span></span> emps <span class=\"token operator\">=</span> <span class=\"token function\">fetchMembers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>emps<span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span>byAge<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Employee</span><span class=\"token punctuation\">></span></span> emps <span class=\"token operator\">=</span> <span class=\"token function\">fetchMembers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>emps<span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Employee</span> emp1<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Employee</span> emp2<span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> emp1<span class=\"token punctuation\">.</span><span class=\"token function\">getAge</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> emp2<span class=\"token punctuation\">.</span><span class=\"token function\">getAge</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Employee</span><span class=\"token punctuation\">></span></span> emps <span class=\"token operator\">=</span> <span class=\"token function\">fetchMembers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>emps<span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>emp1<span class=\"token punctuation\">,</span> emp2<span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> emp1<span class=\"token punctuation\">.</span><span class=\"token function\">getAge</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> emp2<span class=\"token punctuation\">.</span><span class=\"token function\">getAge</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><strong>Lambdas</strong> or Anonymous functions.</p>\n<h3 id=\"syntax\"><a class=\"anchor\" href=\"#syntax\">#</a> Syntax</h3>\n<p><code>lambda operator -&gt; body</code> <br />\nwhere lambda operator can be...</p>\n<ul>\n<li>\n<p>Zero parameter:<br />\n <code>() -&gt; System.out.println(&quot;Zero parameter lambda&quot;);</code></p>\n</li>\n<li>\n<p>One parameter:<br />\n <code>(p) -&gt; System.out.println(&quot;One parameter: &quot; + p);</code> <br />\nIt is not mandatory to use parentheses, if the type of that variable can be inferred from the context</p>\n</li>\n<li>\n<p>Multiple parameters :<br />\n <code>(p1, p2) -&gt; System.out.println(&quot;Multiple parameters: &quot; + p1 + &quot;, &quot; + p2);</code></p>\n</li>\n</ul>\n<p><img data-src=\"https://i.loli.net/2020/11/02/XGlz8nDhe35WwfZ.jpg\" alt=\"\" /></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// A Java program to demonstrate simple lambda expressions </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ArrayList</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Test</span> <span class=\"token punctuation\">&#123;</span> </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> args<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>     <span class=\"token punctuation\">&#123;</span> </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token comment\">// Creating an ArrayList with elements &#123;1, 2, 3, 4&#125; </span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> arrL <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        arrL<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        arrL<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        arrL<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        arrL<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token comment\">// Using lambda expression to print all elements of arrL </span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        arrL<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>n <span class=\"token operator\">-></span> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>n <span class=\"token operator\">+</span> <span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token comment\">// Using lambda expression to print even elements of arrL </span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        arrL<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>n <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>n<span class=\"token operator\">%</span><span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>n <span class=\"token operator\">+</span> <span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>Output</p>\n<pre><code>1 2 3 4 2 4\n</code></pre>\n<h2 id=\"stream-api-functionality\"><a class=\"anchor\" href=\"#stream-api-functionality\">#</a> Stream API functionality</h2>\n<p>Streams can be obtained in a number of ways.<br />\nSome examples include:</p>\n<ul>\n<li>From a Collection via the  <code>stream()</code></li>\n<li>From an array via  <code>Arrays.stream(Object[])</code> ;</li>\n</ul>\n<p>Package =&gt;  <code>java.util.stream</code></p>\n<p>Classes used to support functional-style operations on streams of elements, such as map-reduce transformations on collections.<br />\n 用于支持对元素流进行功能样式操作的类，例如集合上的 map-reduce 转换。</p>\n<p>For example:</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> sum <span class=\"token operator\">=</span> widgets<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>          <span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>b <span class=\"token operator\">-></span> b<span class=\"token punctuation\">.</span><span class=\"token function\">getColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> RED<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>          <span class=\"token punctuation\">.</span><span class=\"token function\">mapToInt</span><span class=\"token punctuation\">(</span>b <span class=\"token operator\">-></span> b<span class=\"token punctuation\">.</span><span class=\"token function\">getWeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>          <span class=\"token punctuation\">.</span><span class=\"token function\">sum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"operations-and-pipelines\"><a class=\"anchor\" href=\"#operations-and-pipelines\">#</a> Operations and pipelines</h3>\n<p>A stream is a <strong>limitless</strong> <ins>iterator</ins> that allows you to process collections.<br />\n 流是无限的迭代器，可以处理集合。</p>\n<p>Stream operations are divided into <ins>intermediate</ins> and <ins>terminal</ins> operations, and are combined to form stream pipelines or chained operations. The pipeline usually takes the form of  <code>map-filter-reduce</code>  pattern.<br />\n 流操作分为中间操作和终端操作，结合在一起以形成流管道或链接操作。 管道通常采用 map-filter-reduce 模式的形式。</p>\n<p>The  <code>.map()</code>  method is not an associative data structure, rather it is a transformative operation. It takes a  <code>Stream&lt;T&gt;</code>  and it returns either a  <code>Stream&lt;T&gt;</code>  or  <code>Stream&lt;U&gt;</code> .<br />\n <code>.map()</code>  方法不是关联数据结构，而是一种转换操作。 它采用 Stream &lt;T&gt;，并返回 Stream &lt;T &gt; 或 Stream &lt;U&gt;。</p>\n<p>Example:  <code>Stream&lt;String&gt;</code>  to  <code>Stream&lt;String&gt;</code> <br />\nExample:  <code>Stream&lt;String&gt;</code>  to  <code>Stream&lt;Date&gt;</code></p>\n<p><img data-src=\"https://i.loli.net/2020/11/02/gGBMQ6374P9VcjX.png\" alt=\"\" /></p>\n<p>A stream pipeline consists of a source (such as a Collection or an array); followed by zero or more intermediate operations such as  <code>Stream.filter</code>  or  <code>Stream.map</code> ; and a terminal operation such as  <code>Stream.forEach</code>  or  <code>Stream.reduce</code> .<br />\n 流管道由一个源（例如 Collection 或数组）组成； 随后是零个或多个中间操作，例如 <code>Stream.filter</code>  或 <code>Stream.map</code> ； 以及诸如 <code>Stream.forEach</code>  或 <code>Stream.reduce</code>  之类的终端操作。</p>\n<dl>\n<dt>Intermediate operations</dt>\n<dd>return a <ins>new stream</ins>. They are always <em>lazy</em>; executing an intermediate operation such as  <code>filter()</code>  does not actually perform any filtering, but instead creates a new stream.  Some method examples follow:<br />\n 中间操作返回一个新的流。 它们总是懒惰的。 执行诸如 <code>filter()</code>  之类的中间操作实际上并不执行任何过滤，而是创建一个新的流。 一些方法示例如下：<br />\n <code>peek()</code>  method<br />\n <code>map()</code>  method<br />\n <code>filter()</code>  method</dd>\n<dt>Terminal operations</dt>\n<dd>such as  <code>Stream.forEach</code>  or  <code>IntStream.sum</code> , may traverse the stream to produce a result or a side-effect. After the terminal operation is performed, the stream pipeline is considered consumed, and <ins>can no longer be used</ins>.  Example methods follow:<br />\n 诸如 <code>Stream.forEach</code>  或 <code>IntStream.sum</code>  之类的终端操作，可能会遍历该流以产生结果或副作用。 执行终端操作后，流管线被视为已消耗，无法再使用。 示例方法如下：<br />\n <code>forEach()</code>  method<br />\n <code>count()</code>  method<br />\n <code>max()</code>  method<br />\n <code>collect()</code>  method<br />\n <code>reduce()</code>  method</dd>\n</dl>\n<h4 id=\"ex-use-cases\"><a class=\"anchor\" href=\"#ex-use-cases\">#</a> Ex use cases</h4>\n<dl>\n<dt>map</dt>\n<dd>The map method is used to map the items in the collection to other objects according to the Function passed as argument.<br />\n 用于根据作为参数传递的 Function，将集合中的项目映射到其他对象。</dd>\n</dl>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">List</span> number <span class=\"token operator\">=</span> <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">asList</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\">List</span> square <span class=\"token operator\">=</span> number<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">-></span> x<span class=\"token operator\">*</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">collect</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Collectors</span><span class=\"token punctuation\">.</span><span class=\"token function\">toList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><dl>\n<dt>filter</dt>\n<dd>The filter method is used to select elements as per the Predicate passed as argument.<br />\n 根据作为参数传递的词，进行元素选择。</dd>\n</dl>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">List</span> names <span class=\"token operator\">=</span> <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">asList</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Reflection\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"Collection\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"Stream\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\">List</span> result <span class=\"token operator\">=</span> names<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>s<span class=\"token operator\">-></span>s<span class=\"token punctuation\">.</span><span class=\"token function\">startsWith</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"S\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">collect</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Collectors</span><span class=\"token punctuation\">.</span><span class=\"token function\">toList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><dl>\n<dt>sorted</dt>\n<dd>The sorted method is used to sort the stream.<br />\n 用于对流进行排序。</dd>\n</dl>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">List</span> names <span class=\"token operator\">=</span> <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">asList</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Reflection\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"Collection\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"Stream\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\">List</span> result <span class=\"token operator\">=</span> names<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">sorted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">collect</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Collectors</span><span class=\"token punctuation\">.</span><span class=\"token function\">toList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>Map example</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// applying 12% VAT on each purchase</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// Without lambda expressions:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token class-name\">List</span> costBeforeTax <span class=\"token operator\">=</span> <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">asList</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">300</span><span class=\"token punctuation\">,</span> <span class=\"token number\">400</span><span class=\"token punctuation\">,</span> <span class=\"token number\">500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Integer</span> cost <span class=\"token operator\">:</span> costBeforeTax<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token keyword\">double</span> price <span class=\"token operator\">=</span> cost <span class=\"token operator\">+</span> <span class=\"token number\">.12</span><span class=\"token operator\">*</span>cost<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>price<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">// With Lambda expression:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token class-name\">List</span> costBeforeTax <span class=\"token operator\">=</span> <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">asList</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">300</span><span class=\"token punctuation\">,</span> <span class=\"token number\">400</span><span class=\"token punctuation\">,</span> <span class=\"token number\">500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>costBeforeTax<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>cost<span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> cost <span class=\"token operator\">+</span> <span class=\"token number\">.12</span><span class=\"token operator\">*</span>cost<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token operator\">::</span><span class=\"token function\">println</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>Output</p>\n<pre><code>112.0\n224.0\n336.0\n448.0\n560.0\n112.0\n224.0\n336.0\n448.0\n560.0\n</code></pre>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>Map reduce example</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// Applying 12% VAT on each purchase</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// Old way:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token class-name\">List</span> costBeforeTax <span class=\"token operator\">=</span> <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">asList</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">300</span><span class=\"token punctuation\">,</span> <span class=\"token number\">400</span><span class=\"token punctuation\">,</span> <span class=\"token number\">500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">double</span> total <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Integer</span> cost <span class=\"token operator\">:</span> costBeforeTax<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre> <span class=\"token keyword\">double</span> price <span class=\"token operator\">=</span> cost <span class=\"token operator\">+</span> <span class=\"token number\">.12</span><span class=\"token operator\">*</span>cost<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre> total <span class=\"token operator\">=</span> total <span class=\"token operator\">+</span> price<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Total : \"</span> <span class=\"token operator\">+</span> total<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">// New way:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token class-name\">List</span> costBeforeTax <span class=\"token operator\">=</span> <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">asList</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">300</span><span class=\"token punctuation\">,</span> <span class=\"token number\">400</span><span class=\"token punctuation\">,</span> <span class=\"token number\">500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">double</span> bill <span class=\"token operator\">=</span> costBeforeTax<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>cost<span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> cost <span class=\"token operator\">+</span> <span class=\"token number\">.12</span><span class=\"token operator\">*</span>cost<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>sum<span class=\"token punctuation\">,</span> cost<span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> sum <span class=\"token operator\">+</span> cost<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Total : \"</span> <span class=\"token operator\">+</span> bill<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>Output</p>\n<pre><code>Total : 1680.0\nTotal : 1680.0\n</code></pre>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>Example</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// joining list and appending data</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> l <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">asList</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"one\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"two\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token class-name\">Stream</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> sl <span class=\"token operator\">=</span> l<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>l<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"three\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token class-name\">String</span> s <span class=\"token operator\">=</span> sl<span class=\"token punctuation\">.</span><span class=\"token function\">collect</span><span class=\"token punctuation\">(</span><span class=\"token function\">joining</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"further-uses-of-stream-api\"><a class=\"anchor\" href=\"#further-uses-of-stream-api\">#</a> Further uses of Stream API!!</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ArrayList</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Collections</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Comparator</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">List</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Employees</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token comment\">//put a structure together</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token keyword\">int</span> rank<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token comment\">//add constructor</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">Employees</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> n<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span> name<span class=\"token operator\">=</span>n<span class=\"token punctuation\">;</span> rank<span class=\"token operator\">=</span>r<span class=\"token punctuation\">;</span>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\t<span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Employees</span><span class=\"token punctuation\">></span></span> list <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\tlist<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Employees</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"james papa\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\tlist<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Employees</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"luke papa\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\tlist<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Employees</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"kay papa\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\t<span class=\"token comment\">/*Old school coding - sort first then display filtered results</pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\tCollections.sort(list, new EmployeesSort());</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\tfor(Employees e : list) &#123;</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\t\tif(e.rank == 4)</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t\t\t\tSystem.out.println(e.name + \" \" + e.rank);</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t\t&#125;</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\t*/</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\t<span class=\"token comment\">//New school output list - stream alt. and sorted!</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t\tlist<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t\t\t<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>rank <span class=\"token operator\">==</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t\t\t<span class=\"token punctuation\">.</span><span class=\"token function\">sorted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> a<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">.</span><span class=\"token function\">compareTo</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t\t\t<span class=\"token punctuation\">.</span><span class=\"token function\">forEachOrdered</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>name <span class=\"token operator\">+</span> <span class=\"token string\">\" \"</span> <span class=\"token operator\">+</span> e<span class=\"token punctuation\">.</span>rank<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>import java.util.Comparator;</pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>public class EmployeesSort implements Comparator&lt;Employees>&#123;</pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    //compare by name</pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    public int compare(Employees obj1, Employees obj2) &#123;</pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        return obj1.name.compareTo(obj2.name);</pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    &#125;</pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"47\"></td><td><pre>&#125;*/</span></pre></td></tr></table></figure><h1 id=\"lab\"><a class=\"anchor\" href=\"#lab\">#</a> Lab</h1>\n<ul>\n<li>\n<p>PROJECT<br />\nBank record generations</p>\n</li>\n<li>\n<p>Objective<br />\nTo write a program that performs data analysis from class objects created in lab #2.</p>\n</li>\n</ul>\n<h2 id=\"project-description\"><a class=\"anchor\" href=\"#project-description\">#</a> PROJECT DESCRIPTION</h2>\n<p>Bank of IIT is in desperate need of analytics from its clients for its loan application process. Currently records show 600 clients exist and the bank is hoping to expand its clientele and its potential by offering <ins>premium</ins> loans to deserved grantees.<br />\nIIT 银行迫切需要客户对其贷款申请流程进行分析。 目前的记录显示有 600 个客户，该银行希望通过向应得的受赠人提供优质贷款来扩大其客户群和潜力。</p>\n<p>Perform the data analysis as follows for this lab.<br />\n 对该实验室执行以下数据分析。</p>\n<h2 id=\"project-details\"><a class=\"anchor\" href=\"#project-details\">#</a> Project Details</h2>\n<ul>\n<li>\n<p>Add to your existing project files from lab 2, a new class called Records. Have the class extend the BankRecords class to grab hold of its instance methods plus the BankRecords object array.<br />\n 在 lab2 的项目文件中，添加一个名为 <code>Records</code>  的新类。让该类扩展 <code>BankRecords</code>  类以获取其实例方法，以及 <code>BankRecords</code>  对象数组。</p>\n</li>\n<li>\n<p>Provide at least 2 comparator classes implementing the java.util.Comparator interface for comparing various fields for the following data analysis requirements.<br />\n 提供至少两个比较器类，这些比较器类实现 <code>java.util.Comparator</code>  接口，以比较各个字段，以符合以下数据分析要求。</p>\n</li>\n<li>\n<p>Perform the following analysis requirements and output detail for the Records class.<br />\n 对 <code>Records</code>  类执行以下分析要求和输出详细信息。</p>\n<p>Display the following data analytics in a coherent manner to the console:<br />\n 以一致的方式在控制台上显示以下数据分析：</p>\n</li>\n</ul>\n<blockquote>\n<ul>\n<li>average income for males vs. females<br />\n 男性与女性的平均收入</li>\n<li>number of females with a mortgage and savings account<br />\n 拥有抵押和储蓄账户的女性人数</li>\n<li>number of males with both a car and 1 child per location<br />\n 每个地点有汽车和 1 个孩子的男性人数</li>\n</ul>\n</blockquote>\n<ul>\n<li>\n<p>Write all displayed data to a text file called bankrecords.txt relative to your project path as well. Append your name within the text file at the end of the file plus the date/time.<br />\n 将所有显示的数据写入一个名为 <code>bankrecords.txt</code>  的文本文件中，并保存在相对于您的项目路径的位置。在文件末尾的文本中添加您的姓名以及日期 / 时间。</p>\n<p>Include for credit, your project files including your .csv file and bankrecords.txt file into a zip file, also your jar (executable) file as well as a separate file, and your snapshots of console output and your bankrecords.txt file plus your source code into a Word doc file.<br />\n 项目文件（包括.csv 文件和 bankrecords.txt 文件）压缩到 zip 文件中，还包括 jar（可执行）文件也是一个单独的文件。控制台输出快照、bankrecords.txt 文件以及您的源代码转换为 Word doc 文件。</p>\n</li>\n</ul>\n<h2 id=\"objectives\"><a class=\"anchor\" href=\"#objectives\">#</a> Objectives</h2>\n<h3 id=\"example-of-creating-a-comparator\"><a class=\"anchor\" href=\"#example-of-creating-a-comparator\">#</a> Example of creating a comparator</h3>\n<p>For your first analytic response that is to show the<br />\n <code>average income for males vs. females</code> <br />\nyou may want to create a comparator class to sort by sex<br />\n 对于第一个分析，即显示男性与女性的平均收入，可能要创建一个比较器类，以按性别排序。</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>Example</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Comparator</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SexComparator</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Comparator</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">BankRecords</span><span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">compare</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">BankRecords</span> o1<span class=\"token punctuation\">,</span> <span class=\"token class-name\">BankRecords</span> o2<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t<span class=\"token comment\">// use compareTo to compare strings</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t<span class=\"token keyword\">int</span> result <span class=\"token operator\">=</span> o1<span class=\"token punctuation\">.</span><span class=\"token function\">getSex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">compareTo</span><span class=\"token punctuation\">(</span>o2<span class=\"token punctuation\">.</span><span class=\"token function\">getSex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>Think of comparators you can set up with not only a primary sort but secondary sorts as well.  Example maybe a female sort as a primary sort and mortgages as a secondary sort, etc.<br />\n 比较器不仅可以设置一级排序，还可以设置二级排序。 例如，女性排序为主要排序，抵押贷款为次要排序，等等。</p>\n<p>Another example here maybe to create a comparator java class for sorting by location…<br />\n 这里的另一个示例可创建一个比较器 Java 类，以按地点排序…</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>Example</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Comparator</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">LocationComparator</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Comparator</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">BankRecords</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">compare</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">BankRecords</span> o1<span class=\"token punctuation\">,</span> <span class=\"token class-name\">BankRecords</span> o2<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t<span class=\"token comment\">// use compareTo to compare strings</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t<span class=\"token keyword\">int</span> result <span class=\"token operator\">=</span> o1<span class=\"token punctuation\">.</span><span class=\"token function\">getRegion</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">compareTo</span><span class=\"token punctuation\">(</span>o2<span class=\"token punctuation\">.</span><span class=\"token function\">getRegion</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"call-up-your-comparators-in-your-recordsjava-file\"><a class=\"anchor\" href=\"#call-up-your-comparators-in-your-recordsjava-file\">#</a> Call up your comparators in your Records.java file.</h3>\n<p>在 Records.java 文件中调用比较器。</p>\n<p>Ex. in  <code>main()</code> , you can call a series of functions to perform your analytic results.<br />\n 例如 在 main 函数中，可以调用一系列函数来执行分析结果。</p>\n<p>Set up your file to also not only write to the console but to a text file.<br />\n 将文件设置为不仅要写入控制台，还要写入文本文件。</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>Example</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">FileWriter</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">IOException</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Records</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">BankRecords</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token comment\">// create formatted object to write output directly to console &amp; file</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token keyword\">static</span> <span class=\"token class-name\">FileWriter</span> fw <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">Records</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t<span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t\tfw <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FileWriter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"bankrecords.txt\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t\te<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\t<span class=\"token class-name\">Records</span> br <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Records</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\tbr<span class=\"token punctuation\">.</span><span class=\"token function\">readData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\t<span class=\"token comment\">// call functions to perform analytics</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\t<span class=\"token class-name\">AvgComp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">// analyze average income per loc</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\t<span class=\"token comment\">//femsComp();  // female count w. mort/savings accounts </span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t\t<span class=\"token comment\">//malesComp(); // male counts per loc. w. car &amp; 1 child </span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\t<span class=\"token comment\">// *** close out file object ***//</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\t<span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t\t\tfw<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t\t\te<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token class-name\">AvgComp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t\t<span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span>robjs<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SexComparator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t\t<span class=\"token comment\">// set up needed variables to gather counts &amp; income by sex </span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t\t<span class=\"token comment\">// to determine average income by sex</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t\t<span class=\"token keyword\">int</span> maleCt <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> femCt <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t\t<span class=\"token keyword\">double</span> maleInc <span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> femInc <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> robjs<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>robjs<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">getSex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"FEMALE\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\t\t\t\t<span class=\"token operator\">++</span>femCt<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\t\t\t\tfemInc <span class=\"token operator\">+=</span> robjs<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">getIncome</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\t\t\t\t<span class=\"token comment\">//...</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>\t\t<span class=\"token comment\">// display resulting averages to console and to file</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\t\t </pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" ... \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>\t\t<span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\t\t\tfw<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Avg inc. for Females: $\"</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>femInc<span class=\"token operator\">/</span>femCt<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>\t\t\tfw<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>\t\t\te<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>Continue in like manner as above to finish up two other method definitions, callable in main().</p>\n<p>以上述方式继续完成另外两个方法定义，可在 main 函数中调用。</p>\n",
            "tags": [
                "计算机科学",
                "Master of Software Engineering",
                "ITMD 510. Object-Oriented App Develop",
                "Java"
            ]
        },
        {
            "id": "https://shoka.lostyu.me/computer-science/mse/itmd-510/midterm-exam/",
            "url": "https://shoka.lostyu.me/computer-science/mse/itmd-510/midterm-exam/",
            "title": "Midterm Exam",
            "date_published": "2020-10-19T13:42:26.000Z",
            "content_html": "<h1 id=\"tentative-topical-coverages-for-mid-term\"><a class=\"anchor\" href=\"#tentative-topical-coverages-for-mid-term\">#</a> Tentative Topical Coverages for Mid Term</h1>\n<table>\n<thead>\n<tr>\n<th>Topic(s)</th>\n<th>Suggested Readings</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Java SE Essentials</td>\n<td>Chapters 1-5 (review of essentials)</td>\n</tr>\n<tr>\n<td>Object-Oriented Programming (OOP) concepts</td>\n<td>Chap. 6</td>\n</tr>\n<tr>\n<td>Arrays and Arraylists</td>\n<td>Chap. 7</td>\n</tr>\n<tr>\n<td>Abstraction, Inheritance, Polymorphism</td>\n<td>Chap. 10</td>\n</tr>\n<tr>\n<td>Stream I/O file processing, Exception Handling</td>\n<td>Chap. 9,11</td>\n</tr>\n<tr>\n<td>Generics, Collections (intro only)</td>\n<td>Chap. 17,18</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"sample\"><a class=\"anchor\" href=\"#sample\">#</a> Sample</h1>\n<ol>\n<li class=\"quiz multi\">\n<p>Which of these is an incorrect array declaration?</p>\n<ul class=\"options\">\n<li class=\"correct\"><code>intarr[] = newint[5]</code> </li>\n<li><code>int[] arr = new int[5]</code></li>\n<li><code>int arr[] = new int[5]</code></li>\n<li class=\"correct\"><code>int arr[] = int [5] new</code> </li>\n</ul>\n<blockquote>\n<p>哪一个是不正确的数组声明？</p>\n</blockquote>\n</li>\n<li class=\"quiz\">\n<p>What will this code print?</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> arr<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span> <span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul class=\"options\">\n<li class=\"correct\">0</li>\n<li>value stored in  <code>arr[0]</code></li>\n<li>00000</li>\n<li>Class name@hashcode in hexadecimalform</li>\n</ul>\n</li>\n<li class=\"quiz\">\n<p>What is the output of this program?</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> array_output <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> args<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\t<span class=\"token keyword\">int</span> array_variable <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\t\tarray_variable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>array_variable<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t\ti<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul class=\"options\">\n<li class=\"correct\">0 2 4 6 8</li>\n<li>1 3 5 7 9</li>\n<li>0 1 2 3 4 5 6 7 8 9</li>\n<li>1 2 3 4 5 6 7 8 9 10</li>\n</ul>\n</li>\n<li class=\"quiz\">\n<p>Look at the following code.</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">Integer</span> myNumber <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token keyword\">var</span> <span class=\"token operator\">=</span> myNumber<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>What is true about the second statement?</p>\n<ul class=\"options\">\n<li>The statement performs autoboxing.</li>\n<li>It results in an error because you can't assign a wrapper class to a primitive variable.</li>\n<li class=\"correct\">The statement performs unboxing.</li>\n<li>The statement performs unwrapping.</li>\n</ul>\n<blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vd2FuZy15YXovcC84NTE2MTUxLmh0bWw=\">详解 Java 的自动装箱与拆箱 (Autoboxing and unboxing)</span></p>\n<ul class=\"options\">\n<li>该语句执行自动装箱。</li>\n<li>由于无法将包装器类分配给原始变量，因此会导致错误。</li>\n<li>该语句执行拆箱。✔️</li>\n<li>该语句执行解包。</li>\n</ul>\n</blockquote>\n</li>\n<li class=\"quiz\">\n<p>Which is the valid declaration within an interface definition?</p>\n<ul class=\"options\">\n<li class=\"correct\"><code>public double methoda();</code> </li>\n<li><code>public final double methoda();</code></li>\n<li><code>static void methoda(double d1);</code></li>\n<li><code>protected void methoda(double d1);</code></li>\n</ul>\n<blockquote>\n<p>在接口定义中，哪个是有效声明？</p>\n</blockquote>\n</li>\n<li class=\"quiz false\">\n<p>A private base method can be overridden by some derived public method.</p>\n<blockquote>\n<p>私有基础方法可以被某些派生的公共方法覆盖。</p>\n</blockquote>\n</li>\n<li class=\"quiz\">\n<p>Which of these keywords is not a part of exception handling?</p>\n<ul class=\"options\">\n<li>try</li>\n<li>finally</li>\n<li class=\"correct\">thrown</li>\n<li>catch</li>\n</ul>\n<blockquote>\n<p>这些关键字中的哪个不是异常处理的一部分？</p>\n</blockquote>\n</li>\n<li class=\"quiz\">\n<p>The process of converting one date type to another is called <span class=\"gap\"></span>.</p>\n<ul class=\"options\">\n<li>Translating</li>\n<li class=\"correct\">Casting</li>\n<li>Compiling</li>\n<li>Declaring</li>\n</ul>\n<blockquote>\n<p>将一种日期类型转换为另一种日期的过程称为</p>\n<ul class=\"options\">\n<li>翻译</li>\n<li>强制转换 ✔️</li>\n<li>编译</li>\n<li>声明</li>\n</ul>\n</blockquote>\n</li>\n<li class=\"quiz\">\n<p>Which of the following is the correct declaration statement in java program?</p>\n<ul class=\"options\">\n<li><code>int num = int[5]</code></li>\n<li><code>int num = new num[5]</code></li>\n<li class=\"correct\"><code>int[] num = new int[5]</code> </li>\n<li>None</li>\n</ul>\n<blockquote>\n<p>以下哪项是 Java 程序中正确的声明语句？</p>\n</blockquote>\n</li>\n<li class=\"quiz\">\n<p>What line of code should replace the missing statement to make this program compile?</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/* Missing Statement ? */</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> foo <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exceptionn</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\tjava<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span><span class=\"token class-name\">PrintWriter</span> out <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span><span class=\"token class-name\">PrintWriter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\t<span class=\"token keyword\">new</span> java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span><span class=\"token class-name\">OutputStreamWriter</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\tout<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span> </pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul class=\"options\">\n<li class=\"correct\">No statement required.</li>\n<li><code>import java.io.*;</code></li>\n<li><code>include java.io.*;</code></li>\n<li><code>import java.io.PrintWriter;</code></li>\n</ul>\n<blockquote>\n<p>哪一行代码应替换丢失的语句以使该程序得以编译？</p>\n</blockquote>\n</li>\n<li class=\"quiz\">\n<p><span class=\"gap\"></span> method is used to find the nth no. of character of given string s1.</p>\n<ul class=\"options\">\n<li><code>1.index(n)</code></li>\n<li><code>s1.substring(n)</code></li>\n<li><code>s1.length()</code></li>\n<li class=\"correct\"><code>s1.charAt(n)</code> </li>\n</ul>\n<blockquote>\n<p><span class=\"gap\"></span> 方法用于查找给定字符串 s1 的第 n 个字符。</p>\n</blockquote>\n</li>\n<li class=\"quiz\">\n<p>Which of these can be overloaded?</p>\n<ul class=\"options\">\n<li>Methods</li>\n<li>Constructors</li>\n<li class=\"correct\">both a and b</li>\n<li>None can be overloaded</li>\n</ul>\n<blockquote>\n<p>哪些可以被重载？</p>\n</blockquote>\n</li>\n<li class=\"quiz\">\n<p>The concept of multiple inheritance is implemented in Java by?</p>\n<p>I.   Extending two or more classes.<br />\nII.  Extending one class and implementing one or more interfaces.<br />\nIII. Implementing two or more interfaces.</p>\n<ul class=\"options\">\n<li>Only (II)</li>\n<li>(I) and (II)</li>\n<li class=\"correct\">(II) and (III)</li>\n<li>Only (I)</li>\n<li>Only (III)</li>\n</ul>\n<blockquote>\n<p>Java 的多重继承概念是通过？实现的</p>\n<ul class=\"options\">\n<li>扩展两个或多个类。</li>\n<li>扩展一个类、实现一个或多个接口。 ✔️</li>\n<li>实现两个或多个接口。 ✔️</li>\n</ul>\n</blockquote>\n</li>\n<li class=\"quiz fasle\">\n<p>Private members of a class are inherited in the sub class.</p>\n<blockquote>\n<p>类的私有成员在子类中被继承。</p>\n</blockquote>\n</li>\n<li class=\"quiz true\">\n<p>A method of a super class with a default access modifier can be overridden as protected or public but not as private.</p>\n<blockquote>\n<p>具有默认访问修饰符的父类方法，可以覆盖为 protected 或 public，但不能是 private。</p>\n</blockquote>\n</li>\n<li class=\"quiz\">\n<p>What will be the output of the following program?</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">X</span>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token function\">method</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> a<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ONE\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token function\">method</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span> d<span class=\"token punctuation\">)</span>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"TWO\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Y</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">X</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token keyword\">void</span> <span class=\"token function\">method</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span> d<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"THREE\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MainClass</span> <span class=\"token punctuation\">&#123;</span>\t</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\t<span class=\"token keyword\">new</span> <span class=\"token class-name\">Y</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">method</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul class=\"options\">\n<li class=\"correct\">ONE</li>\n<li>TWO</li>\n<li>THREE</li>\n<li>ONE TWO</li>\n<li>Error</li>\n</ul>\n</li>\n<li class=\"quiz\">\n<p>If a superclass does not have a default constructor, then a class that inherits from it,</p>\n<ul class=\"options\">\n<li class=\"correct\">must call one of the constructors that the superclass does have</li>\n<li>must contain the default constructor for the superclass</li>\n<li>does not inherit the data member fields from the superclass</li>\n<li>must initialize the superclass values</li>\n</ul>\n<blockquote>\n<p>如果父类没有默认的构造函数，则继承自它的类</p>\n<ul class=\"options\">\n<li>必须调用父类确实具有的构造函数之一 ✔️</li>\n<li>必须包含父类的默认构造函数</li>\n<li>不继承父类的数据成员字段</li>\n<li>必须初始化超类值</li>\n</ul>\n</blockquote>\n</li>\n<li class=\"quiz\">\n<p>The binary search algorithm</p>\n<ul class=\"options\">\n<li class=\"correct\">will cut the portion of the array being searched in half each time the loop fails to locate the search value</li>\n<li>will have an average of N/2 comparisons, where N is the number of elements in the array</li>\n<li>is less efficient than the sequential search algorithm</li>\n</ul>\n<blockquote>\n<p>二进制搜索算法</p>\n<ul class=\"options\">\n<li>每次循环未能找到搜索值时，将被搜索数组的部分切成一半 ✔️</li>\n<li>将平均进行 N/2 次比较，其中 N 是数组中元素的数量</li>\n<li>效率较低比顺序搜索算法</li>\n</ul>\n</blockquote>\n</li>\n</ol>\n<h2 id=\"coding-and-definitions\"><a class=\"anchor\" href=\"#coding-and-definitions\">#</a> Coding and Definitions</h2>\n<ol start=\"19\">\n<li class=\"quiz essay\">\n<p>What are some advantages of using Generic types?  List some example.</p>\n<blockquote>\n<p>使用泛型类型有哪些优势？列举一些例子。<br />\nAdvantages: use cases - Type safety at runtime + avoids costs (code duplication!).<br />\n 优点：用例 - 运行时类型安全 + 避免成本（代码重复！）。<br />\nEx. Casting issues give compile time errors if elements aren't proper possible generic datatypes.<br />\n 例如，如果元素不是适当的泛型数据类型，则强制转换问题会导致编译时错误。<br />\nGenerics work around this by typechecking at compile time to prevent ClassCastExceptions!<br />\n 泛型通过在编译时进行类型检查，来避免 ClassCastExceptions，来解决此问题！<br />\nWithout generics/typecheck<br />\n 没有泛型 / 类型检查</p>\n</blockquote>\n<div class=\"note default no-icon\">\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> list <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\tlist<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hey\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token class-name\">Object</span> obj1 <span class=\"token operator\">=</span> list<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token class-name\">String</span> obj2 <span class=\"token operator\">=</span>  list<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token class-name\">Integer</span> obj3 <span class=\"token operator\">=</span> list<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//compile error! Can't convert String to Integer</span></pre></td></tr></table></figure></div>\n</li>\n<li class=\"quiz essay\">\n<p>Why do you suppose a class level generic variable cannot be static?</p>\n<blockquote>\n<p>为什么类级别的泛型变量不能为静态变量？<br />\nUsing generics, type parameters are not allowed to be static, as the static variable is shared amongst objects so compiler can not determine which type to used.<br />\n 使用泛型时，类型参数不允许为静态，因为静态变量在对象之间共享，因此编译器无法确定要使用哪种类型。</p>\n</blockquote>\n</li>\n<li class=\"quiz essay\">\n<p>What are some basic differences between an Array and ArrayList?</p>\n<blockquote>\n<p>Array 和 ArrayList 之间有哪些基本区别？<br />\nThe array represents a basic functionality whereas the ArrayList is part of collection framework in Java.<br />\n 数组 Array 代表基本功能，而 ArrayList 是 Java 中 collection 框架的一部分。<br />\nTherefore array members are accessed using [], whilst an ArrayList has a set of methods to access elements and have the ability to modify them.<br />\n 因此，数组成员使用 <code>[]</code>  访问，而 ArrayList 具有一组访问元素，并具有修改元素的能力。<br />\nArraylists are also dynamic in memory and can grow and shrink at runtime.<br />\nArraylist 在内存中也是动态的，并且可以在运行时增长和缩小。</p>\n</blockquote>\n</li>\n<li class=\"quiz essay\">\n<p>What is the major difference between an abstract class and an interface?</p>\n<blockquote>\n<p>抽象类和接口之间的主要区别是什么？<br />\nAbstract class is more expensive to use, as there is a look-up to do when you inherit from them. Can define a behavior for common classes.<br />\n 抽象类的使用成本更高，因为从它们继承时需要进行查找。可以定义常见类的行为。<br />\nAn interface is a contract, a generic pattern of methods with just signatures allowing any class implement its methods in a way that it wishes to do.<br />\n 接口是一种契约，一种通用方法，带有签名，允许任何类以其希望的方式实现其方法。</p>\n</blockquote>\n</li>\n<li class=\"quiz essay\">\n<p>Define Polymorphism?  What are some of its abilities/usefulness?</p>\n<blockquote>\n<p>多态的定义？它的一些功能 / 用处是什么？<br />\nMeans a state of having many shapes or the capacity to take on various forms (sub types). Ability to describe and process objects of various types and classes through a single, uniform interface (base object).<br />\n 表示具有多种形状或具有采取多种形式（子类型）的能力的状态。通过单个统一的界面（基础对象）描述和处理各种类型和类的对象的能力。<br />\nPolymorphism is a OOPs concept where one name can have many forms. For example, you have a smartphone for communication. The communication mode you choose could be anything. It can be a call, a text message, a picture message, mail, etc. So, the goal is common that is communication, but their approach is different. This is called Polymorphism.<br />\n 多态是一个 OOPs 概念，其中一个名称可以具有多种形式。 例如，您有用于通信的智能手机。 您选择的通信模式可以是任何一种。 它可以是呼叫，短信，图片消息，邮件等。因此，目标很普遍，那就是沟通，但他们的方法不同。 这称为多态。</p>\n</blockquote>\n<div class=\"note default no-icon\">\n<pre class=\"mermaid\"><svg id=\"mermaid-1605038088108\" width=\"100%\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" height=\"246\" style=\"max-width: 336.96875px;\" viewBox=\"-20 -20 336.96875 246\"><g></g><defs><marker id=\"extensionStart\" class=\"extension\" refX=\"0\" refY=\"7\" markerWidth=\"190\" markerHeight=\"240\" orient=\"auto\"><path d=\"M 1,7 L18,13 V 1 Z\"></path></marker></defs><defs><marker id=\"extensionEnd\" refX=\"19\" refY=\"7\" markerWidth=\"20\" markerHeight=\"28\" orient=\"auto\"><path d=\"M 1,1 V 13 L18,7 Z\"></path></marker></defs><defs><marker id=\"compositionStart\" class=\"extension\" refX=\"0\" refY=\"7\" markerWidth=\"190\" markerHeight=\"240\" orient=\"auto\"><path d=\"M 18,7 L9,13 L1,7 L9,1 Z\"></path></marker></defs><defs><marker id=\"compositionEnd\" refX=\"19\" refY=\"7\" markerWidth=\"20\" markerHeight=\"28\" orient=\"auto\"><path d=\"M 18,7 L9,13 L1,7 L9,1 Z\"></path></marker></defs><defs><marker id=\"aggregationStart\" class=\"extension\" refX=\"0\" refY=\"7\" markerWidth=\"190\" markerHeight=\"240\" orient=\"auto\"><path d=\"M 18,7 L9,13 L1,7 L9,1 Z\"></path></marker></defs><defs><marker id=\"aggregationEnd\" refX=\"19\" refY=\"7\" markerWidth=\"20\" markerHeight=\"28\" orient=\"auto\"><path d=\"M 18,7 L9,13 L1,7 L9,1 Z\"></path></marker></defs><defs><marker id=\"dependencyStart\" class=\"extension\" refX=\"0\" refY=\"7\" markerWidth=\"190\" markerHeight=\"240\" orient=\"auto\"><path d=\"M 5,7 L9,13 L1,7 L9,1 Z\"></path></marker></defs><defs><marker id=\"dependencyEnd\" refX=\"19\" refY=\"7\" markerWidth=\"20\" markerHeight=\"28\" orient=\"auto\"><path d=\"M 18,7 L9,13 L14,7 L9,1 Z\"></path></marker></defs><g id=\"classid-Employee-0\" class=\"classGroup\" transform=\"translate(97.4765625,0 )\"><rect x=\"0\" y=\"0\" width=\"98.203125\" height=\"78\" class=\" \"></rect><text y=\"15\" x=\"0\"><tspan class=\"title\" x=\"26.1953125\">Employee</tspan></text><line x1=\"0\" y1=\"21\" y2=\"21\" x2=\"98.203125\"></line><text x=\"5\" y=\"31\" fill=\"white\" class=\"classText\"><tspan x=\"5\">-empCode : int</tspan><tspan x=\"5\" dy=\"10\">-firstName : String</tspan><tspan x=\"5\" dy=\"10\">-lastName: String</tspan></text><line x1=\"0\" y1=\"57\" y2=\"57\" x2=\"98.203125\"></line><text x=\"5\" y=\"72\" fill=\"white\" class=\"classText\"><tspan x=\"5\">+pay()</tspan></text></g><g id=\"classid-HourlyEmployee-1\" class=\"classGroup\" transform=\"translate(0,133 )\"><rect x=\"0\" y=\"0\" width=\"119.671875\" height=\"68\" class=\" \"></rect><text y=\"15\" x=\"0\"><tspan class=\"title\" x=\"21.453125\">HourlyEmployee</tspan></text><line x1=\"0\" y1=\"21\" y2=\"21\" x2=\"119.671875\"></line><text x=\"5\" y=\"31\" fill=\"white\" class=\"classText\"><tspan x=\"5\">-rate : double</tspan><tspan x=\"5\" dy=\"10\">-workingHours : double</tspan></text><line x1=\"0\" y1=\"47\" y2=\"47\" x2=\"119.671875\"></line><text x=\"5\" y=\"62\" fill=\"white\" class=\"classText\"><tspan x=\"5\">+pay()</tspan></text></g><g id=\"classid-SalariedEmployee-2\" class=\"classGroup\" transform=\"translate(169.671875,128 )\"><rect x=\"0\" y=\"0\" width=\"127.296875\" height=\"78\" class=\" \"></rect><text y=\"15\" x=\"0\"><tspan class=\"title\" x=\"21.984375\">SalariedEmployee</tspan></text><line x1=\"0\" y1=\"21\" y2=\"21\" x2=\"127.296875\"></line><text x=\"5\" y=\"31\" fill=\"white\" class=\"classText\"><tspan x=\"5\">-commisionRate : double</tspan><tspan x=\"5\" dy=\"10\">-grossSales : double</tspan><tspan x=\"5\" dy=\"10\">-basic : double</tspan></text><line x1=\"0\" y1=\"57\" y2=\"57\" x2=\"127.296875\"></line><text x=\"5\" y=\"72\" fill=\"white\" class=\"classText\"><tspan x=\"5\">+pay()</tspan></text></g><path d=\"M97.4765625,75.22804647392596L91.203125,79.85670539493829C84.9296875,84.48536431595063,72.3828125,93.74268215797531,66.109375,103.37134107898765C59.8359375,113,59.8359375,123,59.8359375,128L59.8359375,133\" id=\"edge0\" class=\"relation\" marker-start=\"url(#dependencyStart)\"></path><path d=\"M195.6796875,75.22804647392596L201.953125,79.85670539493829C208.2265625,84.48536431595063,220.7734375,93.74268215797531,227.046875,102.53800774565433C233.3203125,111.33333333333333,233.3203125,119.66666666666667,233.3203125,123.83333333333333L233.3203125,128\" id=\"edge1\" class=\"relation\" marker-start=\"url(#dependencyStart)\"></path></svg></pre></div>\n</li>\n<li class=\"quiz essay\">\n<p>Create and define a method called popList that gets passed an arraylist called list that will accept any numeric value type passed in. The method definition should assign 5 integers to the arraylist via a loop storing the values of 1,2,3,4 and 5 respectively.</p>\n<blockquote>\n<p>创建并定义一个名为 popList 的方法，该方法将传递一个名为 list 的 arraylist 数组列表，该列表将接受传入的任何数值类型。该方法定义应通过存储 1,2,3,4 和 5 的循环，分别将 5 个整数分配给 arraylist。</p>\n</blockquote>\n<div class=\"note default\">\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> popList <span class=\"token punctuation\">(</span><span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Number</span><span class=\"token punctuation\">></span></span> list<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;=</span>list<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t   list<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></div>\n</li>\n<li class=\"quiz essay\">\n<p>Code the sort method below to sort an arraylist in ascending order? (DO NOT USE ANY PRE DEFINED METHODS) </p>\n<blockquote>\n<p>编写下面的 sort 方法对数组列表进行升序排序？（请勿使用任何预先定义的方法）</p>\n</blockquote>\n<div class=\"note default\">\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> aListClass<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\t<span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> values <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\tvalues<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\tvalues<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">41</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\tvalues<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t<span class=\"token function\">sort</span><span class=\"token punctuation\">(</span>values<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> values<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>values<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> aList<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr class=\"marked\"><td data-num=\"12\"></td><td><pre>\t\t<span class=\"token keyword\">int</span> temp<span class=\"token punctuation\">;</span></pre></td></tr><tr class=\"marked\"><td data-num=\"13\"></td><td><pre>\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> aList<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr class=\"marked\"><td data-num=\"14\"></td><td><pre>\t\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> aList<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr class=\"marked\"><td data-num=\"15\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>aList<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token punctuation\">(</span>aList<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr class=\"marked\"><td data-num=\"16\"></td><td><pre>\t\t\t\t\ttemp <span class=\"token operator\">=</span> aList<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr class=\"marked\"><td data-num=\"17\"></td><td><pre>\t\t\t\t\taList<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> aList<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// swap</span></pre></td></tr><tr class=\"marked\"><td data-num=\"18\"></td><td><pre>\t\t\t\t\taList<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">,</span> temp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t  <span class=\"token comment\">// values</span></pre></td></tr><tr class=\"marked\"><td data-num=\"19\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr class=\"marked\"><td data-num=\"20\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr class=\"marked\"><td data-num=\"21\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span>\t\t  </pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></div>\n</li>\n</ol>\n<h1 id=\"review\"><a class=\"anchor\" href=\"#review\">#</a> Review</h1>\n<ol>\n<li class=\"quiz\">\n<p>Methods that operate on an object's fields are called</p>\n<ul class=\"options\">\n<li>Private methods</li>\n<li class=\"correct\">Instance methods</li>\n<li>Instance variables</li>\n<li>Public methods</li>\n</ul>\n<blockquote>\n<p>操作对象字段的方法称为</p>\n<ul class=\"options\">\n<li>私人方法</li>\n<li>实例方法 ✔️</li>\n<li>实例变量</li>\n<li>公开方法</li>\n</ul>\n</blockquote>\n</li>\n<li class=\"quiz\">\n<p>A constructor</p>\n<ul class=\"options\">\n<li>Has return type of void</li>\n<li>Always accepts two arguments</li>\n<li>Always has an access specifier of private</li>\n<li class=\"correct\">Has the same name as the class</li>\n</ul>\n<blockquote>\n<p>构造函数</p>\n<ul class=\"options\">\n<li>返回类型为 void</li>\n<li>一律接受两个参数</li>\n<li>始终具有私有的访问说明</li>\n<li>与类同名 ✔️</li>\n</ul>\n</blockquote>\n</li>\n<li class=\"quiz\">\n<p>To develop a program to solve a problem, you start by <span class=\"gap\"></span>.</p>\n<ul class=\"options\">\n<li class=\"correct\">analyzing the problem</li>\n<li>implementing the solution in Java</li>\n<li>designing the algorithm</li>\n<li>entering the solution into a computer system</li>\n</ul>\n<blockquote>\n<p>要开发解决问题的程序，您首先需要从 <span class=\"gap\"></span> 开始。</p>\n<ul class=\"options\">\n<li>分析问题 ✔️</li>\n<li>用 Java 实现解决方案</li>\n<li>设计算法</li>\n<li>将解决方案输入计算机系统</li>\n</ul>\n</blockquote>\n</li>\n<li class=\"quiz\">\n<p>Declaring a class level variable as static means <span class=\"gap\"></span>.</p>\n<ul class=\"options\">\n<li>access is obtainable only thru a class object</li>\n<li class=\"correct\">any method (static, instance) can have access</li>\n<li>no methods can have access</li>\n<li>none of the above</li>\n</ul>\n<blockquote>\n<p>将类级别变量声明为静态意味着 <span class=\"gap\"></span> 。</p>\n<ul class=\"options\">\n<li>访问只能通过类对象获得</li>\n<li>任何方法（静态，实例）都可以访问 ✔️</li>\n<li>没有方法可以访问</li>\n<li>以上都不是</li>\n</ul>\n</blockquote>\n</li>\n<li class=\"quiz\">\n<p>In an interface all methods have</p>\n<ul class=\"options\">\n<li class=\"correct\">public access</li>\n<li>packaged access</li>\n<li>private access</li>\n<li>protected access</li>\n</ul>\n<blockquote>\n<p>在接口中，所有方法都具有</p>\n<ul>\n<li>public 访问权限 ✔️</li>\n<li>packaged 访问权限</li>\n<li>private 访问权限</li>\n<li>protected 访问权限</li>\n</ul>\n</blockquote>\n</li>\n<li class=\"quiz\">\n<p>The binary search algorithm</p>\n<ul class=\"options\">\n<li class=\"correct\">will cut the portion of the array being searched in half each time the loop fails to locate the search value</li>\n<li>will have an average of N/2 comparisons, where N is the number of elements in the array</li>\n<li>is less efficient than the sequential search algorithm</li>\n<li>will have a maximum number of comparisons equal to the number of elements in the array</li>\n</ul>\n<blockquote>\n<p>二进制搜索算法</p>\n<ul class=\"options\">\n<li>每次循环未能找到搜索值时，将被搜索数组的一部分切成两半 ✔️</li>\n<li>将具有 N/2 个比较的平均值，其中 N 是数组中元素的数量</li>\n<li>比顺序搜索算法效率低</li>\n<li>将具有的最大比较数量等于数组中元素的数量</li>\n</ul>\n</blockquote>\n</li>\n<li class=\"quiz\">\n<p>The declaration</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">></span></span> aL <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul class=\"options\">\n<li>compiles and runs correctly, but is not recommended</li>\n<li>allows the programmer to create an ArrayList that holds integer types</li>\n<li class=\"correct\">causes a compile-time error</li>\n<li>compiles correctly, but causes an exception to be thrown at run time</li>\n</ul>\n<blockquote>\n<ul class=\"options\">\n<li>正确编译并运行，但不建议</li>\n<li>允许程序员创建一个保存整数类型的 ArrayList</li>\n<li>导致编译时错误 ✔️</li>\n<li>正确编译，但导致在运行时引发异常</li>\n</ul>\n</blockquote>\n</li>\n<li class=\"quiz\">\n<p>Another term for an object of a class is:</p>\n<ul class=\"options\">\n<li>access specifier</li>\n<li class=\"correct\">instance</li>\n<li>member</li>\n<li>method</li>\n</ul>\n<blockquote>\n<p>类的对象的另一个术语是：</p>\n<ul class=\"options\">\n<li>访问说明符</li>\n<li>实例 ✔️</li>\n<li>成员</li>\n<li>方法</li>\n</ul>\n</blockquote>\n</li>\n<li class=\"quiz\">\n<p>In a Binary Search routine, the array item in the middle of the array portion is at subscript position</p>\n<ul class=\"options\">\n<li class=\"correct\">(lower + upper)/2</li>\n<li>(upper - lower)/2</li>\n<li>(lower - upper)/2</li>\n<li>lower + upper/2</li>\n</ul>\n<blockquote>\n<p>在二进制搜索例程中，中间的数组项位于下标位置？</p>\n</blockquote>\n</li>\n<li class=\"quiz\">\n<p>Which class is related to all the exceptions that cannot be caught?</p>\n<ul class=\"options\">\n<li class=\"correct\">Error</li>\n<li>Exception</li>\n<li>RuntimeException</li>\n<li>All of the mentioned</li>\n</ul>\n<blockquote>\n<p>哪个类与所有无法捕获的异常相关？<br />\nRuntime errors cannot be caught generally. Error class is used to catch such errors/exceptions.<br />\n 通常无法捕获运行时错误。 Error 类用于捕获此类错误 / 异常。</p>\n</blockquote>\n</li>\n<li class=\"quiz\">\n<p>For the following code, which statement is not true?</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Sphere</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">double</span> radius<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">double</span> x<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">double</span> y<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">double</span> z<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul class=\"options\">\n<li class=\"correct\">z is available to code that is written outside the Sphere class</li>\n<li>radius, x, y, and z are called members of the Sphere class</li>\n<li>x is available to code that is written outside the Sphere class</li>\n<li>radius is not available to code written outside the Sphere class</li>\n</ul>\n<blockquote>\n<p>对于以下代码，哪个语句不正确</p>\n<ul class=\"options\">\n<li>z 可用于在 Sphere 类之外编写的代码 ✔️</li>\n<li>radius，x，y 和 z 被称为 Sphere 类的成员</li>\n<li>x 可用于在 Sphere 类之外编写的代码</li>\n<li>radius 不适用于在 Sphere 类之外编写的代码</li>\n</ul>\n</blockquote>\n</li>\n<li class=\"quiz\">\n<p>The following statement creates an  <code>ArrayList</code>  object. What is the purpose of the  <code>&lt;String&gt;</code>  notation?</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> arr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul class=\"options\">\n<li>It specfies that everything store for the arr object will be converted to a String;</li>\n<li>It specfies that String objects may not be stored in the ArrayList object;</li>\n<li class=\"correct\">It specfies that only String objects may be stored in the ArrayList object;</li>\n<li>It specfies that the get method will only return String ob.</li>\n</ul>\n<blockquote>\n<p>以下语句创建一个 <code>ArrayList</code>  对象。  <code>&lt;String&gt;</code>  表示法的目的是什么？</p>\n<ul class=\"options\">\n<li>确定将所有存储在 <code>arr</code>  对象中的东西都转换为 <code>String</code> ；</li>\n<li>确定 <code>String</code>  对象可能不存储在 <code>ArrayList</code>  对象中；</li>\n<li>规定只有 <code>String</code>  对象可以存储在 <code>ArrayList</code>  对象中； ✔️</li>\n<li>它指定 <code>get</code>  方法将仅返回 <code>String ob</code> 。</li>\n</ul>\n</blockquote>\n</li>\n<li class=\"quiz\">\n<p>What would be the results of the following code?</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> SIZE <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> array1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span>SIZE<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// ... Code that will put values in array1</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">int</span> value <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> a <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> a <span class=\"token operator\">&lt;=</span> array1<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> a<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tvalue <span class=\"token operator\">+=</span> array1<span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul class=\"options\">\n<li>value contains the lowest value in array1</li>\n<li>value contains the sum of all the values in array1</li>\n<li>value contains the highest value in array1</li>\n<li class=\"correct\">This would cause the program to crash</li>\n</ul>\n<blockquote>\n<p>以下代码的结果是什么？</p>\n<ul>\n<li>值包含 array1 中的最小值</li>\n<li>value 包含 array1 中所有值的总和</li>\n<li>值包含 array1 中的最大值</li>\n<li>这会导致程序崩溃 ✔️<br />\n{.options}<br />\n <code>a &lt;= array1.length - 1</code></li>\n</ul>\n</blockquote>\n</li>\n<li class=\"quiz essay\">\n<p>What is Data Hiding, how why is it important, in other words, why consider it for any instance fields of a class?</p>\n<blockquote>\n<ul>\n<li>What is Data Hiding:<br />\n 什么是数据隐藏？<br />\nAllows direct access and any allowed changes to the objects internal data by the class object itself.<br />\n 允许类对象本身直接访问，和允许对对象内部数据进行任何更改。<br />\nCreate private fields to allow for data hiding.<br />\n 创建私有字段，以允许隐藏数据。</li>\n<li>how why is it important?<br />\n 为什么它如此重要，换句话说，为什么要为一个类的任何实例字段考虑它？<br />\nData hiding is important because classes are typically used as components in large software systems, involving a team of programmers.<br />\n 数据隐藏很重要，因为类通常在大型软件系统中用作组件，涉及一个团队。<br />\nData hiding helps enforce the integrity of an object's internal data.<br />\n 数据隐藏有助于增强对象内部数据的完整性。</li>\n</ul>\n</blockquote>\n</li>\n<li class=\"quiz essay\">\n<p>Distinguish between a no-argument constructor and a default constructor. How are constructors distinguished from normal methods of a class?</p>\n<blockquote>\n<p>区分无参数构造函数和默认构造函数。构造函数如何与类的常规方法区分开？<br />\nA constructor that does not accept arguments is known as a no-arg constructor. It usually intializes class level variables.<br />\n 不接受参数的构造函数称为无参数构造函数。 它通常初始化类级别的变量。<br />\nThe default constructor is a constructor that the Java compiler adds to your code if no explicit constructor is available. The default constructor is consider a no-arg constructor.<br />\n 默认构造函数是 Java 编译器在没有显式构造函数可用时，将其添加到您的代码中的构造函数。 默认构造函数被视为无参数构造函数。<br />\nEx. no-arg constructor programmer defined<br />\n 例如 无参数构造函数程序员定义</p>\n</blockquote>\n<div class=\"note default no-icon\">\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token class-name\">Rectangle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\tlength <span class=\"token operator\">=</span> width <span class=\"token operator\">=</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></div>\n</li>\n<li class=\"quiz\">\n<p>The method getMax shown below is supposed to return the position of the largest value in the portion of an array between 0 and last, inclusive:</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">getMax</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> array<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> last<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token keyword\">int</span> max <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> k <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> k <span class=\"token operator\">&lt;=</span> last<span class=\"token punctuation\">;</span> k<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\t<span class=\"token comment\">// Code is Missing</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">return</span> max<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>The missing code is</p>\n<ul class=\"options\">\n<li><code>if (array[k] &gt; array[max]) k = max;</code></li>\n<li class=\"correct\"><code>if (array[k] &gt; array[max]) max = k;</code> </li>\n<li><code>if (array[k] &gt; max) return max;</code></li>\n<li><code>if (array[k] &gt; array[max]) return max;</code></li>\n</ul>\n<blockquote>\n<p><code>getMax</code>  应该返回数组位置介于 <code>0</code>  到 <code>last</code>  之间的最大值。</p>\n</blockquote>\n</li>\n<li class=\"quiz\">\n<p>If you want to share code among several closely related classes, you expect to have common functions in a class and want to defer implementations of some other functions to derived classes, then we need to use <span class=\"gap\"></span> .</p>\n<ul class=\"options\">\n<li class=\"correct\">An abstract class</li>\n<li>An interface</li>\n<li>either A or B</li>\n</ul>\n<blockquote>\n<p>如果要在几个密切相关的类之间共享代码，则希望在一个类中具有通用功能，并希望将某些其他功能的实现推迟到派生类，则我们需要使用</p>\n</blockquote>\n</li>\n<li class=\"quiz\">\n<p>What is the output of this program?</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> args<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token class-name\">ArrayList</span> obj <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tobj<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"F\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\tobj<span class=\"token punctuation\">.</span><span class=\"token function\">ensureCapacity</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//increase capacity of object</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul class=\"options\">\n<li class=\"correct\">1</li>\n<li>2</li>\n<li>4</li>\n<li>8</li>\n</ul>\n</li>\n<li class=\"quiz\">\n<p>Which collection does not allow duplicates on its elements?</p>\n<ul class=\"options\">\n<li>list</li>\n<li>arrayList</li>\n<li class=\"correct\">set</li>\n<li>linkedlist</li>\n</ul>\n<blockquote>\n<p>哪个集合不允许其元素重复？</p>\n</blockquote>\n</li>\n<li class=\"quiz\">\n<p>Consider a class that uses the following variables to implement an array-based stack:</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">String</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> s <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token number\">100</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">int</span> top <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>code syntax/logic for adding an item x to the stack can be written as</p>\n<ul class=\"options\">\n<li>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>top <span class=\"token operator\">==</span> s<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  \t<span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RuntimeException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Overflow\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  \ttop <span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  \ts<span class=\"token punctuation\">[</span>top<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> x<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></li>\n<li class=\"correct\"><figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>top <span class=\"token operator\">&lt;</span> s<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\ts<span class=\"token punctuation\">[</span>top<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> x<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\ttop<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RuntimeException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Overflow\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n<li>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>top <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">IndexOutBoundsException</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\ts<span class=\"token punctuation\">[</span>top<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> x<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\ttop <span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n<li><code>s.add(top, x);</code></li>\n</ul>\n<blockquote>\n<p>假设一个类，将使用以下变量来实现基于数组的堆栈<br />\n将项目 x 添加到堆栈的代码语法 / 逻辑可以写成？</p>\n</blockquote>\n</li>\n<li class=\"quiz true\">\n<p>A constructor is a method that is automatically called when an object is created.</p>\n<blockquote>\n<p>构造函数是一种在创建对象时自动调用的方法。</p>\n</blockquote>\n</li>\n<li class=\"quiz\">\n<p>In Java, you do not use the new operator when you use a(n):</p>\n<ul class=\"options\">\n<li>array size declarator</li>\n<li class=\"correct\">initialization list</li>\n<li>two-dimensional array</li>\n<li>all choices are correct</li>\n</ul>\n<blockquote>\n<p>在 Java 中，当使用 <code>a(n)</code>  时，请勿使用 <code>new</code>  运算符：</p>\n<ul class=\"options\">\n<li>数组大小声明符</li>\n<li>初始化列表 ✔️</li>\n<li>二维数组</li>\n<li>所有选择都是正确的</li>\n</ul>\n</blockquote>\n</li>\n<li class=\"quiz\">\n<p>When you are working with a <span class=\"gap\"></span> , you are using a storage location that holds a piece of data.</p>\n<ul class=\"options\">\n<li class=\"correct\">primitive variable</li>\n<li>reference variable</li>\n<li>numeric literal</li>\n<li>binary number</li>\n</ul>\n<blockquote>\n<p>使用 <span class=\"gap\"></span> 时，您使用的是一个存储数据的存储位置。</p>\n<ul class=\"options\">\n<li>基本变量 ✔️</li>\n<li>参考变量</li>\n<li>数字文字</li>\n<li>二进制数</li>\n</ul>\n</blockquote>\n</li>\n<li class=\"quiz\">\n<p>The following UML diagram entry  <code>setBalance(h : double) : void</code> ，this is a <span class=\"gap\"></span> method with a parameter of data type <span class=\"gap\"></span> and does not return a value.</p>\n<ul class=\"options\">\n<li class=\"correct\">public, double</li>\n<li>public, float</li>\n<li>private, float</li>\n<li>private, double</li>\n</ul>\n<blockquote>\n<p>UML 图条目是一个<span class=\"gap\"></span>方法，其参数类型为数据类型<span class=\"gap\"></span>，并且不返回值。</p>\n</blockquote>\n</li>\n<li class=\"quiz essay\">\n<p>Explain the feature of overload.</p>\n<blockquote>\n<p>解释重载的功能。<br />\nTwo or more methods in a class may have the same name and they have different parameter lists.<br />\n 一个类中的两个或多个方法可能具有相同的名称，并且具有不同的参数列表。</p>\n</blockquote>\n</li>\n<li class=\"quiz\">\n<p>What is wrong with the following code?</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ClassB</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">ClassA</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">ClassB</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\t<span class=\"token keyword\">int</span> init <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\t<span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span><span class=\"token number\">40</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul class=\"options\">\n<li>Nothing is wrong with the code.</li>\n<li>The method super is not defined.</li>\n<li class=\"correct\">The call to the method super must be the first statement in the constructor.</li>\n<li>No values may be passed to super.</li>\n</ul>\n<blockquote>\n<p>以下代码有什么问题？</p>\n<ul class=\"options\">\n<li>代码没有错。</li>\n<li>未定义方法 super。</li>\n<li>对方法 super 的调用必须是构造函数中的第一条语句。 ✔️</li>\n<li>不能将任何值传递给 super。</li>\n</ul>\n</blockquote>\n</li>\n<li class=\"quiz essay\">\n<p>补充下列代码，要求返回最大值</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">Public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> myList <span class=\"token punctuation\">(</span><span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token comment\">//return the greatest integer value in the ArrayList</span></pre></td></tr><tr class=\"marked\"><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token class-name\">Collections</span><span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></li>\n<li class=\"quiz essay\">\n<p>填写下列代码，实现参数值得交换。</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> list<span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tlist<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">66</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\tlist<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">44</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr class=\"marked\"><td data-num=\"5\"></td><td><pre>\t<span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tlist<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">22</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token keyword\">int</span> tmp <span class=\"token operator\">=</span> a<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\ta<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\ta<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">,</span> tmp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></li>\n</ol>\n",
            "tags": [
                "计算机科学",
                "Master of Software Engineering",
                "ITMD 510. Object-Oriented App Develop",
                "Java",
                "试题"
            ]
        },
        {
            "id": "https://shoka.lostyu.me/computer-science/mse/itmd-510/week-8/",
            "url": "https://shoka.lostyu.me/computer-science/mse/itmd-510/week-8/",
            "title": "Week 8. Collections",
            "date_published": "2020-10-17T12:11:42.000Z",
            "content_html": "<h1 id=\"notes\"><a class=\"anchor\" href=\"#notes\">#</a> Notes</h1>\n<h2 id=\"collections\"><a class=\"anchor\" href=\"#collections\">#</a> Collections</h2>\n<p>A Collection is a group of individual objects represented as a single unit.<br />\n 集合是一组表示为单个单元的单个对象。</p>\n<p>Java provides Collection Framework which defines several classes and interfaces to represent a group of objects as a single unit.<br />\nJava 提供了 Collection Framework，它定义了几个类和接口，来将一组对象表示为单个单元。</p>\n<p><img data-src=\"https://i.loli.net/2020/10/22/ktjd2m7MrBZl93s.png\" alt=\"\" /></p>\n<dl>\n<dt>Collection 集合</dt>\n<dd>Root interface with basic methods like  <code>add()</code> ,  <code>remove()</code> ,  <code>contains()</code> ,  <code>isEmpty()</code> ,  <code>addAll()</code> , ... etc.<br />\n 带有基本方法的根接口</dd>\n<dt>Set</dt>\n<dd>Doesn't allow duplicates.<br />\n 不允许重复。</dd>\n<dt>List</dt>\n<dd>Can contain duplicates and elements are ordered.<br />\n 可以包含重复项，并且元素是有序的。</dd>\n<dt>Queue 队列</dt>\n<dd>Typically order elements in FIFO order.<br />\n 通常以 FIFO 顺序对元素进行排序</dd>\n</dl>\n<h2 id=\"some-cool-applicabilities-using-collections\"><a class=\"anchor\" href=\"#some-cool-applicabilities-using-collections\">#</a> Some cool applicabilities using Collections</h2>\n<table>\n<tbody>\n<tr>\n<td>sorting</td>\n<td>shuffle</td>\n</tr>\n<tr>\n<td>reversing</td>\n<td>binarySearch</td>\n</tr>\n<tr>\n<td>auto copy</td>\n<td>rotate (shift elements by distance)</td>\n</tr>\n<tr>\n<td>frequency counter</td>\n<td></td>\n</tr>\n<tr>\n<td>comparing</td>\n<td></td>\n</tr>\n<tr>\n<td>lambdas</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"sorts-排序\"><a class=\"anchor\" href=\"#sorts-排序\">#</a> SORTS 排序</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// Java program to demonstrate working of Collections.sort() </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token operator\">*</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CollectionTest</span> <span class=\"token punctuation\">&#123;</span> </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token comment\">// Create a list of strings </span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> trendList <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        trendList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"data science\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        trendList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"digital forensics\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        trendList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cloud computing\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token comment\">/* Collections.sort method is sorting the </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        elements of ArrayList in ascending order. */</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token class-name\">Collections</span><span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span>trendList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token comment\">// Let us print the sorted list </span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"List after the use of\"</span> <span class=\"token operator\">+</span> </pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                            <span class=\"token string\">\" Collection.sort() :\\n\"</span> <span class=\"token operator\">+</span> trendList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> </pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>Output:</p>\n<pre><code>List after the use of Collection.sort() :\n[cloud computing, data science, digital forensics]\n</code></pre>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// Java program to demonstrate working of Collections.reverse() </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token comment\">// ::</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token class-name\">Collections</span><span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span>trendList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token class-name\">Collections</span><span class=\"token punctuation\">.</span><span class=\"token function\">reverse</span><span class=\"token punctuation\">(</span>trendList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>     </pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token comment\">// Let us print the sorted list </span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"List after the use of\"</span> <span class=\"token operator\">+</span> </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                            <span class=\"token string\">\" Collection.sort() :\\n\"</span> <span class=\"token operator\">+</span> trendList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>Output:</p>\n<pre><code>List after the use of Collection.reverse() :\n[digital forensics, data science, cloud computing]\n</code></pre>\n<h3 id=\"autocopy-n-copies\"><a class=\"anchor\" href=\"#autocopy-n-copies\">#</a> AUTOCOPY (n copies)</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// Create copies of some objects. </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\">List</span> list <span class=\"token operator\">=</span> <span class=\"token class-name\">Collections</span><span class=\"token punctuation\">.</span><span class=\"token function\">nCopies</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Java Power\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// Displaying the list returned </span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"The list returned is :\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token class-name\">Iterator</span> itr <span class=\"token operator\">=</span> list<span class=\"token punctuation\">.</span><span class=\"token function\">iterator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>itr<span class=\"token punctuation\">.</span><span class=\"token function\">hasNext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>itr<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span> </pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>Output:</p>\n<pre><code>The list returned is :\nJava Power Java Power Java Power Java Power \n</code></pre>\n<h3 id=\"frequency-counter\"><a class=\"anchor\" href=\"#frequency-counter\">#</a> FREQUENCY COUNTER</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// count the frequency of the words \"data science\" </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"The frequency of the word data science is: \"</span> <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>                    <span class=\"token class-name\">Collections</span><span class=\"token punctuation\">.</span><span class=\"token function\">frequency</span><span class=\"token punctuation\">(</span>trendList<span class=\"token punctuation\">,</span> <span class=\"token string\">\"data science\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>Output:</p>\n<pre><code>The frequency of the word data science is: 1\n</code></pre>\n<h3 id=\"comparators\"><a class=\"anchor\" href=\"#comparators\">#</a> COMPARATORS</h3>\n<ul>\n<li>\n<p>Interface allows <ins>multiple</ins> sorting sequences (ex. Name, id, and price, etc.)</p>\n</li>\n<li>\n<p>Uses  <code>compare()</code>  method to sort elements<br />\n <code>compare()</code>  takes 2 elements as arguments</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">compare</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Object</span> obj1<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span> obj2<span class=\"token punctuation\">)</span></pre></td></tr></table></figure></li>\n<li>\n<p>Comparator is found in  <code>java.util</code>  package.</p>\n</li>\n</ul>\n<h4 id=\"action-plan\"><a class=\"anchor\" href=\"#action-plan\">#</a> Action plan</h4>\n<ul>\n<li>Create a class to implement the interface</li>\n<li>Use  <code>Arrays.sort</code>  to sort the class objects</li>\n</ul>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>example</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Dog</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token keyword\">int</span> size<span class=\"token punctuation\">,</span> weight<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">Dog</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> s<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> w<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\tsize <span class=\"token operator\">=</span> s<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\tweight <span class=\"token operator\">=</span> w<span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">DogSizeComparator</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Comparator</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Dog</span><span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre> \t<span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">compare</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Dog</span> o1<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Dog</span> o2<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> o1<span class=\"token punctuation\">.</span>size <span class=\"token operator\">-</span> o2<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">DogWeightComparator</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Comparator</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Dog</span><span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre> \t<span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">compare</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Dog</span> o1<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Dog</span> o2<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> o1<span class=\"token punctuation\">.</span>weight <span class=\"token operator\">-</span> o2<span class=\"token punctuation\">.</span>weight<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ArraySort</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre> \t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t\t<span class=\"token class-name\">Dog</span> d1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Dog</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t\t<span class=\"token class-name\">Dog</span> d2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Dog</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\t<span class=\"token class-name\">Dog</span> d3 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Dog</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">40</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre> </pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\t<span class=\"token class-name\">Dog</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> dogArray <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>d1<span class=\"token punctuation\">,</span> d2<span class=\"token punctuation\">,</span> d3<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t\t<span class=\"token function\">printDogs</span><span class=\"token punctuation\">(</span>dogArray<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t\t<span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span>dogArray<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DogSizeComparator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t\t<span class=\"token function\">printDogs</span><span class=\"token punctuation\">(</span>dogArray<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t\t<span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span>dogArray<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DogWeightComparator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t\t<span class=\"token function\">printDogs</span><span class=\"token punctuation\">(</span>dogArray<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre> \t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">printDogs</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Dog</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> dogs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Dog</span> d<span class=\"token operator\">:</span> dogs<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"size=\"</span><span class=\"token operator\">+</span>d<span class=\"token punctuation\">.</span>size <span class=\"token operator\">+</span> <span class=\"token string\">\" weight=\"</span> <span class=\"token operator\">+</span> </pre></td></tr><tr><td data-num=\"41\"></td><td><pre>                  d<span class=\"token punctuation\">.</span>weight <span class=\"token operator\">+</span> <span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre> \t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>Output:</p>\n<pre><code>size=2 weight=50 size=1 weight=30 size=3 weight=40 \nsize=1 weight=30 size=2 weight=50 size=3 weight=40 \nsize=1 weight=30 size=3 weight=40 size=2 weight=50 \n</code></pre>\n<h2 id=\"queue-interface\"><a class=\"anchor\" href=\"#queue-interface\">#</a> Queue Interface</h2>\n<p>The Queue interface is available in  <code>java.util</code>  package and extends the Collection interface.<br />\nQueue 接口在 <code>java.util</code>  包中可用，并且扩展了 Collection 接口。</p>\n<p>The queue collection is used to hold the elements about to be processed and provides various operations like the insertion, removal etc.<br />\n 队列集合用于保存将要处理的元素，并提供各种操作，如插入，删除等。</p>\n<p>It is an ordered list of objects with its use limited to insert elements at the end of the list and deleting elements from the start of list i.e. it follows the FIFO or the First-In-First-Out principle.<br />\n 它是对象的有序列表，其使用仅限于在列表末尾插入元素，并从头开始删除元素，即遵循 FIFO 或先进先出原则。</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>Queue example: Implements LinkedList</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">LinkedList</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Queue</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">QueueExample</span>  <span class=\"token punctuation\">&#123;</span> </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre> </pre></td></tr><tr class=\"marked\"><td data-num=\"7\"></td><td><pre>    <span class=\"token class-name\">Queue</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> q <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">LinkedList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token comment\">// Adds elements &#123;0, 1, 2, 3, 4&#125; to queue </span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span><span class=\"token number\">5</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr class=\"marked\"><td data-num=\"11\"></td><td><pre>     q<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token comment\">// Display contents of the queue. </span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Elements of queue-\"</span><span class=\"token operator\">+</span>q<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token comment\">// To remove the head of queue. </span></pre></td></tr><tr class=\"marked\"><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">int</span> removedele <span class=\"token operator\">=</span> q<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"removed element-\"</span> <span class=\"token operator\">+</span> removedele<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>q<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token comment\">// To view the head of queue </span></pre></td></tr><tr class=\"marked\"><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">int</span> head <span class=\"token operator\">=</span> q<span class=\"token punctuation\">.</span><span class=\"token function\">peek</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"head of queue-\"</span> <span class=\"token operator\">+</span> head<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"25\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token comment\">//Show queue size </span></pre></td></tr><tr class=\"marked\"><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">int</span> size <span class=\"token operator\">=</span> q<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Size of queue-\"</span> <span class=\"token operator\">+</span> size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"29\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span> </pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"map-interface\"><a class=\"anchor\" href=\"#map-interface\">#</a> Map Interface</h2>\n<dl>\n<dt>Map</dt>\n<dd>general key/value<br />\nmap interface</dd>\n<dt>HashMap</dt>\n<dd>most widely<br />\nused Map<br />\nHashMap does <ins>not</ins> allow duplicate keys however it <ins>allows</ins> to have duplicate values.</dd>\n</dl>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>Implementation example: Map generic type interface</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Collection</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HashMap</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Map</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Set</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> states <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// store values in map</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>states<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ca\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"California\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>states<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"az\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Arizona\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>states<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mn\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Minnesota\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>states<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"nj\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"New Jersey\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\">// retrieve values from map</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>states<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ca\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// returns \"California\"</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>states<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"nj\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// returns \"New Jersey\"</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\">// Pull out live Collection of all the values.</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token class-name\">Collection</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> values <span class=\"token operator\">=</span> states<span class=\"token punctuation\">.</span><span class=\"token function\">values</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>values<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [Minnesota, New Jersey,… Arizona] </span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\">// Use keySet to pull out live set of the keys -- use to print key->value for the whole map. </span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\">// The order of the keys is random for a HashSet.</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token class-name\">Set</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> keys <span class=\"token operator\">=</span> states<span class=\"token punctuation\">.</span><span class=\"token function\">keySet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> key<span class=\"token operator\">:</span>keys<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>key <span class=\"token operator\">+</span> <span class=\"token string\">\"->\"</span> <span class=\"token operator\">+</span> states<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><img data-src=\"https://i.loli.net/2020/11/01/W49TofPk1nGvJOH.png\" alt=\"\" /></p>\n<p>Output:</p>\n<pre><code>mn-&gt;Minnesota\nnj-&gt;New Jersey\nca-&gt;The Golden State \naz-&gt;Arizona \n</code></pre>\n",
            "tags": [
                "计算机科学",
                "Master of Software Engineering",
                "ITMD 510. Object-Oriented App Develop",
                "Java"
            ]
        },
        {
            "id": "https://shoka.lostyu.me/computer-science/mse/itmd-534/midterm-exam/",
            "url": "https://shoka.lostyu.me/computer-science/mse/itmd-534/midterm-exam/",
            "title": "Midterm Exam",
            "date_published": "2020-10-17T07:00:26.000Z",
            "content_html": "<h1 id=\"重点\"><a class=\"anchor\" href=\"#重点\">#</a> 重点</h1>\n<h2 id=\"尼尔森十大可用性原则\"><a class=\"anchor\" href=\"#尼尔森十大可用性原则\">#</a> <a href=\"/computer-science/mse/itmd-534/lecture-4/#10-basic-principles-%E5%B0%BC%E5%B0%94%E6%A3%AE%E5%8D%81%E5%A4%A7%E5%8F%AF%E7%94%A8%E6%80%A7%E5%8E%9F%E5%88%99\">尼尔森十大可用性原则</a></h2>\n<div class=\"note info\">\n<p>参考链接：<br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC9kMTJkNzI1MzQ2MTU=\">尼尔森的十大可用性原则 —Jakob Nielsen</span></p>\n</div>\n<p>尼尔森十大原则由毕业于哥本哈根的人机交互学博士 Jakob Nielsen 发表，Jakob Nielsen 对人机交互有很多研究，他提出十大可用性原则，用来评价用户体验的好坏，每个产品设计者都可以根据这十大原则进行自查。</p>\n<h3 id=\"1️⃣-visibility-of-system-status\"><a class=\"anchor\" href=\"#1️⃣-visibility-of-system-status\">#</a> 1️⃣ Visibility of system status</h3>\n<p>系统可见性原则<br />\n<img data-src=\"https://i.loli.net/2020/10/17/jJWHtdPelbhBkw2.jpg\" alt=\"\" /><br />\n保持界面的状态可见，变化可见，内容可见。<br />\n让用户知道发生了什么，在适当的时间内做出适当的反馈。 比如用户在网页上的任何操作，不论是单击、滚动还是按下键盘，页面应即时给出反馈。<br />\n<img data-src=\"https://i.loli.net/2020/10/17/gfxvD68XLa5okI3.jpg\" alt=\"\" /><br />\n原文写的 feedback within reasonable time，那么这个 “reasonable time” 是多久呢？<br />\n也就是 用户可以接受的等待时间，如果我点击这个按钮等待了 2～3 秒的时间还没有做出反应，那么就是难以接受的。</p>\n<h3 id=\"2️⃣-match-between-system-and-the-real-world\"><a class=\"anchor\" href=\"#2️⃣-match-between-system-and-the-real-world\">#</a> 2️⃣ Match between system and the real world</h3>\n<p>贴近场景原则<br />\n<img data-src=\"https://i.loli.net/2020/10/17/pBfNoXn52tsWcFg.jpg\" alt=\"\" /><br />\n用用户的语言、用词、短语和用户熟悉的概念，而不是系统术语。<br />\n功能操作符合用户的使用场景。</p>\n<h3 id=\"3️⃣-user-control-and-freedom\"><a class=\"anchor\" href=\"#3️⃣-user-control-and-freedom\">#</a> 3️⃣ User control and freedom</h3>\n<p>可控性原则<br />\n<img data-src=\"https://i.loli.net/2020/10/17/zg2YnXaAtcUHGrs.jpg\" alt=\"\" /><br />\n用户经常错误地选择系统功能，而且需要明确标识离开这个的 “出口”。<br />\n比如支持撤销和重做的功能。</p>\n<h3 id=\"4️⃣-consistency-and-standards\"><a class=\"anchor\" href=\"#4️⃣-consistency-and-standards\">#</a> 4️⃣ Consistency and standards</h3>\n<p>一致性和标准化原则<br />\n<img data-src=\"https://i.loli.net/2020/10/17/17PCOBcbGm9oudD.jpg\" alt=\"\" /><br />\n用户不必怀疑是否不同的语言，不同的情景，或者不同的操作产生的结果实际上是同一件事情。遵循平台的惯例。也就是，同一用语、功能、操作保持一致。</p>\n<h3 id=\"5️⃣-error-prevention\"><a class=\"anchor\" href=\"#5️⃣-error-prevention\">#</a> 5️⃣ Error prevention</h3>\n<p>防错原则<br />\n<img data-src=\"https://i.loli.net/2020/10/17/bG5tO1h4Fkfgiya.jpg\" alt=\"\" /><br />\n比出现错误信息提示更好的是，更用心的设计防止这类问题发生。在用户选择动作发生之前，就要防止用户容易混淆或者错误的选择。<br />\n对于网页来说：通过网页的设计、重组或特别安排，防止用户出错。</p>\n<h3 id=\"6️⃣-recognition-rather-than-recall\"><a class=\"anchor\" href=\"#6️⃣-recognition-rather-than-recall\">#</a> 6️⃣ Recognition rather than recall</h3>\n<p>协助记忆原则<br />\n<img data-src=\"https://i.loli.net/2020/10/17/ULFkv5SV1OlwhBi.jpg\" alt=\"\" /><br />\n尽量减少用户对操作目标的记忆负荷，动作和选项都应该是可见的。<br />\n用户不必记住一个页面到另一个页面的信息。<br />\n系统的使用说明应该是可见的或者是容易获取的。<br />\n好记性不如烂笔头。<br />\n尽可能减少用户回忆负担，把需要记忆的内容摆上台面。</p>\n<p><img data-src=\"https://i.loli.net/2020/10/17/NCus2ZLQdzjVRm1.jpg\" alt=\"\" /><br />\n这也说了交互的一部分，比如填完表单，下一步应该生成表单，而不是下一步就是完成。</p>\n<h3 id=\"7️⃣-flexibility-and-efficiency-of-use\"><a class=\"anchor\" href=\"#7️⃣-flexibility-and-efficiency-of-use\">#</a> 7️⃣ Flexibility and efficiency of use</h3>\n<p>灵活高效原则<br />\n<img data-src=\"https://i.loli.net/2020/10/17/i4UxTF5t7wB6PNI.jpg\" alt=\"\" /><br />\n加速器－新用户是看不到的－也许专业用户也会经常察觉，系统可以满足有经验和无经验的用户。<br />\n允许用户进行频繁的操作。<br />\n这就要求开发者的开发技巧，更加便捷灵活的代码和反馈，优化再优化。<br />\n现在大多数网页的做法是：<br />\n中级用户的数量远高于初级和高级用户数。<br />\n为大多数用户设计，不要低估，也不可轻视，保持灵活高效。</p>\n<h3 id=\"8️⃣-aesthetic-and-minimalist-design\"><a class=\"anchor\" href=\"#8️⃣-aesthetic-and-minimalist-design\">#</a> 8️⃣ Aesthetic and minimalist design</h3>\n<p>审美和简约设计，易扫原则<br />\n<img data-src=\"https://i.loli.net/2020/10/17/JTnXWjO52QZgGNU.jpg\" alt=\"\" /><br />\n对话中不应该包含无关紧要的信息。<br />\n在段落中每增加一个单位的重要信息，就意味着要减少相应的弱化一些其他信息。<br />\n现在大多数网页的做法是：<br />\n互联网用户浏览网页的动作不是读，不是看，而是扫。<br />\n易扫，意味着突出重点，弱化和剔除无关信息。</p>\n<h3 id=\"9️⃣-help-users-recognize-diagnose-and-recover-from-errors\"><a class=\"anchor\" href=\"#9️⃣-help-users-recognize-diagnose-and-recover-from-errors\">#</a> 9️⃣ Help users recognize, diagnose, and recover from errors</h3>\n<p>容错原则<br />\n<img data-src=\"https://i.loli.net/2020/10/17/qgn7fG1Ybrm2xvh.jpg\" alt=\"\" /><br />\n错误信息应该用语言表达（不要用代码），较准确地反应问题所在，并且提出一个建设性的解决方案。<br />\n大多数流通的翻译是针对网页的：<br />\n帮助用户从错误中恢复，将损失降到最低。<br />\n如果无法自动挽回，则提供详尽的说明文字和指导方向，而非代码，比如 404。</p>\n<h3 id=\"help-and-documentation\"><a class=\"anchor\" href=\"#help-and-documentation\">#</a> 🔟 Help and documentation</h3>\n<p>人性化帮助原则<br />\n<img data-src=\"https://i.loli.net/2020/10/17/ZKWzlaM9UpIsymO.jpg\" alt=\"\" /><br />\n如果系统不使用文档是最好的，但是有必要提供帮助和文档。任何信息应容易去搜索，专注于用户的任务，列出具体的步骤来进行。</p>\n<p>帮助性提示最好的方式是：</p>\n<ol>\n<li>无需提示；</li>\n<li>一次性提示；</li>\n<li>常驻提示；</li>\n<li>帮助文档。</li>\n</ol>\n<h2 id=\"affordance-功能可见性\"><a class=\"anchor\" href=\"#affordance-功能可见性\">#</a> <a href=\"/computer-science/mse/itmd-534/lecture-1/#affordances-%E5%8A%9F%E8%83%BD%E5%8F%AF%E8%A7%81%E6%80%A7\">Affordance 功能可见性</a></h2>\n<div class=\"note info\">\n<p>参考链接：<br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC9kMDU1ZDJiNTYzNjY=\">世界顶尖大师的设计法则 NO.5 “功能可见性”</span></p>\n</div>\n<p>一些物品或环境会比其他的更适合某些功能。</p>\n<p>如果物品或环境的功能可见性符合人们的感官预期，那么这种设计就会被充分接纳，也有这高使用率，同时会被认为易于操作。<br />\n反之，当物品或环境的功能可见性与其预期功能相抵触，那么设计出来的产品就不会有很高的接纳率和使用率，同时也会被认为难以操作。</p>\n<p>“功能可见性” 只能说明物品或环境的特性。如果使用实体物品或环境的图像（例如按钮的图像），图像本身本不具备任何功能。按钮的功能可见性只是来自于使用者脑海中关于实体按钮的经验，不是图像的性质。因此，其功能可见性可谓是 “被理解” 而来。</p>\n<div class=\"note info\">\n<p>参考链接：<br />\n<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy53b3NoaXBtLmNvbS91Y2QvMTA2NDY2NC5odG1s\">功能可见性在用户界面中的使用</span></p>\n</div>\n<p>根据专家的说法，术语 “功能可见性” 指的是事物被感知到的和实际的属性，主要是那些决定事物该如何被使用的基本属性。<br />\n功能可见性对事物运作提供了强有力的线索。平板是用来推的。旋钮是用来转动的。插槽是用来插入东西的。球是用来投掷或弹跳的。<br />\n当功能可见性被利用得当时，用户只需看一眼就知道该做什么，不再需要额外的图片、标签或指令。</p>\n<h2 id=\"韦伯定律\"><a class=\"anchor\" href=\"#韦伯定律\">#</a> <a href=\"/computer-science/mse/itmd-534/lecture-5/#webers-law\">韦伯定律</a></h2>\n<div class=\"note info\">\n<p>参考链接：<br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8yMjg0NzUxMQ==\">【译文】影响设计决策的 4 个心理学定律之三：韦伯定律</span><br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZG91YmFuLmNvbS9ub3RlLzUwNjI3MDkzNC8=\">韦伯定律和费希纳定律（Weber-Fechner Law)</span></p>\n</div>\n<p>韦伯定律，德国生理学家 E.H. 韦伯通过对重量差别感觉的研究发现的一条定律，即感觉的差别阈限随原来刺激量的变化而变化，而且表现为一定的规律性，刺激的增量 (△I) 和原来刺激值 (I) 的比是一个常数 (K)，用公式表达即 K=△I/I，这个常数叫韦伯常数、韦伯分数或韦伯比率。</p>\n<p>韦伯定律表明：同一刺激差别量必须达到一定比例，才能引起差别感觉。<br />\n韦伯定律是心理量和物理量之间关系的定律。<br />\n可察觉的差别就是 “以最小量的（物理）刺激强度变化产生明显的感官体验上的变化。”</p>\n<p><img data-src=\"https://i.loli.net/2020/10/17/PD82E5vtm6yRQpC.png\" alt=\"\" /></p>\n<p>事物的细微变化，不会导致明显的不同。<br />\n心理学已经证明我们不喜欢改变或变化，尤其是较大的剧烈变化。</p>\n<p>UX 设计原则：<strong>渐进和微妙的重新设计</strong>。</p>\n<p>即使网站有设计更新也不要一下子放出来，可以有计划的逐步改变各种设计元素，然后在这个过程中收集用户反馈。如果需要发布重大的设计改版，先将其中的一小部分发给用户测试一下。先看一下用户的反应，这会影响到我们怎么为一般用户推出新的设计。</p>\n<h2 id=\"菲兹定律\"><a class=\"anchor\" href=\"#菲兹定律\">#</a> <a href=\"/computer-science/mse/itmd-534/lecture-5/#paul-morris-fittss-law\">菲兹定律</a></h2>\n<div class=\"note info\">\n<p>参考链接：<br />\n<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy53b3NoaXBtLmNvbS9wZC80MTg0MDQyLmh0bWwjdG9jLTE=\">交互设计定律的 7 个法则：菲茨定律：距离与大小</span><br />\n<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy53b3NoaXBtLmNvbS9wZC80MTIxNTI3Lmh0bWw=\">设计法则： 4 个步骤带你了解菲茨定律（费茨法则）</span></p>\n</div>\n<p>菲兹定律在交互设计上主要作用是：</p>\n<ol>\n<li>降低操作复杂度 —— 通过改变对象的尺寸</li>\n<li>提高效率 —— 改变对象距离光标的位置</li>\n</ol>\n<p><img data-src=\"https://i.loli.net/2020/10/17/RsxCl7opYmhc3Ww.png\" alt=\"\" /></p>\n<h2 id=\"响应式设计\"><a class=\"anchor\" href=\"#响应式设计\">#</a> <a href=\"/computer-science/mse/itmd-534/lecture-5/#responsive-design-%E5%93%8D%E5%BA%94%E5%BC%8F%E8%AE%BE%E8%AE%A1\">响应式设计</a></h2>\n<div class=\"note info\">\n<p>参考链接：<br />\n<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy53b3NoaXBtLmNvbS9wZC80MTgzMDM2Lmh0bWw=\">从四个层面归纳响应式设计</span><br />\n<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy53b3NoaXBtLmNvbS9pdC8xMjkwNzUuaHRtbA==\">响应式设计的现状与趋势</span></p>\n</div>\n<h2 id=\"metaphor-隐喻设计\"><a class=\"anchor\" href=\"#metaphor-隐喻设计\">#</a> Metaphor 隐喻设计</h2>\n<div class=\"note info\">\n<p>参考链接：<br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuemhpaHUuY29tL3F1ZXN0aW9uLzI3MDQ1Mzk4\">怎么用隐喻设计引导用户？</span><br />\n<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy53b3NoaXBtLmNvbS91Y2QvMTA4OTg1Ni5odG1s\">三种界面交互类型，四种隐喻设计方法</span><br />\n<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy53b3NoaXBtLmNvbS91Y2QvMTI2OTgwMC5odG1s\">深度解析：APP 界面设计中的隐喻</span></p>\n</div>\n<p>隐喻，英文（metaphor）是一个古老的词汇，在希腊文中原意 “转换”。</p>\n<p>希腊辞源 “μετά meta”（之间）及 “φέρω phero”（带有）之意，暗指 “将意义由某事物转移侧（至）另一事物”。而现代对隐喻的定义则更为深刻，从一种修辞手段转变为认知工具。</p>\n<p>隐喻设计可以将现实生活中用户熟悉的事物，以多种形式映射到界面中，从而使用户不熟悉的概念、陌生且复杂的操作等，变得熟悉与简单。</p>\n<h2 id=\"鼠标-各种电脑的历史\"><a class=\"anchor\" href=\"#鼠标-各种电脑的历史\">#</a> <a href=\"/computer-science/mse/itmd-534/lecture-1/#history\">鼠标、各种电脑的历史</a></h2>\n<h2 id=\"启发式评估\"><a class=\"anchor\" href=\"#启发式评估\">#</a> <a href=\"/computer-science/mse/itmd-534/lecture-4/\">启发式评估</a></h2>\n<div class=\"note info\">\n<p>参考链接：<br />\n<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy53b3NoaXBtLmNvbS9wZC8xMTY3MjIuaHRtbA==\">如何进行可用性启发式评估</span><br />\n<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy53b3NoaXBtLmNvbS9wZC8yMTM2NjYwLmh0bWw=\">一套完整的评估测试策略 —— 启发式评估</span><br />\n<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy53b3NoaXBtLmNvbS9wZC8zMTcyMzM3Lmh0bWw=\">测试产品可用性的关键技巧 —— 启发式评估</span></p>\n</div>\n<p>启发式评估是指安排一组评估人员检查界面，并判断其是否与公认的可用性原则相符（“启发法”）。”— Jakob Nielsen</p>\n<p>启发式评估是指一个流程，在这个流程中，评估人员，也就是用户体验专家，浏览网站的界面、执行一系列操作，从而找出可用性问题，进而修复问题，让用户体验更流畅。</p>\n<h2 id=\"visibility\"><a class=\"anchor\" href=\"#visibility\">#</a> <a href=\"/computer-science/mse/itmd-534/lecture-1/#visibility-%E5%8F%AF%E8%A7%81%E5%B8%83%E5%B1%80\">visibility</a>，<a href=\"/computer-science/mse/itmd-534/lecture-1/#mapping-%E6%98%A0%E5%B0%84\">mapping</a>，<a href=\"/computer-science/mse/itmd-534/lecture-1/#affordances-%E5%8A%9F%E8%83%BD%E5%8F%AF%E8%A7%81%E6%80%A7\">an affordance</a>，<a href=\"/computer-science/mse/itmd-534/lecture-1/#feedback-%E5%8F%8D%E9%A6%88\">feedback</a> 的定义和区别</h2>\n<div class=\"note info\">\n<p>参考链接：<br />\n<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5jc3VuLmVkdS9zY2llbmNlL2NvdXJzZXMvNjcxL2JpYmxpb2dyYXBoeS9wcmVlY2UuaHRtbA==\">Summary of Don Norman's Design Principles</span></p>\n</div>\n<dl>\n<dt>Visibility 可见布局</dt>\n<dd>The more visible functions are, the more likely users will be able to know what to do next. Incontrast, when functions are &quot;out of sight,&quot; it makes them more difficult to find and know how to use.<br />\n 功能越可见，用户越有可能知道下一步该怎么做。相反，当 “看不见” 功能时，会使它们更难找到和知道如何使用。</dd>\n<dt>Feedback 反馈</dt>\n<dd>Feedback is about sending back information about what action has been done and what has been accomplished, allowing the person to continue with the activity. Various kinds of feedback are available for interaction design-audio, tactile, verbal, and combinations of these.<br />\n 反馈是关于发回有关已执行的操作和已完成的操作的信息的信息，使该人可以继续进行该活动。各种反馈可用于交互设计 - 音频，触觉，语言和这些的组合。</dd>\n<dt>Constraints 约束</dt>\n<dd>The design concept of constraining refers to determining ways of restricting the kind of user interaction that can take place at a given moment. There are various ways this can be achieved.<br />\n 约束的设计概念是指确定限制在给定时刻可能发生的用户交互类型的方式。有多种方法可以实现。</dd>\n<dt>Mapping 映射</dt>\n<dd>This refers to the relationship between controls and their effects in the world. Nearly all artifacts need some kind of mapping between controls and effects, whether it is a flashlight, car, power plant, or cockpit. An example of a good mapping between control and effect is the up and down arrows used to represent the up and down movement of the cursor, respectively, on a computer keyboard.<br />\n 指控件及其在世界上的效果之间的关系。几乎所有的工件都需要在控件和效果之间进行某种映射，无论是手电筒，汽车，发电厂还是驾驶舱。控制和效果之间良好映射的一个示例是向上和向下箭头，分别用于表示光标在计算机键盘上的向上和向下移动。</dd>\n<dt>Consistency 一致性</dt>\n<dd>This refers to designing interfaces to have similar operations and use similar elements for achieving similar tasks. In particular, a consistent interface is one that follows rules, such as using the same operation to select all objects. For example, a consistent operation is using the same input action to highlight any graphical object at the interface, such as always clicking the left mouse button. Inconsistent interfaces, on the other hand, allow exceptions to a rule.<br />\n 这是指将界面设计为具有相似的操作，并使用相似的元素来完成相似的任务。特别是，一致的接口是遵循规则的接口，例如使用相同的操作选择所有对象。例如，一致的操作使用相同的输入操作来突出显示界面上的任何图形对象，例如始终单击鼠标左键。另一方面，不一致的接口允许规则例外。</dd>\n<dt>Affordance 功能可见</dt>\n<dd>is a term used to refer to an attribute of an object that allows people to know how to use it. For example, a mouse button invites pushing (in so doing acting clicking) by the way it is physically constrained in its plastic shell. At a very simple level, to afford means &quot;to give a clue&quot; (Norman, 1988). When the affordances of a physical object are perceptually obvious it is easy to know how to interact with it.<br />\n 是用于指代对象的属性的术语，该属性使人们知道如何使用它。例如，鼠标按钮通过物理上被限制在其塑料外壳中的方式来邀请按下（这样做是执行点击动作）。从一个非常简单的层面上讲，支付意味着 “给出线索”（Norman，1988）。当物理对象的承受能力在感知上很明显时，很容易知道如何与之交互。</dd>\n</dl>\n<h1 id=\"单词表\"><a class=\"anchor\" href=\"#单词表\">#</a> 单词表</h1>\n<table>\n<thead>\n<tr>\n<th>单词</th>\n<th>翻译</th>\n<th>单词</th>\n<th>翻译</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Multiple Choice Questions</td>\n<td>单项选择题</td>\n<td>responsive</td>\n<td>响应</td>\n</tr>\n<tr>\n<td>evaluation</td>\n<td>评估</td>\n<td>engine</td>\n<td>引擎</td>\n</tr>\n<tr>\n<td>heuristic</td>\n<td>启发式的</td>\n<td>optimization</td>\n<td>优化</td>\n</tr>\n<tr>\n<td>judge</td>\n<td>判断</td>\n<td>invented</td>\n<td>发明</td>\n</tr>\n<tr>\n<td>experts</td>\n<td>专家</td>\n<td>metaphors</td>\n<td>隐喻，比喻</td>\n</tr>\n<tr>\n<td>usability</td>\n<td>可用性</td>\n<td>underlying</td>\n<td>潜在的，底层的</td>\n</tr>\n<tr>\n<td>guidelines</td>\n<td>指引，指南</td>\n<td>conceptual</td>\n<td>概念</td>\n</tr>\n<tr>\n<td>conducts</td>\n<td>组织</td>\n<td>accessibility</td>\n<td>易接近；可亲；可以得到</td>\n</tr>\n<tr>\n<td>experiment</td>\n<td>实验</td>\n<td>particularly</td>\n<td>特别是；明确地</td>\n</tr>\n<tr>\n<td>psychologists</td>\n<td>心理学专家</td>\n<td>measuring</td>\n<td>测量</td>\n</tr>\n<tr>\n<td>questionnaire</td>\n<td>问卷</td>\n<td>satisfaction</td>\n<td>满意，满足</td>\n</tr>\n<tr>\n<td>expertise</td>\n<td>专业知识</td>\n<td>accelerators</td>\n<td>加速器</td>\n</tr>\n<tr>\n<td>folder</td>\n<td>文件夹</td>\n<td>shortcuts</td>\n<td>快捷方式</td>\n</tr>\n<tr>\n<td>contents</td>\n<td>内容</td>\n<td>complete</td>\n<td>完成</td>\n</tr>\n<tr>\n<td>animation</td>\n<td>动画</td>\n<td>distance</td>\n<td>距离</td>\n</tr>\n<tr>\n<td>appears</td>\n<td>出现</td>\n<td>elevator</td>\n<td>电梯</td>\n</tr>\n<tr>\n<td>screen</td>\n<td>屏幕</td>\n<td>rationale</td>\n<td>基本原理</td>\n</tr>\n<tr>\n<td>interaction</td>\n<td>交互</td>\n<td>automobile</td>\n<td>汽车</td>\n</tr>\n<tr>\n<td>narrative</td>\n<td>叙述</td>\n<td>panel</td>\n<td>仪表盘</td>\n</tr>\n<tr>\n<td>represents</td>\n<td>代表</td>\n<td>interface</td>\n<td>界面</td>\n</tr>\n<tr>\n<td>particular</td>\n<td>特殊的</td>\n<td>justification</td>\n<td>理由；辩护</td>\n</tr>\n<tr>\n<td>average</td>\n<td>平均</td>\n<td>alternatives</td>\n<td>替代选择，备选方案</td>\n</tr>\n<tr>\n<td>enables</td>\n<td>使能够</td>\n<td>sensory</td>\n<td>感觉</td>\n</tr>\n<tr>\n<td>functions</td>\n<td>功能，函数</td>\n<td>engineered</td>\n<td>设计</td>\n</tr>\n<tr>\n<td>numeric</td>\n<td>数值</td>\n<td>medium</td>\n<td>方法</td>\n</tr>\n<tr>\n<td>redundant</td>\n<td>多余的</td>\n<td>interpreter</td>\n<td>解释器</td>\n</tr>\n<tr>\n<td>logical</td>\n<td>逻辑的</td>\n<td>dexterity</td>\n<td>敏捷</td>\n</tr>\n<tr>\n<td>constraint</td>\n<td>约束</td>\n<td>enhance</td>\n<td>增加</td>\n</tr>\n<tr>\n<td>retainability</td>\n<td>可维持性</td>\n<td>semantic</td>\n<td>语义</td>\n</tr>\n<tr>\n<td>competition</td>\n<td>竞争</td>\n<td>acceptance</td>\n<td>接纳；赞同</td>\n</tr>\n</tbody>\n</table>\n",
            "tags": [
                "计算机科学",
                "Master of Software Engineering",
                "ITMD 534. Human Computer Interaction",
                "人机交互"
            ]
        },
        {
            "id": "https://shoka.lostyu.me/computer-science/mse/itmd-534/lecture-5/",
            "url": "https://shoka.lostyu.me/computer-science/mse/itmd-534/lecture-5/",
            "title": "Lecture 5. Mobile Usability",
            "date_published": "2020-10-11T10:31:28.000Z",
            "content_html": "<h1 id=\"different-from-pcs-or-web\"><a class=\"anchor\" href=\"#different-from-pcs-or-web\">#</a> Different from PCs or web</h1>\n<ul>\n<li>Immediate requests<br />\n 立即要求</li>\n<li>Short interactions, frequently interrupted<br />\n 互动简短，经常被打断</li>\n<li>Public use<br />\n 公共用途</li>\n<li>Fashion statement<br />\n 时尚宣言\n<ul>\n<li>Less business-oriented<br />\n 较少以业务为导向</li>\n<li>More value to design<br />\n 更具设计价值</li>\n</ul>\n</li>\n<li>Little engagement<br />\n 很少参与</li>\n<li>Must always be able to answer the phone<br />\n 必须始终能够接听电话</li>\n</ul>\n<h1 id=\"mobile-first\"><a class=\"anchor\" href=\"#mobile-first\">#</a> Mobile first</h1>\n<p>Consultants recommend web sites designed for mobile first<br />\n 建议为移动设备优先设计的网站</p>\n<ul>\n<li>Understand users' most important tasks<br />\n 了解用户最重要的任务</li>\n<li>Focus on key elements<br />\n 专注于关键要素</li>\n<li>Harder to get a good user experience<br />\n 难以获得良好的用户体验</li>\n<li>Easier to spread out and add menu items, etc. versus removing them<br />\n 与删除菜单项相比，更易于展开和添加菜单项等</li>\n<li>More demands on responsiveness<br />\n 对响应能力的更多要求</li>\n<li>Interaction limitations –no hover capability<br />\n 互动限制 - 不要悬停功能</li>\n</ul>\n<h2 id=\"focus-on-navigation-or-content\"><a class=\"anchor\" href=\"#focus-on-navigation-or-content\">#</a> Focus on navigation or content</h2>\n<p class=\"gallery\" data-height=\"220\"><img data-src=\"https://i.loli.net/2020/10/12/JdVMK94oEWqFDT2.jpg\" alt=\"\" /><br />\n<img data-src=\"https://i.loli.net/2020/10/12/UDwXC6RFot3yn2m.jpg\" alt=\"\" /></p>\n<h1 id=\"responsive-design-响应式设计\"><a class=\"anchor\" href=\"#responsive-design-响应式设计\">#</a> Responsive Design 响应式设计</h1>\n<ul>\n<li>Web sites adjust themselves based on size of screen<br />\n 网站会根据屏幕大小自行调整</li>\n<li>Programmed into the html of each page<br />\n 编程到每个页面的 html 中\n<ul>\n<li>Mobile vs. desktop versions<br />\n 移动版与台式机版</li>\n<li>Vs. providing different pages based on browser/device request<br />\nVs. 根据浏览器 / 设备请求提供不同的页面</li>\n</ul>\n</li>\n<li>Html and CSS have built-in features<br />\nHTML 和 CSS 内置有响应式功能</li>\n<li>Dreamweaver, etc. let you design for different ranges of sizes<br />\nDreamweaver 等可让您设计不同的尺寸范围</li>\n<li>Fewer options &amp; elements (faster downloading)<br />\n 更少的选项和元素（更快的下载）</li>\n<li>Designed for smaller screen<br />\n 专为较小的屏幕而设计</li>\n<li>Responsive design works better for search-engine optimization (SEO)<br />\n 自适应设计更适合搜索引擎优化（SEO）<br />\npc 版和移动版可以使用同一个 URL 地址</li>\n</ul>\n<h1 id=\"human-abilities\"><a class=\"anchor\" href=\"#human-abilities\">#</a> Human abilities</h1>\n<p>Human considered to be a…<br />\n 人类被认为是……</p>\n<ol>\n<li>\n<p>Sensory processor<br />\n 感官处理器</p>\n<ul>\n<li>Experimental psych, sensory psych<br />\n 实验心理，感觉心理</li>\n<li>e.g. Model--Human Processor (Card, Moran &amp; Newell)<br />\n 模型 - 人为处理器</li>\n</ul>\n</li>\n<li>\n<p>Interpreter/Predictor<br />\n 解释器 / 预测器</p>\n<ul>\n<li>Cognitive psych, AI<br />\n 认知心理，人工智能</li>\n<li>e.g. Distributed cognition (Hutchins)<br />\n 分布式认知</li>\n</ul>\n</li>\n<li>\n<p>Actor in environment<br />\n 环境中的活动者</p>\n<ul>\n<li>Activity theory, ethnography<br />\n 活动理论，人种志</li>\n<li>e.g. Situated action (Suchman)<br />\n 情景动作</li>\n<li>e.g. Activity theory (Vygotsky, Nardi)<br />\n 活动理论</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"what-makes-a-system-usable\"><a class=\"anchor\" href=\"#what-makes-a-system-usable\">#</a> What makes a system usable</h2>\n<table>\n<thead>\n<tr>\n<th>\n<p>Human Considered to be a ..<br />\n 人类被认为是...</p>\n</th>\n<th>\n<p>Usability results when the system ..<br />\n 系统的可用性结果...</p>\n</th>\n<th>\n<p>Evaluation methods..<br />\n 评价方法</p>\n</th>\n</tr>\n<tbody>\n<tr>\n<td>\n<p>Sensory Processor<br />\n 感官处理器</p>\n</td>\n<td>\n<p>Fits within human limits<br />\n 符合人类限制</p>\n</td>\n<td>\n<p>Quantitative Experiments<br />\n 定量试验</p>\n</td>\n</tr>\n<tr>\n<td>\n<p>Interpretor/Predictor<br />\n 解释器 / 预测器</p>\n</td>\n<td>\n<p>Fits with knowledge<br />\n 符合认知</p>\n</td>\n<td>\n<p>Task Analysis,Contextual Inquiry<br />\n 任务分析，情境调查</p>\n</td>\n</tr>\n<tr>\n<td>\n<p>Actor in environment<br />\n 环境中的活动者</p>\n</td>\n<td>\n<p>Fits with task and social context<br />\n 适合任务和社交环境</p>\n</td>\n<td>\n<p>Ethnographic field work, Participatory design<br />\n 人种学领域工作，参与式设计</p>\n</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"two-views-of-interaction\"><a class=\"anchor\" href=\"#two-views-of-interaction\">#</a> Two views of interaction</h2>\n<p>互动的两种观点</p>\n<ul>\n<li>Interaction with\n<ul>\n<li>Software system is a tool or machine<br />\n 软件系统是工具还是机器</li>\n<li>Interface is a usability--engineered membrane<br />\n 界面是易用性 - 工程膜</li>\n<li>Human as processor and Interpreter models<br />\n 人作为处理器和解释器模型</li>\n</ul>\n</li>\n<li>Interaction through<br />\n 通过互动\n<ul>\n<li>Software as a medium used to interact with task object and other people<br />\n 软件作为媒介，与任务对象及其他人进行互动</li>\n<li>Interface plays a role in social context<br />\n 界面在社交环境中发挥作用</li>\n<li>Human as interpreter and actor<br />\n 人作为解释器和活动者</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"human-capabilities\"><a class=\"anchor\" href=\"#human-capabilities\">#</a> Human capabilities</h1>\n<table>\n<thead>\n<tr>\n<th>\n<p>Senses<br />\n 感官</p>\n</th>\n<th>\n<p>Information Processing<br />\n 信息处理</p>\n</th>\n<th>\n<p>Motor Systems<br />\n 电机系统</p>\n</th>\n</tr>\n<tbody>\n<tr>\n<td>Vision</td>\n<td>Perceptual</td>\n<td>Physical abilities</td>\n</tr>\n<tr>\n<td>Hearing</td>\n<td>Cognitive</td>\n<td>Reach</td>\n</tr>\n<tr>\n<td>Touch</td>\n<td>Memory</td>\n<td>Speed</td>\n</tr>\n<tr>\n<td>Smell</td>\n<td>-Short Term</td>\n<td></td>\n</tr>\n<tr>\n<td>Taste</td>\n<td>-Medium Term</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>-Long Term</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>Processes</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>-Selective attention</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>-Learning</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>-Problem Solving</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>-Language</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"senses\"><a class=\"anchor\" href=\"#senses\">#</a> Senses</h2>\n<ul>\n<li>Sight, Hearing, Touch important for current HCI.<br />\n 视觉，听觉，触觉对于当前的人机交互非常重要。\n<ul>\n<li>Smell, Taste ???<br />\n 闻起来，味道？？？</li>\n</ul>\n</li>\n<li>Abilities and limitations affect design<br />\n 能力和局限性影响设计</li>\n</ul>\n<p>Key concepts of senses:<br />\n 感官的关键概念</p>\n<ul>\n<li>Just noticeable differences<br />\n 只是明显的差异\n<ul>\n<li>How much of a change in stimulus is needed before it can be sensed<br />\n 需要多少刺激才能感测到</li>\n<li>Tends to be logarithmic – Weber's law<br />\n 倾向于对数 - 韦伯定律</li>\n</ul>\n</li>\n<li>Magnitude of physical stimulus vs perceived magnitude<br />\n 物理刺激的幅度与感知的幅度\n<ul>\n<li>Doubling number of photons does not double perceived intensity<br />\n 光子数量加倍不会使感知强度加倍</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"webers-law\"><a class=\"anchor\" href=\"#webers-law\">#</a> Weber's law</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cua2hhbmFjYWRlbXkub3JnL3Rlc3QtcHJlcC9tY2F0L3Byb2Nlc3NpbmctdGhlLWVudmlyb25tZW50L3NlbnNvcnktcGVyY2VwdGlvbi92L3dlYmVycy1sYXctYW5kLXRocmVzaG9sZHM=\">Video: Weber's law and thresholds</span></p>\n<p><div class=\"media-container\"><div class=\"player\" data-type=\"video\" data-src='[{\"name\":\"Weber’s law and thresholds\",\"url\":\"https://cdn.kastatic.org/ka-youtube-converted/O_nY1TM2RZM.mp4/O_nY1TM2RZM.mp4#t=0\"}]'></div></div></p>\n<h2 id=\"vision\"><a class=\"anchor\" href=\"#vision\">#</a> Vision</h2>\n<ul>\n<li>Visual System<br />\n 视觉系统\n<ul>\n<li>Eye 眼睛</li>\n<li>Retina 视网膜</li>\n<li>Neural Pathway 神经通路</li>\n</ul>\n</li>\n<li>About 180º of arc 约 180º 弧度</li>\n<li>Light reception happens in retina (back of eye)<br />\n 光接收发生在视网膜（眼后）</li>\n<li>Fovea (highest-resolution area)<br />\n 中央凹（最高分辨率区域）</li>\n<li>Just 2º of arc<br />\n 仅 2º 弧度</li>\n<li>75% of visual operations<br />\n 视觉操作的 75％</li>\n<li>Not like a camera; doesn’t take the whole picture at once<br />\n 不像照相机； 不能一次拍摄全部照片</li>\n</ul>\n<h3 id=\"visual-abilities\"><a class=\"anchor\" href=\"#visual-abilities\">#</a> Visual abilities</h3>\n<ul>\n<li>\n<p>Sensitivity 灵敏度</p>\n<ul>\n<li>Luminance 10 –107 ml (miliambert)<br />\n 亮度 10 –107 毫升</li>\n</ul>\n</li>\n<li>\n<p>Acuity 敏锐度</p>\n<ul>\n<li>Detection, Alignment, Recognition<br />\n 检测，对准，识别</li>\n<li>Retinal position –Fovea has best acuity<br />\n 视网膜位置–视力最强</li>\n</ul>\n</li>\n<li>\n<p>Movement 运动</p>\n<ul>\n<li>Tracking, Reading, Vibrations<br />\n 跟踪，阅读，振动</li>\n</ul>\n</li>\n<li>\n<p>Implications 含义</p>\n<ul>\n<li>Font size and location depend on task<br />\n 字体大小和位置取决于任务</li>\n<li>Much done by context and grouping<br />\n 通过情景和分组来完成很多工作</li>\n</ul>\n</li>\n<li>\n<p>Retina has 视网膜有</p>\n<ul>\n<li>6.5 M cones (color vision), mostly at the fovea<br />\n6.5 M 视锥细胞（彩色视觉），主要在中央凹处</li>\n<li>About 150,000 cones per square millimeter<br />\n 每平方毫米约 150,000 个圆锥</li>\n<li>Fewer blue sensing cones than red and green at the fovea<br />\n 中央凹处的蓝色感应锥体比红色和绿色少</li>\n<li>100 M rods (night vision), spread over the retina –none at the fovea<br />\n100 M 杆（夜视），散布在视网膜上–中央凹处无</li>\n</ul>\n</li>\n<li>\n<p>Adaptation 适应</p>\n</li>\n<li>\n<p>Switching between dark and light causes fatigue<br />\n 在黑暗和明亮之间切换会导致疲劳</p>\n</li>\n</ul>\n<h3 id=\"color-vision\"><a class=\"anchor\" href=\"#color-vision\">#</a> Color vision</h3>\n<p><img data-src=\"https://i.loli.net/2020/10/13/h3XsdDKzbUp4xqO.jpg\" alt=\"\" /></p>\n<ul>\n<li>Color and the retina\n<ul>\n<li>380nm (blue) ~ 770nm (red)</li>\n<li>Problems with cones or ganglion cells causes problems with color perception</li>\n<li>(Not really &quot;color blindness&quot;)</li>\n<li>8% males, 0.5% females</li>\n</ul>\n</li>\n<li>Implications 含义\n<ul>\n<li>Avoid saturated colors 避免色彩饱和</li>\n<li>Color coding should be redundant when possible 颜色编码应尽可能冗余</li>\n</ul>\n</li>\n</ul>\n<p><img data-src=\"https://i.loli.net/2020/10/13/Xb7Gy8eLNYQtcjl.jpg\" alt=\"\" /></p>\n<h2 id=\"paul-morris-fittss-law\"><a class=\"anchor\" href=\"#paul-morris-fittss-law\">#</a> Paul Morris Fitts's Law</h2>\n<ul>\n<li>The bigger an object and the closer it is to us, the easier it is to move to.<br />\n 物体越大，离我们越近，移动起来就越容易。\n<ul>\n<li>Fitts's law can be used as an aid to make educated decisions on the size and placement of user interface elements.<br />\n 菲茨定律可以帮助做出有关用户界面元素的大小和位置的明智决定。</li>\n</ul>\n</li>\n<li>Fitts's law is centered around a mathematical equation that is used to illustrate the time it takes to reach a target object.<br />\n 菲茨定律以数学方程式为中心，该数学方程式用于说明到达目标物体所需的时间。</li>\n</ul>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>T</mi><mo>=</mo><mi>a</mi><mo>+</mo><mi>b</mi><msub><mo><mi>log</mi><mo>⁡</mo></mo><mn>2</mn></msub><mo fence=\"true\">(</mo><mn>2</mn><mo>∗</mo><mfrac><mi>D</mi><mi>W</mi></mfrac><mo fence=\"true\">)</mo></mrow><annotation encoding=\"application/x-tex\">T = a + b \\log_{2} \\Biggl( 2 \\ast \\frac{D}{W} \\Biggr)\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.0000299999999998em;vertical-align:-1.25003em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\"><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.20696799999999996em;\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.24414em;\"><span></span></span></span></span></span></span><span class=\"mopen\"><span class=\"delimsizing size4\">(</span></span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.0000299999999998em;vertical-align:-1.25003em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.36033em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\"><span class=\"delimsizing size4\">)</span></span></span></span></span></span></p>\n<blockquote>\n<ul>\n<li>T <strong>Time</strong> is the amount of time required to complete the movement<br />\n 是完成移动所需的时间</li>\n<li><strong>a</strong> is the human reaction time and <strong>b</strong> is the time needed by human nervous system to process a bit of information<br />\n<strong>a</strong> 是人类的反应时间，而<strong> b</strong> 是人类神经系统处理一些信息所需的时间</li>\n<li>D <strong>Distance</strong> is a measurement from the starting point to the end point (target object)<br />\n 距离是从起点到终点（目标对象）的量度</li>\n<li>W <strong>Width</strong> is the width of the target object<br />\n 是目标对象的宽度</li>\n</ul>\n</blockquote>\n<h2 id=\"memory\"><a class=\"anchor\" href=\"#memory\">#</a> Memory</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1iU3ljZEl4LUM0OCZhbXA7YWJfY2hhbm5lbD1DcmFzaENvdXJzZQ==\">How We Make Memories: Crash Course Psychology #13</span></p>\n<p><div class=\"video-container\"><iframe src=\"https://www.youtube.com/embed/bSycdIx-C48\" frameborder=\"0\" loading=\"lazy\" allowfullscreen></iframe></div></p>\n",
            "tags": [
                "计算机科学",
                "Master of Software Engineering",
                "ITMD 534. Human Computer Interaction",
                "人机交互"
            ]
        },
        {
            "id": "https://shoka.lostyu.me/computer-science/mse/itmd-510/week-7/",
            "url": "https://shoka.lostyu.me/computer-science/mse/itmd-510/week-7/",
            "title": "Week 7. Generic Classes",
            "date_published": "2020-10-09T03:41:21.000Z",
            "content_html": "<h1 id=\"notes\"><a class=\"anchor\" href=\"#notes\">#</a> Notes</h1>\n<h2 id=\"generic-classes-and-methods\"><a class=\"anchor\" href=\"#generic-classes-and-methods\">#</a> Generic Classes and Methods</h2>\n<p>Generics <ins>add</ins> <span class=\"red\">stability</span> and <span class=\"red\">code efficiency</span> to your code work.<br />\n 泛型为编程工作增加了稳定性和编码效率。</p>\n<p>A generic class or method is one whose definition uses a placeholder for one or more of the types it works with.<br />\n 泛型类或方法是一种其定义使用占位符的类或方法。</p>\n<p>The placeholder is really a type parameter.<br />\n 占位符实际上是一个类型参数。</p>\n<p>For a generic class, the actual type argument is specified when an object of the generic class is being instantiated.<br />\n 对于泛型类，当实例化该泛型类的对象时，将指定实际的类型实参。</p>\n<p>For a generic method, the compiler deduces the actual type argument from the type of data being passed to the method.<br />\n 对于泛型方法，编译器从传递给方法的数据类型中推导实际的类型参数。</p>\n<h3 id=\"why-use-generics\"><a class=\"anchor\" href=\"#why-use-generics\">#</a> Why Use Generics?</h3>\n<p>In a nutshell, generics enable types (classes and interfaces) to be parameters when defining classes, interfaces, and methods.<br />\n 简而言之，泛型在定义类、接口和方法时，使类型（类和接口）成为参数。</p>\n<p>Type parameters provide a way for you to reuse the same code with different inputs.<br />\n 类型参数提供了一种在不同的输入中重用相同代码的方法。</p>\n<p>Code that uses generics has many benefits over nongeneric code:<br />\n 与非泛型代码相比，使用泛型的代码有很多好处：</p>\n<ul>\n<li>Stronger type checks at compile time.<br />\n 在编译时进行更强大的类型检查。<br />\nA Java compiler applies strong type checking to generic code and issues errors if the code violates type safety.<br />\nJava 编译器对泛型代码进行强类型检查，如果代码违反类型安全，则会发出错误。<br />\nFixing compile-time errors is easier than fixing runtime errors, which can be difficult to find.<br />\n 修复编译时错误比修复运行时错误容易，后者可能很难找到。</li>\n<li>Elimination of casts.<br />\n 消除强制转换。<br />\nThe following nongeneric code snippet requires casting:<br />\n 以下非泛型代码段需要强制转换：<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">List</span> list <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>list<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token class-name\">String</span> s <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">)</span> list<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure>When rewritten using generics, the code does not require casting:<br />\n 使用泛型重写时，代码不需要强制转换：<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> list <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>list<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token class-name\">String</span> s <span class=\"token operator\">=</span> list<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// no cast</span></pre></td></tr></table></figure></li>\n<li>The ability to implement generic algorithms.<br />\n 实现泛型算法的能力。<br />\nBy using generics, programmers can implement generic algorithms that work on collections of different types, can be customized, and are type safe and easier to read.<br />\n 通过使用泛型，程序员可以实现泛型算法，以处理不同类型的集合，可以对其进行自定义，并且类型安全，且易于阅读。<br />\n<img data-src=\"https://i.loli.net/2020/10/22/fpBKjHlJNuYLnaV.png\" alt=\"\" /></li>\n</ul>\n<h2 id=\"stacks-堆栈\"><a class=\"anchor\" href=\"#stacks-堆栈\">#</a> Stacks 堆栈</h2>\n<p>A Stack is a Last In First Out (LIFO) data structure.<br />\n 堆栈是后进先出（LIFO）数据结构。</p>\n<p>It supports two basic operations called push and pop.<br />\n 它支持两个基本操作，称为推入和弹出。</p>\n<p>The push operation adds an element at the top of the stack, and the pop operation removes an element from the top of the stack.<br />\n 推操作在堆栈顶部添加一个元素，而弹出操作从堆栈顶部移除一个元素。</p>\n<p><img data-src=\"https://i.loli.net/2020/10/22/L5JETRaHqz8ovyi.png\" alt=\"\" /></p>\n<p>Use cases: Consider a stack of books in inventory, stack of trays, etc.<br />\n 用例：考虑一堆库存的书籍，一叠托盘等。<br />\n<img data-src=\"https://i.loli.net/2020/10/22/HCakDBFfALYQPWe.png\" alt=\"\" title=\"Stack Class example in Java – Inventory problem\nJava中的堆栈类示例——库存问题\" /></p>\n<p>A stack is a linear collection which allows adding or removing elements from the same end (the top).<br />\n 堆栈是线性集合，允许从同一端（顶部）添加或删除元素。</p>\n<p>Stack elements are processed in a last in, first out (LIFO) manner.<br />\n 堆栈元素以后进先出（LIFO）的方式处理。</p>\n<p>In contrast, a queue is a collection where elements are processed in a first in, first out (FIFO) manner.<br />\n 相反，队列是一个集合，其中以先进先出（FIFO）的方式处理元素。</p>\n<p>Note that, stacks and queues have restrictions on how the elements can be accessed.<br />\n 请注意，堆栈和队列对如何访问元素有限制。</p>\n<h3 id=\"lifo-vs-fifo\"><a class=\"anchor\" href=\"#lifo-vs-fifo\">#</a> LIFO vs. FIFO?</h3>\n<p>Consider the following accounting example comparing LIFO and FIFO.<br />\n 考虑下面的结算示例，比较 LIFO 和 FIFO。</p>\n<p>Suppose we bought 5 identical computers at prices: $400, $400, $500, $500, $600; and then we sold 3 of them for $800 each.<br />\n 假设我们以价格分别购买了 5 台相同的计算机：$400, $400, $500, $500, $600； 然后我们以每台 $800 的价格出售了其中的三台。</p>\n<p>What is the profit?<br />\n 利润是多少？<br />\nWhat is the value of the inventory?<br />\n 库存的价值是多少？</p>\n<p>The answer depends on which computers were sold.<br />\n 答案取决于出售的计算机。</p>\n<p>Although the computers are physically identical, their accounting values are different.<br />\n 尽管这些计算机在物理上是相同的，但是其结算价值却不同。</p>\n<p>The following are different calculations using FIFO and LIFO accounting.<br />\n 以下是使用 FIFO 和 LIFO 结算的不同计算。</p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>LIFO</th>\n<th>FIFO</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>\n<p>Costs of Sold<br />\n 销售成本</p>\n</td>\n<td>\n<p>600 + 500 + 500 = 1600</p>\n</td>\n<td>\n<p>400 + 400 + 500 = 1300</p>\n</td>\n</tr>\n<tr>\n<td>\n<p>Profit<br />\n 利润</p>\n</td>\n<td>\n<p>2400 – 1600 = 800</p>\n</td>\n<td>\n<p>2400 – 1300 = 1100</p>\n</td>\n</tr>\n<tr>\n<td>\n<p>Inventory<br />\n 库存</p>\n</td>\n<td>\n<p>400 + 400 = 800</p>\n</td>\n<td>\n<p>500 + 600 = 1100</p>\n</td>\n</tr>\n<tr>\n<td>\n<p>Revenue+Inventory<br />\n 收入 + 库存</p>\n</td>\n<td>\n<p>2400 + 800 = 3200</p>\n</td>\n<td>\n<p>2400 + 1100 = 3500</p>\n</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"demo\"><a class=\"anchor\" href=\"#demo\">#</a> demo</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>Stack.java</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Stack</span> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> count<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> data<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre> </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Stack</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        data <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        count <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre> </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">void</span> <span class=\"token function\">expandCapacity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        data <span class=\"token operator\">=</span> <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">copyOf</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">.</span>length <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre> </pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">void</span> <span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> e<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>count <span class=\"token operator\">==</span> data<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token function\">expandCapacity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        data<span class=\"token punctuation\">[</span>count<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> e<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre> </pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token class-name\">String</span> <span class=\"token function\">pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>count <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Exception</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"stack empty\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        count<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token keyword\">return</span> data<span class=\"token punctuation\">[</span>count<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre> </pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token keyword\">boolean</span> <span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token keyword\">return</span> count <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre> </pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token keyword\">int</span> <span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token keyword\">return</span> count<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre> </pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        <span class=\"token class-name\">Stack</span> s <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Stack</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>        s<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Alice\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        s<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Bob\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        s<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Carl\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        s<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Dave\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre> </pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>s<span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span><span class=\"token function\">pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>Generic Stack.java</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">StackGeneric</span> <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> count<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">T</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> data<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre> </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">StackGeneric</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        data <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        count <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre> </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">void</span> <span class=\"token function\">expandCapacity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        data <span class=\"token operator\">=</span> <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">copyOf</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">.</span>length <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre> </pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">void</span> <span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">T</span> e<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>count <span class=\"token operator\">==</span> data<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token function\">expandCapacity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        data<span class=\"token punctuation\">[</span>count<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> e<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre> </pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token class-name\">T</span> <span class=\"token function\">pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>count <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Exception</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"stack empty\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        count<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token keyword\">return</span> data<span class=\"token punctuation\">[</span>count<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre> </pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token keyword\">boolean</span> <span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token keyword\">return</span> count <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre> </pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token keyword\">int</span> <span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token keyword\">return</span> count<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre> </pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        <span class=\"token class-name\">StackGeneric</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> s <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">StackGeneric</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>        s<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Alice\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        s<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Bob\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        s<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Carl\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        s<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Dave\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>        <span class=\"token class-name\">StackGeneric</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> i <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">StackGeneric</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        i<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>        i<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token number\">22</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre></pre></td></tr><tr><td data-num=\"56\"></td><td><pre> </pre></td></tr><tr><td data-num=\"57\"></td><td><pre>        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>s<span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span><span class=\"token function\">pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "计算机科学",
                "Master of Software Engineering",
                "ITMD 510. Object-Oriented App Develop",
                "Java"
            ]
        },
        {
            "id": "https://shoka.lostyu.me/computer-science/mse/itmd-534/lecture-4/",
            "url": "https://shoka.lostyu.me/computer-science/mse/itmd-534/lecture-4/",
            "title": "Lecture 4. Heuristic Evaluation",
            "date_published": "2020-10-02T10:11:26.000Z",
            "content_html": "<h1 id=\"what-is-heuristic-evaluation\"><a class=\"anchor\" href=\"#what-is-heuristic-evaluation\">#</a> What is Heuristic Evaluation</h1>\n<p>启发式评估</p>\n<ul>\n<li>\n<p>Performed by an Expert<br />\n 由专家进行</p>\n</li>\n<li>\n<p>Steps</p>\n<ul>\n<li>Inspect UI thoroughly<br />\n 彻底检查用户界面</li>\n<li>Compare UI against heuristics<br />\n 启发式地比较用户界面</li>\n<li>List usability problems<br />\n 列出可用性问题</li>\n<li>Explain and justify each problem with heuristics<br />\n 用启发式方法解释并论证每个问题</li>\n<li>Provide a possible solution to the identified issue<br />\n 为已发现的问题提供可能的解决方案</li>\n</ul>\n</li>\n<li>\n<p>Method</p>\n<ul>\n<li>Expert evaluates the user interface using guidelines<br />\n 专家根据准则评估用户界面</li>\n<li>Usability &quot;inspection&quot; method<br />\n 可用性 “检查” 方法\n<ul>\n<li>Depends on evaluator's judgment<br />\n 取决于评估者的判断</li>\n</ul>\n</li>\n<li>Is a &quot;discount&quot; usability engineering method<br />\n 是 “折扣” 可用性工程方法\n<ul>\n<li>One case study found factor of 48 in cost/benefit:<br />\n 研究发现成本 / 收益比为 48\n<ul>\n<li>Cost of inspection: $10,500. Benefit: $500,000 (Nielsen, 1994)<br />\n 检查费用：$ 10,500。 收益：$ 500,000</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"how-to-do-heuristic-evaluation\"><a class=\"anchor\" href=\"#how-to-do-heuristic-evaluation\">#</a> How to do Heuristic Evaluation</h1>\n<p>如何进行启发式评估</p>\n<ul>\n<li>Systematic inspection of system<br />\n 系统检查</li>\n<li>Multiple evaluators are better<br />\n 多个评估者为佳</li>\n<li>Trained evaluators are better<br />\n 训练有素的评估者为佳\n<ul>\n<li>22% vs. 41% vs. 60% of errors found</li>\n</ul>\n</li>\n<li>Go through whole interface<br />\n 贯穿整个界面</li>\n<li>Result: list of problems, guidelines violated, and proposed fixes<br />\n 结果：问题清单，违反的准则，以及修正建议</li>\n</ul>\n<h2 id=\"he-is-not-ut\"><a class=\"anchor\" href=\"#he-is-not-ut\">#</a> HE is not UT</h2>\n<ul>\n<li>Evaluator is not the user<br />\n 评估者不是用户</li>\n<li>Analogy: Code inspection Vs Testing<br />\n 类比：代码检查与测试</li>\n<li>HE often finds problems that UT misses<br />\nHE 经常发现 UT 遗漏的问题\n<ul>\n<li>Inconsistent fonts<br />\n 字体不一致</li>\n<li>Size and distance (Fitt's law problems)<br />\n 大小和距离（菲特定律问题）</li>\n</ul>\n</li>\n<li>But UT is standard for usability<br />\n 但是 UT 是可用性的标准</li>\n</ul>\n<h2 id=\"how-many-evaluators-需要几位评估者\"><a class=\"anchor\" href=\"#how-many-evaluators-需要几位评估者\">#</a> How many Evaluators 需要几位评估者</h2>\n<p>Nielsen suggests optimal might be 4</p>\n<p class=\"gallery\" data-height=\"220\"><img data-src=\"https://i.loli.net/2020/10/06/9fn74soRxWjCNEA.jpg\" alt=\"\" /><br />\n<img data-src=\"https://i.loli.net/2020/10/06/KpCimZIcTGVXwQu.jpg\" alt=\"\" /></p>\n<h2 id=\"he-methodology-方法论\"><a class=\"anchor\" href=\"#he-methodology-方法论\">#</a> HE Methodology 方法论</h2>\n<ul>\n<li>Reference: Nielsen's <span class=\"exturl\" data-url=\"aHR0cDovL3d3dy51c2VpdC5jb20vcGFwZXJzL2hldXJpc3RpYy9oZXVyaXN0aWNfZXZhbHVhdGlvbi5odG1s\">&quot;How to Conduct a Heuristic Evaluation&quot;</span><br />\n 如何进行启发式评估\n<ul>\n<li>Each evaluator inspects interface separately<br />\n 每个评估员分别检查界面</li>\n<li>OK for designer to answer evaluator's questions<br />\n 可以让设计师回答评估者的问题</li>\n<li>Go through interface several times using heuristics<br />\n 使用启发式方法多次浏览界面</li>\n<li>Can supply evaluators with scenarios of user tasks<br />\n 可以为评估人员提供用户任务方案</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"guidelines-guide-design-准则指导设计\"><a class=\"anchor\" href=\"#guidelines-guide-design-准则指导设计\">#</a> Guidelines guide design 准则指导设计</h2>\n<ul>\n<li>Knowing these guidelines should improve your designs<br />\n 了解这些准则，可以改善你的设计</li>\n<li>Take them into account to avoid violating them<br />\n 考虑到这些，避免再次违规</li>\n<li>Also, all the other guidelines<br />\n 此外，所有其他准则\n<ul>\n<li>Guidelines for mobile, international, web etc.<br />\n 移动，国际，网络等准则</li>\n</ul>\n</li>\n<li>Neilsen evaluated 60 old guidelines (in 2005) and found 90% still valid after 20 years<br />\n2005 年 Neilsen 评估了 60 条旧指南，发现 90％在 20 年后仍然有效\n<ul>\n<li>Others no longer relevant, only 2 were &quot;wrong&quot;</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy51c2VpdC5jb20vYWxlcnRib3gvMjAwNTAxMTcuaHRtbA==\">http://www.useit.com/alertbox/20050117.html</span></li>\n<li>Similarly with web guidelines: <span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5ubmdyb3VwLmNvbS9hcnRpY2xlcy91c2FiaWxpdHktZ3VpZGVsaW5lcy1jaGFuZ2Uv\">http://www.nngroup.com/articles/usability-guidelines-change/</span></li>\n</ul>\n</li>\n</ul>\n<h1 id=\"10-basic-principles-尼尔森十大可用性原则\"><a class=\"anchor\" href=\"#10-basic-principles-尼尔森十大可用性原则\">#</a> 10 Basic Principles 尼尔森十大可用性原则</h1>\n<p>From Nielsen's web page: <span class=\"exturl\" data-url=\"aHR0cDovL3d3dy51c2VpdC5jb20vcGFwZXJzL2hldXJpc3RpYy9oZXVyaXN0aWNfbGlzdC5odG1s\">http://www.useit.com/papers/heuristic/heuristic_list.html</span></p>\n<ol>\n<li>Visibility of system status<br />\n 系统状态的可见性</li>\n<li>Match between system and the real world<br />\n 系统与现实世界之间的匹配，环境贴切原则</li>\n<li>User control and freedom<br />\n 用户的控制性和自由度</li>\n<li>Consistency and standards<br />\n 一致性和标准化</li>\n<li>Error prevention<br />\n 错误预防</li>\n<li>Recognition rather than recall<br />\n 识别，而不是记忆</li>\n<li>Flexibility and efficiency of use<br />\n 灵活性和使用效率</li>\n<li>Aesthetic and minimalist design<br />\n 美观和简约的设计</li>\n<li>Help users recognize, diagnose, and recover from errors<br />\n 帮助用户识别，诊断错误，并从错误中恢复</li>\n<li>Help and Documentation<br />\n 帮助和文档</li>\n</ol>\n<h2 id=\"1️⃣-visibility-of-system-status\"><a class=\"anchor\" href=\"#1️⃣-visibility-of-system-status\">#</a> 1️⃣ Visibility of System Status</h2>\n<p>系统状态的可见性</p>\n<ul>\n<li>Keep users informed about what is going on<br />\n 让用户知道发生了什么事</li>\n<li>What page they are on and what part of a process<br />\n 他们在什么页面上以及过程的哪个部分</li>\n<li>Provide appropriate feedback<br />\n 提供适当的反馈\n<ul>\n<li>About what system is doing, and how input is being interpreted<br />\n 关于系统在做什么，以及输入如何被解析</li>\n<li>E.g. in XXX product, 例如 在 XXX 产品中，\n<ul>\n<li>&quot;really ungroup?&quot; “真的要取消分组？”</li>\n<li>loses associated behavior 失去相关行为</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p class=\"gallery\" data-height=\"220\"><img data-src=\"https://i.loli.net/2020/10/06/VWlRmYXdfoB6yJQ.jpg\" alt=\"\" /><br />\n<img data-src=\"https://i.loli.net/2020/10/06/VnIYxb72u3s8hRH.jpg\" alt=\"\" /></p>\n<h2 id=\"2️⃣-match-between-system-and-the-real-world\"><a class=\"anchor\" href=\"#2️⃣-match-between-system-and-the-real-world\">#</a> 2️⃣ Match between System And the Real World</h2>\n<p>系统与现实世界之间的匹配，环境贴切原则</p>\n<ul>\n<li>Terminology in user's language<br />\n 术语基于用户语言\n<ul>\n<li>Not computer terminology<br />\n 不是计算机术语</li>\n</ul>\n</li>\n<li>Language from user's perspective<br />\n 用户角度的语言\n<ul>\n<li>&quot;You have bought…&quot; not &quot;We have sold you…&quot;<br />\n“您买了……” 而不是 “我们卖给了您……”</li>\n</ul>\n</li>\n<li>Use common words,not &quot;techno-jargon&quot;<br />\n 使用常用字词，不要使用 “技术术语”</li>\n<li>Error messages and feedback refer to user objects<br />\n 错误消息和反馈涉及用户对象</li>\n<li>Allow full-length names<br />\n 允许使用全名</li>\n<li>E.g. &quot;Hit any key to continue&quot;<br />\n 例如 “按任意键继续”</li>\n</ul>\n<p class=\"gallery\" data-height=\"220\"><img data-src=\"https://i.loli.net/2020/10/06/b6LPTUZYamQzSj5.jpg\" alt=\"\" /><br />\n<img data-src=\"https://i.loli.net/2020/10/06/m5uMzrYilP9xSpZ.jpg\" alt=\"\" /><br />\n<img data-src=\"https://i.loli.net/2020/10/06/svqjH1fyzhDXlnI.jpg\" alt=\"\" /><br />\n<img data-src=\"https://i.loli.net/2020/10/06/UNbwLDa1rQIm9Ys.jpg\" alt=\"\" /></p>\n<h2 id=\"3️⃣-user-control-and-freedom\"><a class=\"anchor\" href=\"#3️⃣-user-control-and-freedom\">#</a> 3️⃣ User Control and Freedom</h2>\n<p>用户的控制性和自由度</p>\n<ul>\n<li>Easy to abort: Cancel buttons<br />\n 容易中止：取消按钮\n<ul>\n<li>Cancel order, cancel changing a profile<br />\n 取消订单，取消更改个人资料</li>\n</ul>\n</li>\n<li>Easy to Undo<br />\n 容易撤消\n<ul>\n<li>Web issue: what does &quot;Back&quot; button do?<br />\n 网络问题：“返回” 按钮有什么作用？\n<ul>\n<li>Example: many sites can get confused if use back button<br />\n 示例：如果使用 “后退” 按钮，许多网站可能会感到困惑</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Users (even experts) will make errors<br />\n 用户（甚至专家）都会出错</li>\n<li>E.g. in XXX product,<br />\n 例如 在 XXX 产品中，\n<ul>\n<li>no way to get out of editing a text field<br />\n 没有退出编辑文本字段的方法</li>\n</ul>\n</li>\n</ul>\n<p class=\"gallery\" data-height=\"220\"><img data-src=\"https://i.loli.net/2020/10/06/oWrqBGlsVAH4Y8S.jpg\" alt=\"\" /><br />\n<img data-src=\"https://i.loli.net/2020/10/06/QBlsz6GVimH8u9R.jpg\" alt=\"\" /></p>\n<h2 id=\"4️⃣-consistency-and-standards\"><a class=\"anchor\" href=\"#4️⃣-consistency-and-standards\">#</a> 4️⃣ Consistency and Standards</h2>\n<p>一致性和标准化</p>\n<ul>\n<li>Same command always have the same effect<br />\n 相同的命令始终具有相同的效果</li>\n<li>Locations for information, names of commands<br />\n 信息位置，命令名称</li>\n<li>Give the user a mental model of the system<br />\n 为用户提供系统的心理模型</li>\n<li>Size, location, color, wording, function, sequencing, etc.<br />\n 大小，位置，颜色，措辞，功能，排序等。\n<ul>\n<li>E.g., color purple?<br />\n 例如，紫色？</li>\n</ul>\n</li>\n<li>Following standards helps<br />\n 遵循标准有助于\n<ul>\n<li>Web: use templates or CSS, style guides<br />\n 网络：使用模板或 CSS，样式指南</li>\n</ul>\n</li>\n<li>Seems easy, but often not followed; e.g. in XXX<br />\n 似乎很容易，但常常没有遵循； 例如 在 XXX 中\n<ul>\n<li>naming &quot;F#1.C#1&quot; vs. &quot;F#1&quot;, &quot;C#1&quot;<br />\n 命名方式：“F＃1.C＃1” VS.“F＃1”，“C＃1”</li>\n<li>consistent with industry standards: e.g., Copy<br />\n 符合行业标准：例如，复制</li>\n</ul>\n</li>\n</ul>\n<p class=\"gallery\" data-height=\"220\"><img data-src=\"https://i.loli.net/2020/10/06/lqkg3NSvbOPZ2a8.png\" alt=\"\" /><br />\n<img data-src=\"https://i.loli.net/2020/10/06/iXm2OQbkC4AVZxo.jpg\" alt=\"\" /><br />\n<img data-src=\"https://i.loli.net/2020/10/06/3MlS1d9FOPYsiNE.jpg\" alt=\"\" /></p>\n<h2 id=\"5️⃣-error-prevention\"><a class=\"anchor\" href=\"#5️⃣-error-prevention\">#</a> 5️⃣ Error Prevention</h2>\n<p>错误预防</p>\n<ul>\n<li>Selection rather than entry<br />\n 选择而不是输入\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5FeHBlZGlhLmNvbQ==\">www.Expedia.com</span>: question, when ambiguous city (e.g. Columbus)<br />\n 问题，当城市模棱两可时（例如哥伦布）</li>\n</ul>\n</li>\n<li>Remove or gray-out illegal choices<br />\n 删除或灰化非法选择\n<ul>\n<li>Not common for web pages<br />\n 网页不常见</li>\n</ul>\n</li>\n<li>Auto-fill in<br />\n 自动填写</li>\n<li>Confirmation<br />\n 确认</li>\n<li>Avoid modes<br />\n 避免模式\n<ul>\n<li>Definition: same user action has different results<br />\n 定义：同一用户操作具有不同结果</li>\n<li>Make unavoidable modes visible like ^F for Outlook<br />\n 使不可避免的模式，如 Outlook 的 Ctrl+F</li>\n<li>E.g. Typing &quot;daytime&quot; to a mail program<br />\n 例如 在邮件程序上键入 “白天”</li>\n</ul>\n</li>\n</ul>\n<p class=\"gallery\" data-height=\"220\"><img data-src=\"https://i.loli.net/2020/10/07/mNP3tz7W6ylMah9.jpg\" alt=\"\" /><br />\n<img data-src=\"https://i.loli.net/2020/10/07/RDnpGSVrcbvkiEA.jpg\" alt=\"\" /><br />\n<img data-src=\"https://i.loli.net/2020/10/07/JKQGoqtaYSlCyen.jpg\" alt=\"\" /></p>\n<h2 id=\"6️⃣-recognition-rather-than-recall\"><a class=\"anchor\" href=\"#6️⃣-recognition-rather-than-recall\">#</a> 6️⃣ Recognition rather than Recall</h2>\n<p>识别，而不是记忆</p>\n<ul>\n<li>Make objects, actions, options visible<br />\n 使对象、动作、选项可见</li>\n<li>See and pick it, not generate it<br />\n 查看并选择它，而不生成它</li>\n<li>Short-term memory = 7 ±2 items; 30 sec to 2 min<br />\n 短期记忆 = 7±2 个项目； 30 秒至 2 分钟。超过 7 个会遗忘\n<ul>\n<li>unless interrupted<br />\n 除非被打断</li>\n</ul>\n</li>\n<li>Menus rather than type-in (but short enough)<br />\n 菜单而非键入（但足够简短）</li>\n<li>Auto-fill in helps here too<br />\n 自动填写也有帮助</li>\n<li>Prompts provide format and limits<br />\n 提示支持的格式和限制</li>\n<li>Don't require retyping of remembered information<br />\n 不需要重新输入记住的信息</li>\n<li>Pervasive, generic rules (cut/paste)<br />\n 普遍的通用规则（剪切 / 粘贴）</li>\n<li>E.g. in Aegis, remembering altitude<br />\n 例如 在宙斯盾，海拔高度</li>\n</ul>\n<p class=\"gallery\" data-height=\"220\"><img data-src=\"https://i.loli.net/2020/10/12/Jcg2V5HPatYNFvb.jpg\" alt=\"\" title=\"IDE的提示功能\" /><br />\n<img data-src=\"https://i.loli.net/2020/10/12/cMxRVSnh76riINB.jpg\" alt=\"\" title=\"直接预览字体样式，而不是只显示字体名称\" /><br />\n<img data-src=\"https://i.loli.net/2020/10/12/4H5OBZYp8hufaPb.jpg\" alt=\"\" title=\"What is a DTIC user code and how to get one?什么是DTIC用户代码以及如何获取代码？\" /><br />\n<img data-src=\"https://i.loli.net/2020/10/12/GxdXVhbwctKWquO.jpg\" alt=\"\" title=\"打印设置，打印第几页\" /></p>\n<h2 id=\"7️⃣-flexibility-and-efficiency-of-use\"><a class=\"anchor\" href=\"#7️⃣-flexibility-and-efficiency-of-use\">#</a> 7️⃣ Flexibility and Efficiency of use</h2>\n<p>灵活性和使用效率</p>\n<ul>\n<li>Provide Shortcuts<br />\n 提供捷径</li>\n<li>For experienced users<br />\n 针对经验丰富的用户\n<ul>\n<li>E.g., Command keys<br />\n 例如，命令键</li>\n</ul>\n</li>\n<li>Jump directly to desired location<br />\n 直接跳到所需位置</li>\n<li>Reuse previously entered information<br />\n 重复使用以前输入的信息</li>\n<li>Good default values<br />\n 良好的默认值</li>\n</ul>\n<p class=\"gallery\" data-height=\"220\"><img data-src=\"https://i.loli.net/2020/10/12/NcUpjoqyBfGWExa.jpg\" alt=\"\" /><br />\n<img data-src=\"https://i.loli.net/2020/10/12/kHYfp5ArSseWgG4.jpg\" alt=\"\" /></p>\n<h2 id=\"8️⃣-aesthetic-and-minimalist-design\"><a class=\"anchor\" href=\"#8️⃣-aesthetic-and-minimalist-design\">#</a> 8️⃣ Aesthetic and Minimalist Design</h2>\n<p>美观和简约的设计</p>\n<ul>\n<li>Good Graphic Design and Color Choice<br />\n 良好的图形设计和色彩选择\n<ul>\n<li>Appropriately direct attention<br />\n 适当的直接关注</li>\n<li>Group related objects (alignment, decorations)<br />\n 分组相关对象（对齐，装饰）</li>\n<li>Balance and white space<br />\n 平衡和空白</li>\n<li>Maintain display inertia<br />\n 保持显示惯性</li>\n<li>Few fonts and colors (5 to 7 colors)<br />\n 几种字体和颜色（5 至 7 种颜色）\n<ul>\n<li>Appropriate contrast<br />\n 适当的对比</li>\n<li>Some people are color blind (8% of males)<br />\n 有些人色盲（男性的 8％）</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p class=\"gallery\" data-height=\"220\"><img data-src=\"https://i.loli.net/2020/10/12/j2QBhXCZyouSH48.jpg\" alt=\"\" title=\"好例子\" /><br />\n<img data-src=\"https://i.loli.net/2020/10/12/2v8erGYsFkL3jMN.jpg\" alt=\"\" title=\"坏例子-错误的对比度\" /><br />\n<img data-src=\"https://i.loli.net/2020/10/12/RhLs1pkenBlKQcj.jpg\" alt=\"\" title=\"坏例子-视觉上的混乱\" /></p>\n<h2 id=\"9️⃣-help-users-recover-from-errors\"><a class=\"anchor\" href=\"#9️⃣-help-users-recover-from-errors\">#</a> 9️⃣ Help Users Recover from Errors</h2>\n<p>帮助用户从错误中恢复</p>\n<ul>\n<li>Help users when they are in trouble<br />\n 遇到麻烦时帮助用户</li>\n<li>Opportunities for users to learn about the system<br />\n 用户学习系统的机会</li>\n<li>Clear language; no codes<br />\n 语言清晰； 不要错误代码</li>\n<li>Be precise; Not &quot;syntax error&quot;<br />\n 要精确； 不是 “语法错误”</li>\n<li>Constructively help the user solve the problem<br />\n 建设性地帮助用户解决问题\n<ul>\n<li>Tell why the error happened and how to fix it<br />\n 指出错误发生的原因以及解决方法</li>\n</ul>\n</li>\n<li>Be polite and not accusing; positive wording:<br />\n 有礼貌，不要指责； 正面措辞：\n<ul>\n<li>Not: &quot;FATAL ERROR&quot;, etc.</li>\n<li>而不是：“致命错误” 等。</li>\n</ul>\n</li>\n</ul>\n<p class=\"gallery\" data-height=\"220\"><img data-src=\"https://i.loli.net/2020/10/12/xAqB79oCnjG8WhF.jpg\" alt=\"\" /><br />\n<img data-src=\"https://i.loli.net/2020/10/12/zur6HX5ZGUDo2WV.jpg\" alt=\"\" /></p>\n<h3 id=\"error-messages-错误信息\"><a class=\"anchor\" href=\"#error-messages-错误信息\">#</a> Error Messages 错误信息</h3>\n<ul>\n<li>Blame the system, not the user<br />\n 要责怪系统，而不是用户\n<ul>\n<li>&quot;Unrecognized&quot; vs. &quot;illegal&quot; command<br />\n “无法识别” 与 “非法” 命令</li>\n</ul>\n</li>\n<li>No humor or snide comments<br />\n 不要幽默的评论</li>\n<li>Easy error recovery<br />\n 能轻松恢复</li>\n<li>Can have multiple levels of messages<br />\n 可以有多个级别的消息\n<ul>\n<li>E.g. in XXX product, &quot;can't save file&quot; —why not?<br />\n 例如 在 XXX 产品中，“无法保存文件”- 为什么不呢？</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"bad-error-messages\"><a class=\"anchor\" href=\"#bad-error-messages\">#</a> Bad Error Messages</h3>\n<p class=\"gallery\" data-height=\"220\"><img data-src=\"https://i.loli.net/2020/10/12/QymwRck7PsF3g41.jpg\" alt=\"\" /><br />\n<img data-src=\"https://i.loli.net/2020/10/12/gH6ZJxwLG24c5nX.jpg\" alt=\"\" /><br />\n<img data-src=\"https://i.loli.net/2020/10/12/fmBekVIXURjsarW.jpg\" alt=\"\" /><br />\n<img data-src=\"https://i.loli.net/2020/10/12/4s5fS8ltEh3uMIv.jpg\" alt=\"\" /><br />\n<img data-src=\"https://i.loli.net/2020/10/12/9sG2nZ41MJBagAY.jpg\" alt=\"\" /><br />\n<img data-src=\"https://i.loli.net/2020/10/12/PUlor8gj72MqCD3.jpg\" alt=\"\" /></p>\n<h3 id=\"pretty-good-example\"><a class=\"anchor\" href=\"#pretty-good-example\">#</a> Pretty good Example</h3>\n<p><img data-src=\"https://i.loli.net/2020/10/12/W8HYgisOtmMXP1l.jpg\" alt=\"\" /></p>\n<h2 id=\"help-and-documentation\"><a class=\"anchor\" href=\"#help-and-documentation\">#</a> 🔟 Help and Documentation</h2>\n<ul>\n<li>\n<p>True walk up and use?<br />\n 真正的运行和使用？</p>\n</li>\n<li>\n<p>Most people will not read documentation<br />\n 大多数人不会阅读文档</p>\n<ul>\n<li>If do, then<br />\n 如果这样做，那么\n<ul>\n<li>First time product is used, or else<br />\n 首次使用产品，否则</li>\n<li>In a panic, so need information right away<br />\n 出现紧急情况，因此需要立即提供信息</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>Iterative design of documentation needed<br />\n 所需文档的迭代设计</p>\n<ul>\n<li>SuperBook application answer found in 4.3 minutes, compared to 7.6 minutes before fixing<br />\n 在 4.3 分钟内找到 SuperBook 应用程序答案，而修复前为 7.6 分钟</li>\n</ul>\n</li>\n<li>\n<p>Help system is an extra feature to learn<br />\n 帮助系统是需要学习的额外功能</p>\n</li>\n<li>\n<p>&quot;Help doesn't help&quot;<br />\n“帮助无济于事”</p>\n<ul>\n<li>If need to add help, maybe fix the feature?<br />\n 如果需要添加帮助，也许可以修复该功能？</li>\n<li>Use documentation writers to help refine the system<br />\n 使用文档编写者来帮助完善系统</li>\n</ul>\n</li>\n<li>\n<p>Good quality writing<br />\n 高质量的写作</p>\n</li>\n</ul>\n<p class=\"gallery\" data-height=\"220\"><img data-src=\"https://i.loli.net/2020/10/12/OvGJ5qEf2pgh9oB.jpg\" alt=\"\" /><br />\n<img data-src=\"https://i.loli.net/2020/10/12/nHo2LZGkRr1NyKq.jpg\" alt=\"\" /></p>\n<h2 id=\"example\"><a class=\"anchor\" href=\"#example\">#</a> Example</h2>\n<p><img data-src=\"https://i.loli.net/2020/10/12/xHfgdtyn4aJwEKM.jpg\" alt=\"\" /></p>\n<ol>\n<li>Shopping cart icon is not balanced with its background whitespace (graphic design)</li>\n<li>Good: user is greeted by name (feedback)</li>\n<li>Red is used both for help messages and for error messages (consistency, match real world)</li>\n<li>&quot;There is a problem with your order&quot;, but no explanation or suggestions for resolution (error reporting)</li>\n<li>ExtPriceand UnitPriceare strange labels (match real world)</li>\n<li>Remove Hardware button inconsistent with Remove checkbox (consistency)</li>\n<li>&quot;Click here&quot; is unnecessary (simplicity)</li>\n<li>No &quot;Continue shopping&quot; button (user control &amp; freedom)</li>\n<li>Recalculate is very close to Clear Cart (error prevention)</li>\n<li>&quot;Check Out&quot; button doesn’t look like other buttons (consistency, both internal &amp; external)</li>\n<li>Uses &quot;Cart Title&quot; and &quot;Cart Name&quot; for the same concept (consistency)</li>\n<li>Must recall and type in cart title to load (recognition not recall, error prevention, efficiency)</li>\n</ol>\n<h1 id=\"hints-for-better-he\"><a class=\"anchor\" href=\"#hints-for-better-he\">#</a> Hints for better HE</h1>\n<ul>\n<li>Use multiple evaluators<br />\n 使用多个评估者\n<ul>\n<li>Different evaluators find different problems<br />\n 不同的评估者发现不同的问题</li>\n<li>The more the better but diminishing returns<br />\n 越多越好，但递减</li>\n<li>Neilsen recommends 3-5<br />\n 尼尔森建议 3-5</li>\n</ul>\n</li>\n<li>Alternate HE with UT<br />\n 用 UT 替代 HE\n<ul>\n<li>Each method finds different problems<br />\n 每种方法都会发现不同的问题</li>\n<li>HE is cheaper<br />\nHE 便宜</li>\n</ul>\n</li>\n<li>Its OK for observer to help evaluator<br />\n 可以让观察者帮助评估者\n<ul>\n<li>As long as the problem has already been noted<br />\n 只要问题已经指出</li>\n<li>This would not be OK in a UT<br />\n 在 UT 中这不行</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"suggested-report-format-what-to-include\"><a class=\"anchor\" href=\"#suggested-report-format-what-to-include\">#</a> Suggested Report Format What to include</h2>\n<p>建议的报告格式</p>\n<p>What to include</p>\n<ul>\n<li>Problem 问题</li>\n<li>Heuristics 启发式</li>\n<li>Description 说明</li>\n<li>Severity 严重程度</li>\n<li>Recommendation (if any) 推荐（如果有）</li>\n<li>Screen Shots 屏幕截图</li>\n</ul>\n<p><img data-src=\"https://i.loli.net/2020/10/12/cYqSXwxJV867oyp.jpg\" alt=\"\" /><br />\n<img data-src=\"https://i.loli.net/2020/10/12/Doh9mZcHb7dkNwu.jpg\" alt=\"\" /></p>\n",
            "tags": [
                "计算机科学",
                "Master of Software Engineering",
                "ITMD 534. Human Computer Interaction",
                "人机交互"
            ]
        },
        {
            "id": "https://shoka.lostyu.me/computer-science/mse/itmd-510/week-6/",
            "url": "https://shoka.lostyu.me/computer-science/mse/itmd-510/week-6/",
            "title": "Week 6. Exception Handling",
            "date_published": "2020-10-01T10:43:35.000Z",
            "content_html": "<h1 id=\"notes\"><a class=\"anchor\" href=\"#notes\">#</a> Notes</h1>\n<p>An exception handler is a section of code that <ins>gracefully</ins> responds to exceptions.<br />\n 异常处理程序是一段可以优雅地响应异常的代码。</p>\n<h2 id=\"types-of-exceptions\"><a class=\"anchor\" href=\"#types-of-exceptions\">#</a> Types of Exceptions</h2>\n<ol>\n<li>\n<p>Checked Exceptions 已检查的异常</p>\n<p>The exceptions which are checked by the compiler for smooth execution of program at runtime are called checked Exceptions.<br />\n 由编译器检查，为了运行时能顺利执行程序。</p>\n<p>Example:  <code>InterruptedException</code> ,  <code>FileNotFoundException</code></p>\n</li>\n<li>\n<p>Unchecked Exceptions 未经检查的异常</p>\n<p>The exceptions (Runtime/Error) which are not checked by the compiler are called unchecked exceptions.<br />\n 编译器未检查的异常（运行 / 错误）</p>\n<p>Example:   <code>ArithmeticException</code> ,  <code>NullPointerException</code> , etc.</p>\n</li>\n<li>\n<p>Fully checked Vs. Partially Checked Exceptions:<br />\n 全面检查 VS. 部分检查的异常</p>\n<p>Checked Exception is said be fully checked if and only if, its entire child classes also checked, otherwise that checked exception is called partially checked exception.<br />\n 仅当也检查了它的整个子类时，才说检查异常是完全检查的，否则将检查异常称为部分检查异常。</p>\n</li>\n</ol>\n<p>Example:</p>\n<table>\n<tbody>\n<tr>\n<td>Exception</td>\n<td>Partially checked</td>\n</tr>\n<tr>\n<td>IOException</td>\n<td>Fully checked</td>\n</tr>\n<tr>\n<td>ArithmeticException</td>\n<td>Unchecked Exception.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"handling-exceptions\"><a class=\"anchor\" href=\"#handling-exceptions\">#</a> Handling Exceptions</h2>\n<p>To handle an potential exception, you use a  <code>try</code>  statement.</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">try</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token punctuation\">(</span><span class=\"token keyword\">try</span> block statements<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">ExceptionType</span> <span class=\"token class-name\">ParameterName</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">(</span><span class=\"token keyword\">catch</span> block statements<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"the-finally-clause\"><a class=\"anchor\" href=\"#the-finally-clause\">#</a> The  <code>finally</code>  Clause</h3>\n<p>The  <code>try</code>  statement may have an optional  <code>finally</code>  clause.<br />\nIf present, the  <code>finally</code>  clause must appear after all of the  <code>catch</code>  clauses.<br />\n 如果存在，则 <code>finally</code>  子句必须出现在所有 <code>catch</code>  子句之后。</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">try</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token punctuation\">(</span><span class=\"token keyword\">try</span> block statements<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">ExceptionType</span> <span class=\"token class-name\">ParameterName</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token punctuation\">(</span><span class=\"token keyword\">catch</span> block statements<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">finally</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token punctuation\">(</span><span class=\"token keyword\">finally</span> block statements<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"creating-exception-classes\"><a class=\"anchor\" href=\"#creating-exception-classes\">#</a> Creating Exception Classes</h2>\n<p>Some examples of exceptions that can <ins>affect</ins> a bank account:<br />\n 可能影响银行帐户的一些例外示例：</p>\n<ul>\n<li>A negative starting balance is passed to the constructor.<br />\n 传递给构造函数的负的初始余额</li>\n<li>A negative interest rate is passed to the constructor.<br />\n 传递给构造函数的负利率</li>\n<li>A negative number is passed to the deposit method.<br />\n 传递给存款方法的负数</li>\n<li>A negative number is passed to the withdraw method.<br />\n 传递给提现方法的负数</li>\n<li>The amount passed to the withdraw method exceeds the account's balance.<br />\n 传递到提现方法的金额超过了帐户的余额。</li>\n</ul>\n<p>We can create exceptions that represent each of these error conditions.<br />\n 我们可以创建代表每种错误情况的异常。</p>\n<p>Hierarchy chart of Exceptions follows...<br />\n 异常的层次结构图如下...</p>\n<p><img data-src=\"https://i.loli.net/2020/10/22/ApMUTlRLPytqYhD.png\" alt=\"\" /></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>BankAccount.java</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   The BankAccount class simulates a bank account.</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>*/</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">BankAccount</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">double</span> balance<span class=\"token punctuation\">;</span> <span class=\"token comment\">// Account balance</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      This constructor sets the starting balance at 0.0.</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>   */</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>   <span class=\"token keyword\">public</span> <span class=\"token class-name\">BankAccount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>   <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      balance <span class=\"token operator\">=</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>   </pre></td></tr><tr><td data-num=\"16\"></td><td><pre>   <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      This constructor sets the starting balance to the value passed as an argument.</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>      @param startBalance The starting balance.</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>      @exception NegativeStartingBalance When startBalance is negative.</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>   */</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>   <span class=\"token keyword\">public</span> <span class=\"token class-name\">BankAccount</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span> startBalance<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">NegativeStartingBalance</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>   <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>startBalance <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>         <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">NegativeStartingBalance</span><span class=\"token punctuation\">(</span>startBalance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>         </pre></td></tr><tr><td data-num=\"26\"></td><td><pre>      balance <span class=\"token operator\">=</span> startBalance<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>   <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>      This constructor sets the starting balance to the value in the String argument.</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>      @param str The starting balance, as a String.</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>   */</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>   <span class=\"token keyword\">public</span> <span class=\"token class-name\">BankAccount</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> str<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>   <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>      balance <span class=\"token operator\">=</span> <span class=\"token class-name\">Double</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseDouble</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>   <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>      The deposit method makes a deposit into the account.</pre></td></tr><tr><td data-num=\"40\"></td><td><pre>      @param amount The amount to add to the</pre></td></tr><tr><td data-num=\"41\"></td><td><pre>      balance field.</pre></td></tr><tr><td data-num=\"42\"></td><td><pre>   */</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>   <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">deposit</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span> amount<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>   <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>      balance <span class=\"token operator\">+=</span> amount<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>   <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"49\"></td><td><pre>      The deposit method makes a deposit into the account.</pre></td></tr><tr><td data-num=\"50\"></td><td><pre>      @param str The amount to add to the</pre></td></tr><tr><td data-num=\"51\"></td><td><pre>      balance field, as a String.</pre></td></tr><tr><td data-num=\"52\"></td><td><pre>   */</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>   <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">deposit</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> str<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>   <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        balance <span class=\"token operator\">+=</span> <span class=\"token class-name\">Double</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseDouble</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>   <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"59\"></td><td><pre>      The withdraw method withdraws an amount from the account.</pre></td></tr><tr><td data-num=\"60\"></td><td><pre>      @param amount The amount to subtract from the balance field.</pre></td></tr><tr><td data-num=\"61\"></td><td><pre>   */</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>   <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">withdraw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span> amount<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>   <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>      balance <span class=\"token operator\">-=</span> amount<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>   <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"68\"></td><td><pre>      The withdraw method withdraws an amount from the account.</pre></td></tr><tr><td data-num=\"69\"></td><td><pre>      @param str The amount to subtract from the balance field, as a String.</pre></td></tr><tr><td data-num=\"70\"></td><td><pre>   */</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>   <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">withdraw</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> str<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>   <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>      balance <span class=\"token operator\">-=</span> <span class=\"token class-name\">Double</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseDouble</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>   <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"77\"></td><td><pre>      The setBalance method sets the account balance.</pre></td></tr><tr><td data-num=\"78\"></td><td><pre>      @param b The value to store in the balance field.</pre></td></tr><tr><td data-num=\"79\"></td><td><pre>   */</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>   <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setBalance</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span> b<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>   <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>      balance <span class=\"token operator\">=</span> b<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>   <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"86\"></td><td><pre>      The setBalance method sets the account balance.</pre></td></tr><tr><td data-num=\"87\"></td><td><pre>      @param str The value, as a String, to store in the balance field.</pre></td></tr><tr><td data-num=\"88\"></td><td><pre>   */</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>   <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setBalance</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> str<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>   <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>      balance <span class=\"token operator\">=</span> <span class=\"token class-name\">Double</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseDouble</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>   </pre></td></tr><tr><td data-num=\"94\"></td><td><pre>   <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"95\"></td><td><pre>      The getBalance method returns the account balance.</pre></td></tr><tr><td data-num=\"96\"></td><td><pre>      @return The value in the balance field.</pre></td></tr><tr><td data-num=\"97\"></td><td><pre>   */</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>   <span class=\"token keyword\">public</span> <span class=\"token keyword\">double</span> <span class=\"token function\">getBalance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>   <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>      <span class=\"token keyword\">return</span> balance<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>Exceptions.java</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">BufferedReader</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">File</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">FileNotFoundException</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">FileReader</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">IOException</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Exceptions</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token annotation punctuation\">@SuppressWarnings</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"resource\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> s<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token class-name\">FileReader</span> reader <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token class-name\">BufferedReader</span> br<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>             br <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BufferedReader</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">FileReader</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                    <span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">File</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"data1.txt\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token class-name\">String</span> line<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>ct<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>line <span class=\"token operator\">=</span> br<span class=\"token punctuation\">.</span><span class=\"token function\">readLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                i <span class=\"token operator\">=</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Div result for record = \"</span> <span class=\"token operator\">+</span> ct <span class=\"token operator\">+</span> <span class=\"token string\">\" -> \"</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token operator\">/</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                ct<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span>  <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">ArithmeticException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Invalid operation: \"</span> <span class=\"token operator\">+</span> e<span class=\"token punctuation\">.</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span>  <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">FileNotFoundException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>               <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"File exception: \"</span> <span class=\"token operator\">+</span> e<span class=\"token punctuation\">.</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span>  <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>              e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>             <span class=\"token comment\">//System.out.println(\"File exception: \" + e.getMessage());</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>          <span class=\"token keyword\">finally</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>reader <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>                <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>                    reader<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>                    <span class=\"token comment\">//do something with the exception</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"--- File End ---\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span>    </pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span>    </pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   NegativeStartingBalance exceptions are thrown by the</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   BankAccount class when a negative starting balance is</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   passed to the constructor.</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>*/</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">NegativeStartingBalance</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                   <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Exception</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      This constructor uses a generic</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      error message.</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>   */</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>   <span class=\"token keyword\">public</span> <span class=\"token class-name\">NegativeStartingBalance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>   <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>      <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Error: Negative starting balance\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>   <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>      This constructor specifies the bad starting</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>      balance in the error message.</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>      @param The bad starting balance.</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>   */</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>   <span class=\"token keyword\">public</span> <span class=\"token class-name\">NegativeStartingBalance</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span> amount<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>   <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>      <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Error: Negative starting balance: \"</span> <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>AccountTest.java</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AccountTest</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token comment\">// Force a NegativeStartingBalance exception.</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token keyword\">try</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>         <span class=\"token class-name\">BankAccount</span> account <span class=\"token operator\">=</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                     <span class=\"token keyword\">new</span> <span class=\"token class-name\">BankAccount</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">100.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">NegativeStartingBalance</span> e<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>         <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>AIOBSampleHandled.java</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AIOBSampleHandled</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> args<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> myArray <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">897</span><span class=\"token punctuation\">,</span> <span class=\"token number\">56</span><span class=\"token punctuation\">,</span> <span class=\"token number\">78</span><span class=\"token punctuation\">,</span> <span class=\"token number\">90</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">123</span><span class=\"token punctuation\">,</span> <span class=\"token number\">75</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Elements in the array are:: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span>myArray<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token class-name\">Scanner</span> sc <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Enter the index of the required element :: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token keyword\">int</span> element <span class=\"token operator\">=</span> sc<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Element in the given index is :: \"</span> <span class=\"token operator\">+</span> myArray<span class=\"token punctuation\">[</span>element<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ArrayIndexOutOfBoundsException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"The index you have entered is invalid\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Please enter an index number between 0 and 6\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "计算机科学",
                "Master of Software Engineering",
                "ITMD 510. Object-Oriented App Develop",
                "Java"
            ]
        },
        {
            "id": "https://shoka.lostyu.me/computer-science/mse/itmd-510/week-5/",
            "url": "https://shoka.lostyu.me/computer-science/mse/itmd-510/week-5/",
            "title": "Week 5. Abstraction vs. Interfaces, Inheritance and Polymorphism",
            "date_published": "2020-09-24T08:52:15.000Z",
            "content_html": "<h1 id=\"notes\"><a class=\"anchor\" href=\"#notes\">#</a> Notes</h1>\n<p>The Four CornerStones of OOP!<br />\nOOP 的四个基石！</p>\n<ul>\n<li>Abstraction (vs. Interfaces)<br />\n 抽象（与接口）</li>\n<li>Polymorphism (many shapes and forms)<br />\n 多态性（许多形状和形式）</li>\n<li>Inheritance (Type/subtype)<br />\n 继承（类型 / 子类型）</li>\n<li>Encapsulation (data hiding)<br />\n 封装（数据隐藏）</li>\n</ul>\n<h2 id=\"abstraction-抽象\"><a class=\"anchor\" href=\"#abstraction-抽象\">#</a> Abstraction 抽象</h2>\n<p>A class that is declared using  <code>abstract</code>  keyword is known as abstract class.<br />\n 使用 <code>abstract</code>  关键字声明的类称为抽象类。</p>\n<p>It can have abstract methods (methods without body) as well as concrete methods (regular methods with body).<br />\n 它可以有抽象方法（没有主体的方法）以及具体方法（有主体的常规方法）。</p>\n<h3 id=\"rules\"><a class=\"anchor\" href=\"#rules\">#</a> Rules</h3>\n<p>An abstract class can not be instantiated, which means you are not allowed to create an object of it.<br />\n 抽象类无法实例化，这意味着不允许您创建抽象类的对象。</p>\n<p>A class derived from the abstract class must implement all those methods that are declared as abstract in the parent class.<br />\n 从抽象类派生的类必须实现在父类中声明为抽象的所有那些方法。</p>\n<h3 id=\"why-use-an-abstract-class\"><a class=\"anchor\" href=\"#why-use-an-abstract-class\">#</a> Why use an abstract class?</h3>\n<p>Consider class  <code>Animal</code> .<br />\nIt may have a method  <code>makeSound()</code>  and subclasses of it like  <code>Dog</code> ,  <code>Cat</code> ,  <code>Lion</code> , etc.<br />\nSince the animal sounds differ from one animal to another, there is no point to implement this method in parent class.<br />\nThis is because every child class must override this method to give its own implementation details.<br />\nEx.  <code>Dog</code>  class will say will say  <code>Woof</code>  and  <code>Cat</code>  class will say  <code>Meow</code> .</p>\n<p>So when we know that all the animal child classes will and should override this method, then there is no point to implement this method in parent class.<br />\n 因此，当我们知道所有动物子类都将并且应该重写此方法时，则没有必要在父类中实现此方法。</p>\n<p>Thus, making this method  <code>abstract</code>  would be the good choice as by making this method abstract we force all the sub classes to implement this method ( otherwise you will get compilation error).<br />\n 因此，使此方法为 “抽象” 将是一个不错的选择，因为通过使该方法成为抽象，我们将强制所有子类实现该方法（否则，您将获得编译错误）。</p>\n<p>Also we need not to give any implementation to this method in parent class.<br />\n 同样，我们不需要在父类中对该方法进行任何实现。</p>\n<p><img data-src=\"https://i.loli.net/2020/10/22/yqe8goBv9JwiFRO.png\" alt=\"\" /></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>Code sample</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">//abstract (parent) class</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">abstract</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Animal</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token comment\">//abstract method</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">abstract</span> <span class=\"token keyword\">void</span> <span class=\"token function\">makeSound</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">//Dog class (extends) Animal class</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Dog</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Animal</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">makeSound</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Woof\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> args<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t<span class=\"token class-name\">Animal</span> obj <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Dog</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\tobj<span class=\"token punctuation\">.</span><span class=\"token function\">makeSound</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"interfaces-接口\"><a class=\"anchor\" href=\"#interfaces-接口\">#</a> Interfaces 接口</h2>\n<p>Interface looks like a class but it is not a class.<br />\n 接口看起来像一个类，但不是一个类。</p>\n<p>An interface can have methods and variables.<br />\n 接口可以具有方法和变量。</p>\n<p>Methods declared in interface are by default abstract (only method signature, no body).<br />\n 在接口中声明的方法，默认情况下是抽象的（仅方法签名，没有主体）。</p>\n<p>The variables declared in an interface are  <code>public</code> ,  <code>static</code>  &amp;  <code>final</code>  by default.<br />\n 默认情况下，在接口中声明的变量是 <code>public</code> ， <code>static</code>  和 <code>final</code> 。</p>\n<p>Syntax: Interfaces are declared by specifying a keyword  <code>interface</code> .<br />\n 句法：通过指定关键字 <code>interface</code>  来声明接口。</p>\n<h3 id=\"code-sample\"><a class=\"anchor\" href=\"#code-sample\">#</a> Code sample</h3>\n<p>Movable Interface &amp; Implementations<br />\n 移动接口和实现</p>\n<p>Suppose an application involves many objects that can move.<br />\n 假设一个应用程序涉及许多可以移动的对象。</p>\n<p>We could define an interface called  <code>movable</code> , containing the signatures of the various movement methods.<br />\n 我们可以定义一个称为 <code>movable</code>  的接口，其中包含各种移动方法的签名。</p>\n<p><img data-src=\"https://i.loli.net/2020/10/22/x5kU9GTVY3JSe6X.png\" alt=\"\" /></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/* The Movable interface defines a list of public abstract methods to be implemented by its subclasses */</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// use keyword \"interface\" (instead of \"class\") to define an interface</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">Movable</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token comment\">// An interface defines a list of public abstract methods to be implemented by the subclasses</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">moveUp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"public\" and \"abstract\" optional</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">moveDown</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">moveLeft</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">moveRight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">// The subclass MovablePoint needs to implement all the abstract methods defined in the interface Movable</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MovablePoint</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Movable</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token comment\">// Private member variables</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">;</span>  <span class=\"token comment\">// (x, y) coordinates of the point</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token comment\">// Constructor</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">MovablePoint</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> x<span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> y<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t<span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token string\">\"(\"</span> <span class=\"token operator\">+</span> x <span class=\"token operator\">+</span> <span class=\"token string\">\",\"</span> <span class=\"token operator\">+</span> y <span class=\"token operator\">+</span> <span class=\"token string\">\")\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t<span class=\"token comment\">// Need to implement all the abstract methods defined in the interface Movable</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t<span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">moveUp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t\ty<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t<span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">moveDown</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t\ty<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t<span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">moveLeft</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t\tx<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t<span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">moveRight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t\tx<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestMovable</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\t\t<span class=\"token class-name\">MovablePoint</span> p1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MovablePoint</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// upcast</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>p1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\t\tp1<span class=\"token punctuation\">.</span><span class=\"token function\">moveDown</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>p1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\t\tp1<span class=\"token punctuation\">.</span><span class=\"token function\">moveRight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>p1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>\t\t<span class=\"token comment\">// Test Polymorphism</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\t\t<span class=\"token class-name\">Movable</span> p2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MovablePoint</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// upcast</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>\t\tp2<span class=\"token punctuation\">.</span><span class=\"token function\">moveUp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>p2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>\t\t<span class=\"token class-name\">MovablePoint</span> p3 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">MovablePoint</span><span class=\"token punctuation\">)</span>p2<span class=\"token punctuation\">;</span>   <span class=\"token comment\">// downcast</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>p3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"upcasting-downcasting\"><a class=\"anchor\" href=\"#upcasting-downcasting\">#</a> Upcasting &amp; Downcasting</h3>\n<p><img data-src=\"https://i.loli.net/2020/10/22/xnaFWzyXLTsmNIk.png\" alt=\"\" /></p>\n<h3 id=\"which-should-you-use-abstract-classes-or-interfaces\"><a class=\"anchor\" href=\"#which-should-you-use-abstract-classes-or-interfaces\">#</a> Which should you use, abstract classes or interfaces?</h3>\n<ul>\n<li>\n<p>Consider using abstract classes if any of these statements apply to your situation:<br />\n 如果以下任何一种情况适用于您的情况，请考虑使用抽象类：</p>\n<ul>\n<li><span class=\"red\">You want to share code among several closely related classes.</span><br />\n 想在几个紧密相关的类之间共享代码。</li>\n<li>You expect that classes that extend your abstract class have many common methods or fields, or require access modifiers other than  <code>public</code>  (such as  <code>protected</code>  and  <code>private</code> ).<br />\n 希望扩展抽象类的类具有许多公共方法或字段，或者需要除 <code>public</code>  之外的访问修饰符（例如 <code>protected</code>  和 <code>private</code> ）。</li>\n<li>You want to declare <ins>non-static</ins> or non-final fields. This enables you to define methods that can access and modify the state of the object to which they belong.<br />\n 想要声明非 <code>static</code>  或非 <code>final</code>  字段。<br />\n这样定义的方法，可以访问和修改所属对象的状态。</li>\n</ul>\n</li>\n<li>\n<p>Consider using interfaces if any of these statements apply to your situation:<br />\n 如果以下任何一种情况适用于您的情况，请考虑使用接口：</p>\n<ul>\n<li><span class=\"red\">You expect that <ins>unrelated classes</ins> would implement your interface.</span><br />\n 希望不相关的类将实现您的接口。</li>\n<li>You want to specify the behavior of a particular data type, but not concerned about who implements its behavior.<br />\n 想指定特定数据类型的行为，但不关心谁实现其行为。</li>\n<li>You want to take advantage of multiple inheritance.<br />\n 想利用多重继承。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"inheritance-继承\"><a class=\"anchor\" href=\"#inheritance-继承\">#</a> Inheritance 继承</h2>\n<p>Inheritance is a process of defining a new class based on an existing class by extending its common data members and methods.<br />\n 继承是通过扩展其公共数据成员和方法，基于现有类定义新类的过程。</p>\n<dl>\n<dt>Why use Inheritance?</dt>\n<dd>Inheritance allows us to reuse of code, it improves reusability in your java application.<br />\n 继承使我们可以重复使用代码，从而提高了 Java 应用程序的可重用性。</dd>\n<dt>Advantage of use</dt>\n<dd>Code that is already present in base class need not be rewritten in the child class.<br />\n 基类中已经存在的代码无需在子类中重写。</dd>\n</dl>\n<h3 id=\"the-is-a-relationship\"><a class=\"anchor\" href=\"#the-is-a-relationship\">#</a> The &quot;is a&quot; Relationship</h3>\n<p>Inheritance has an &quot;is-a&quot; relationship.<br />\n 继承具有 “is-a” 关系。</p>\n<dl>\n<dt>Inheritance</dt>\n<dd>is a mechanism wherein a new class is derived from an existing class.<br />\n 继承是一种机制，其中新类是从现有类派生的。<br />\nIn Java, classes may inherit or acquire the properties and methods of other classes.<br />\n 在 Java 中，类可以继承或获取其他类的属性和方法。<br />\nA class derived from another class is called a subclass, whereas the class from which a subclass is derived is called a superclass.<br />\n 从另一个类派生的类称为子类，而从中派生子类的类称为超类。</dd>\n<dt>Super Class: 超级类</dt>\n<dd>The class whose features are inherited is known as super class (or a base class or a parent class).<br />\n 被继承功能的类称为超级类（或基类或父类）。</dd>\n<dt>Sub Class: 子类</dt>\n<dd>The class that inherits the other class is known as sub class(or a derived class, extended class, or child class).<br />\n 继承另一个类的类称为子类（或派生类，扩展类或子类）。<br />\nThe subclass can add its own fields and methods in addition to the superclass fields and methods.<br />\n 除了父类的字段和方法之外，子类还可以添加自己的字段和方法。</dd>\n<dt>Reusability: 可重用性</dt>\n<dd>Inheritance supports the concept of &quot;reusability&quot;, i.e. when we want to create a new class and there is already a class that includes some of the code that we want, we can derive our new class from the existing class.<br />\n 继承支持 “可重用性” 的概念，即，当我们要创建一个新类并且已经有一个包含我们想要的某些代码的类时，我们可以从现有类中派生新类。<br />\nBy doing this, we are reusing the fields and methods of the existing class.<br />\n 通过这样做，我们可以重用现有类的字段和方法。<br />\nWhat to avoid? Too much dependency!<br />\n 需要避免什么？太多的依赖！\t<br />\nLoose coupling better than tight coupling. High cohesion better than low cohesion.<br />\n 松耦合优于紧耦合。高内聚力优于低内聚力。</dd>\n</dl>\n<h3 id=\"types-of-inheritance-allowed\"><a class=\"anchor\" href=\"#types-of-inheritance-allowed\">#</a> Types of Inheritance allowed.</h3>\n<p>允许的继承类型。</p>\n<p><img data-src=\"https://i.loli.net/2020/10/07/SbPCURHmM7FYGqJ.png\" alt=\"\" /></p>\n<h3 id=\"access-privileges-访问权限\"><a class=\"anchor\" href=\"#access-privileges-访问权限\">#</a> Access privileges 访问权限</h3>\n<p>UML symbols:</p>\n<blockquote>\n<p><code>-</code>  Private (encapsulation principle)<br />\n <code>+</code>  Public<br />\n <code>#</code>  Protected</p>\n</blockquote>\n<ul>\n<li>\n<p>What is inherited?<br />\nProtected members.<br />\nPublic methods.</p>\n</li>\n<li>\n<p>What is not inherited?<br />\nThe constructor.<br />\nPlaces object into an initial state!</p>\n</li>\n</ul>\n<h3 id=\"types-of-constructors\"><a class=\"anchor\" href=\"#types-of-constructors\">#</a> Types of Constructors</h3>\n<ol>\n<li>System default (no arg), implicit calling.<br />\n 系统默认值，无参数，隐式调用</li>\n<li>Programmer defined, explicit calling<br />\n 程序员定义的，显式调用</li>\n</ol>\n<ul>\n<li>No-arg 无参数</li>\n<li>Parameterized (overloaded)  参数化（重载）</li>\n</ul>\n<h3 id=\"tostring-override\"><a class=\"anchor\" href=\"#tostring-override\">#</a> toString() override</h3>\n<p>All classes in Java inherit from the Object class, directly or indirectly which contains the toString method.<br />\nJava 中的所有类都直接或间接地从包含 <code>toString</code>  方法的 Object 类继承。</p>\n<p>We can override toString() method in any of our classes to print proper output specifying fields of a class.<br />\n 我们可以在任何一个类中重写 <code>toString()</code>  方法，来打印指定类的正确输出。</p>\n<p>To call the parent classes toString method definition, use the word super.<br />\n 要调用父类的 <code>toString</code>  方法定义，请使用单词 <code>super</code> 。</p>\n<h3 id=\"object-state\"><a class=\"anchor\" href=\"#object-state\">#</a> Object State</h3>\n<p>The state of an object encompasses all of the (usually static) properties of the object plus the current (usually dynamic) values of each of these properties.<br />\n 对象的状态包含对象的所有属性（通常是静态），以及这些属性中每个属性的当前值（通常是动态）。</p>\n<p><img data-src=\"https://i.loli.net/2020/10/08/nYdvW1Fl3cbfwUs.png\" alt=\"UML Class Diagram example\" title=\"UML Class Diagram example\" /></p>\n<p><div class=\"links\"><div class=\"item\" title=\"Lucidchart\" style=\"--block-color:#f96b13;\"><span class=\"exturl image\" data-url=\"aHR0cHM6Ly93d3cubHVjaWRjaGFydC5jb20v\" data-background-image=\"https://d2slcw3kip6qmk.cloudfront.net/marketing/images/LucidchartFavicon.png\"></span>\n          <div class=\"info\">\n          <span class=\"exturl title\" data-url=\"aHR0cHM6Ly93d3cubHVjaWRjaGFydC5jb20v\">Lucidchart</span>\n          <p class=\"desc\">Online Diagram Software & Visual Solution</p>\n          </div></div></div></p>\n<h2 id=\"polymorphism-多态\"><a class=\"anchor\" href=\"#polymorphism-多态\">#</a> Polymorphism 多态</h2>\n<p>Polymorphism is a OOPs concept where one name can have many forms.<br />\n 多态是一个 OOP 概念，指一个名称可以具有多种形式。</p>\n<blockquote>\n<p>For example, you have a smartphone for communication.<br />\n 例如，您有用于通信的智能手机。<br />\nThe communication mode you choose could be anything.<br />\n 您选择的通信模式可以是任何东西。<br />\nIt can be a call, a text message, a picture message, mail, etc.<br />\n 它可以是电话，文本消息，图片消息，邮件等。<br />\nSo, the goal is common that is communication, but their approach is different.<br />\n 目标是共同的，即沟通，但是他们的方法不同。<br />\nThis is called Polymorphism.<br />\n 这称为多态。</p>\n</blockquote>\n<p>Polymorphism deals with subtyping classes and gives us distinctive advantages at runtime.<br />\n 多态处理子类型类，并在运行时为我们提供了独特的优势。</p>\n<h3 id=\"example\"><a class=\"anchor\" href=\"#example\">#</a> Example</h3>\n<p>Consider our Bank Account example.<br />\nWe have one parent class,  <code>Account</code>  with function of  <code>deposit</code>  and  <code>withdraw</code> .<br />\nAccount has 2 child classes.<br />\nThe operation of  <code>deposit</code>  and  <code>withdraw</code>  is same for  <code>Saving</code>  and  <code>Checking</code>  accounts.<br />\nSo the inherited methods from Account class will work.<br />\n 例如我们的 <code>Bank Account</code>  示例。<br />\n我们有一个父类， <code>Account</code>  账户类，具有 <code>deposit</code>  存款和 <code>withdraw</code>  提现功能（两个方法）。<br />\n <code>Account</code>  帐户类有 2 个子类。<br />\n <code>Saving</code>  储蓄和 <code>Checking</code>  支票帐户类的 <code>deposit</code>  存款和 <code>withdraw</code>  提现操作相同。<br />\n因此，从 <code>Account</code>  类继承的方法将起作用。</p>\n<p><img data-src=\"https://i.loli.net/2020/10/08/QIv36SodOebXnx1.png\" alt=\"\" /></p>\n<p>Change in Software Requirement!?<br />\nThere is a change in the requirement specification, something that is so common in the software industry.<br />\n 更改软件需求！？<br />\n需求发生了变化，这在软件行业中很常见。</p>\n<p>Example: You are supposed to add functionality with a privileged Banking Account with overdraft capabilities.<br />\nFor a background, overdraft is a facility where you can withdraw an amount more than available the balance in your account.<br />\nSo, a  <code>withdraw</code>  method for privileged class, needs to be implemented afresh.<br />\nBut you do not change the tested piece of code in  <code>Savings</code>  and  <code>Checking</code>  account.<br />\nThis is the advantage of OOPS!<br />\n 示例：您要添加一个拥有透支功能的 <code>Privileged</code>  特权银行账户的功能。<br />\n透支功能是指可以提取比可用余额更多的金额。<br />\n因此，需要重新实现特权类的 <code>withdraw</code>  提现方法。<br />\n但是，不需要改动 <code>Saving</code>  储蓄和 <code>Checking</code>  支票帐户类中的已测代码段。<br />\n这就是 OOPS 的优势！</p>\n<p><img data-src=\"https://i.loli.net/2020/10/08/NOfj3isyaQB9DLv.png\" alt=\"\" /></p>\n<ol>\n<li>\n<p>Such that when the &quot;withdraw&quot; method for saving account is called a method from parent account class is executed.<br />\n 当调用 <code>Saving</code>  储蓄帐户的 <code>withdraw</code>  提现方法时，将执行父类 <code>Account</code>  帐户类中的方法。<br />\n<img data-src=\"https://i.loli.net/2020/10/08/qZlFiIz3UQGvnCj.jpg\" alt=\"\" /></p>\n</li>\n<li>\n<p>But when the &quot;withdraw&quot; method for the privileged account (overdraft facility) is called, the withdraw method defined in the privileged class is executed. This is Polymorphism.<br />\n 步骤 2）但是，当调用特权帐户的 <code>withdraw</code>  提现方法时，将执行 <code>Privileged</code>  特权类中定义的提现方法。 这就是多态。<br />\n<img data-src=\"https://i.loli.net/2020/10/08/RIAsylC7eFPaDu2.jpg\" alt=\"\" /></p>\n</li>\n</ol>\n<h3 id=\"key-features\"><a class=\"anchor\" href=\"#key-features\">#</a> Key features</h3>\n<h4 id=\"method-overriding\"><a class=\"anchor\" href=\"#method-overriding\">#</a> Method Overriding</h4>\n<p>Method Overriding is redefining a super class method in a sub class.<br />\n 是指在子类中重新定义父类的方法。</p>\n<p>Rules for Method Overriding 规则</p>\n<ul>\n<li>The method signature i.e. method name, parameter list and return type have to match exactly.<br />\n 方法的特征，如方法名、参数列表和返回值，必须完全一致</li>\n<li>The overridden method can widen the accessibility, but not narrow it, i.e. if it is private in the base class, the child class can make it public but not vice versa.<br />\n 重写的方法可以扩大其可访问性，但不能缩小其可访问性，即，如果它在基类中是私有的，则子类可以将其公开，但反之则不然。</li>\n</ul>\n<h4 id=\"super-keyword\"><a class=\"anchor\" href=\"#super-keyword\">#</a>  <code>super</code>  Keyword</h4>\n<p>Keyword  <code>super</code>  can be used to access methods of the parent class from the child class.<br />\n 关键字 <code>super</code>  可用于从子类访问父类的方法。</p>\n<blockquote>\n<p>What if the WITHDRAW method in the PRIVILEGED class wants to execute the functionality defined in ACCOUNT class and then perform its own specific functionality?<br />\n 如果 <code>Privileged</code>  类中的 <code>withdraw</code>  方法要执行 <code>Account</code>  类中定义的功能，然后执行其自有的特定功能，该怎么办？</p>\n</blockquote>\n<h4 id=\"final-keyword\"><a class=\"anchor\" href=\"#final-keyword\">#</a>  <code>final</code>  Keyword</h4>\n<p>The  <code>final</code>  modifier applies to classes, methods, and variables.<br />\n <code>final</code>  修饰符适用于类，方法和变量。</p>\n<p>The meaning of  <code>final</code>  varies from context to context, but the essential idea is the same.<br />\n 最终的含义因上下文而异，但是基本思想是相同的。</p>\n<ul>\n<li>\n<p>A final class may not be inherited<br />\n <code>final</code>  类不会被继承</p>\n</li>\n<li>\n<p>A final variable becomes a constant and its value cannot be changed.<br />\n <code>final</code>  变量为常量，并且其值无法更改。</p>\n</li>\n<li>\n<p>A final method may not be overridden. This is done for security reasons, and these methods are used for optimization.<br />\n <code>final</code>  方法可能不会被覆盖。这是出于安全原因，并且这些方法用于优化。</p>\n</li>\n</ul>\n<h3 id=\"demo\"><a class=\"anchor\" href=\"#demo\">#</a> demo</h3>\n<ol>\n<li>Construct a Polymorphism project and structure classes as follows<br />\n 构造一个多态项目并构造类，如下所示</li>\n</ol>\n<pre class=\"mermaid\"><svg id=\"mermaid-1605038090195\" width=\"100%\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" height=\"150\" style=\"max-width: 294.40625px;\" viewBox=\"-20 -20 294.40625 150\"><g></g><defs><marker id=\"extensionStart\" class=\"extension\" refX=\"0\" refY=\"7\" markerWidth=\"190\" markerHeight=\"240\" orient=\"auto\"><path d=\"M 1,7 L18,13 V 1 Z\"></path></marker></defs><defs><marker id=\"extensionEnd\" refX=\"19\" refY=\"7\" markerWidth=\"20\" markerHeight=\"28\" orient=\"auto\"><path d=\"M 1,1 V 13 L18,7 Z\"></path></marker></defs><defs><marker id=\"compositionStart\" class=\"extension\" refX=\"0\" refY=\"7\" markerWidth=\"190\" markerHeight=\"240\" orient=\"auto\"><path d=\"M 18,7 L9,13 L1,7 L9,1 Z\"></path></marker></defs><defs><marker id=\"compositionEnd\" refX=\"19\" refY=\"7\" markerWidth=\"20\" markerHeight=\"28\" orient=\"auto\"><path d=\"M 18,7 L9,13 L1,7 L9,1 Z\"></path></marker></defs><defs><marker id=\"aggregationStart\" class=\"extension\" refX=\"0\" refY=\"7\" markerWidth=\"190\" markerHeight=\"240\" orient=\"auto\"><path d=\"M 18,7 L9,13 L1,7 L9,1 Z\"></path></marker></defs><defs><marker id=\"aggregationEnd\" refX=\"19\" refY=\"7\" markerWidth=\"20\" markerHeight=\"28\" orient=\"auto\"><path d=\"M 18,7 L9,13 L1,7 L9,1 Z\"></path></marker></defs><defs><marker id=\"dependencyStart\" class=\"extension\" refX=\"0\" refY=\"7\" markerWidth=\"190\" markerHeight=\"240\" orient=\"auto\"><path d=\"M 5,7 L9,13 L1,7 L9,1 Z\"></path></marker></defs><defs><marker id=\"dependencyEnd\" refX=\"19\" refY=\"7\" markerWidth=\"20\" markerHeight=\"28\" orient=\"auto\"><path d=\"M 18,7 L9,13 L14,7 L9,1 Z\"></path></marker></defs><g id=\"classid-Account-0\" class=\"classGroup\" transform=\"translate(100.7421875,0 )\"><rect x=\"0\" y=\"0\" width=\"48.046875\" height=\"30\" class=\" \"></rect><text y=\"15\" x=\"0\"><tspan class=\"title\" x=\"5\">Account</tspan></text><line x1=\"0\" y1=\"21\" y2=\"21\" x2=\"48.046875\"></line><text x=\"5\" y=\"31\" fill=\"white\" class=\"classText\"></text><line x1=\"0\" y1=\"26\" y2=\"26\" x2=\"48.046875\"></line><text x=\"5\" y=\"41\" fill=\"white\" class=\"classText\"></text></g><g id=\"classid-Checking-1\" class=\"classGroup\" transform=\"translate(0,80 )\"><rect x=\"0\" y=\"0\" width=\"52.296875\" height=\"30\" class=\" \"></rect><text y=\"15\" x=\"0\"><tspan class=\"title\" x=\"5\">Checking</tspan></text><line x1=\"0\" y1=\"21\" y2=\"21\" x2=\"52.296875\"></line><text x=\"5\" y=\"31\" fill=\"white\" class=\"classText\"></text><line x1=\"0\" y1=\"26\" y2=\"26\" x2=\"52.296875\"></line><text x=\"5\" y=\"41\" fill=\"white\" class=\"classText\"></text></g><g id=\"classid-Savings-2\" class=\"classGroup\" transform=\"translate(102.296875,80 )\"><rect x=\"0\" y=\"0\" width=\"44.9375\" height=\"30\" class=\" \"></rect><text y=\"15\" x=\"0\"><tspan class=\"title\" x=\"5\">Savings</tspan></text><line x1=\"0\" y1=\"21\" y2=\"21\" x2=\"44.9375\"></line><text x=\"5\" y=\"31\" fill=\"white\" class=\"classText\"></text><line x1=\"0\" y1=\"26\" y2=\"26\" x2=\"44.9375\"></line><text x=\"5\" y=\"41\" fill=\"white\" class=\"classText\"></text></g><g id=\"classid-Privileged-3\" class=\"classGroup\" transform=\"translate(197.234375,80 )\"><rect x=\"0\" y=\"0\" width=\"57.171875\" height=\"30\" class=\" \"></rect><text y=\"15\" x=\"0\"><tspan class=\"title\" x=\"5\">Privileged</tspan></text><line x1=\"0\" y1=\"21\" y2=\"21\" x2=\"57.171875\"></line><text x=\"5\" y=\"31\" fill=\"white\" class=\"classText\"></text><line x1=\"0\" y1=\"26\" y2=\"26\" x2=\"57.171875\"></line><text x=\"5\" y=\"41\" fill=\"white\" class=\"classText\"></text></g><path d=\"M100.7421875,24.74411788006021L88.30989583333333,29.786764900050173C75.87760416666667,34.82941192004014,51.013020833333336,44.914705960020065,38.580729166666664,54.12401964667671C26.1484375,63.333333333333336,26.1484375,71.66666666666667,26.1484375,75.83333333333333L26.1484375,80\" id=\"edge0\" class=\"relation\" marker-start=\"url(#extensionStart)\"></path><path d=\"M124.765625,30L124.765625,34.166666666666664C124.765625,38.333333333333336,124.765625,46.666666666666664,124.765625,55C124.765625,63.333333333333336,124.765625,71.66666666666667,124.765625,75.83333333333333L124.765625,80\" id=\"edge1\" class=\"relation\" marker-start=\"url(#extensionStart)\"></path><path d=\"M148.7890625,24.509083880943177L161.62760416666666,29.590903234119313C174.46614583333334,34.67272258729545,200.14322916666666,44.83636129364772,212.98177083333334,54.084847313490535C225.8203125,63.333333333333336,225.8203125,71.66666666666667,225.8203125,75.83333333333333L225.8203125,80\" id=\"edge2\" class=\"relation\" marker-start=\"url(#extensionStart)\"></path></svg></pre><ol start=\"2\">\n<li>\n<p>Add in special privileges to the Privileged class to override the withdraw method from the parent class and thus allow specific functionality to allow for the withdraw or not in the child class.<br />\n 在 Privileged 类中添加特殊特权，以覆盖父类的 withdraw 方法，从而允许特定功能允许子类中是否允许退出。</p>\n</li>\n<li>\n<p>Create AccountTest class to check implementation of the Privileged class.<br />\n 创建 AccountTest 类以检查 Privileged 类的实现。</p>\n</li>\n</ol>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>Account.java</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Account</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">protected</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">double</span> balance<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Account</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> name<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>   </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span>      </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">deposit</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span> amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>balance <span class=\"token operator\">+=</span> amount<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">withdraw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span> amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>balance  <span class=\"token operator\">=</span>  <span class=\"token punctuation\">(</span>balance<span class=\"token operator\">-</span>amount<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> <span class=\"token number\">0</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>balance<span class=\"token operator\">-</span>amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token comment\">// TODO code application logic here</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">return</span> name<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token keyword\">return</span> name <span class=\"token operator\">+</span> <span class=\"token string\">\" \"</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"balance is \"</span> <span class=\"token operator\">+</span> balance <span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>Checking.java</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Checking</span><span class=\"token punctuation\">.</span>java <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Account</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Checking</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Checking\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>        </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>      </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>Savings.java</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Savings</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Account</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Savings</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Savings\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>      </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>Privilege.java</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Privilege</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Account</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Privilege</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Privilege\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\">//override the parent</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">withdraw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span> amount<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>balance <span class=\"token operator\">-=</span> amount<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>AccountTest.java</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AccountTest</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> args<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token comment\">//create objects</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token class-name\">Checking</span> c <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Checking</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token class-name\">Savings</span> s <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Savings</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token class-name\">Account</span> aObjs <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Account</span><span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        aObjs<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Checking</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        aObjs<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Checking</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        aObjs<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Checking</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        aObjs<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Savings</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        aObjs<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Privilege</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token comment\">//test withdraw</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        aObjs<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">withdraw</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        aObjs<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">withdraw</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token comment\">//System.out.println(c + \"\\n\" + s );</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">int</span> checkCt<span class=\"token operator\">=</span><span class=\"token number\">0</span> <span class=\"token punctuation\">,</span> savCt<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Account</span> a <span class=\"token operator\">:</span>  aObjs<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>             <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Checking\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                checkCt<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>             <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Savings\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                savCt<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Tots: \\n\"</span> <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                  <span class=\"token string\">\"Checking ct: \"</span> <span class=\"token operator\">+</span> checkCt <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                  <span class=\"token string\">\" Savings ct: \"</span> <span class=\"token operator\">+</span> savCt <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"review\"><a class=\"anchor\" href=\"#review\">#</a> Review</h1>\n<blockquote>\n<p>Chapter 6/7 OOP Concepts / Arrays / ArrayLists</p>\n</blockquote>\n<ol>\n<li class=\"quiz true\">\n<p>A constructor is a method that is automatically called when an object is created.</p>\n<blockquote>\n<p>构造函数是一种在创建对象时自动调用的方法。</p>\n</blockquote>\n</li>\n<li class=\"quiz\">\n<p>A constructor</p>\n<ul class=\"options\">\n<li>Has return type of void</li>\n<li>Always accepts two arguments</li>\n<li>Always has an access specifier of private</li>\n<li class=\"correct\">Has the same name as the class</li>\n</ul>\n<blockquote>\n<p>构造函数</p>\n<ul class=\"options\">\n<li>返回类型为 void</li>\n<li>一律接受两个参数</li>\n<li>始终具有私有的访问权限</li>\n<li>与类同名 ✔️</li>\n</ul>\n</blockquote>\n</li>\n<li class=\"quiz essay\">\n<p>What is the <strong>default</strong> <ins>access specifier</ins> for methods and variables of a class?</p>\n<blockquote>\n<p>什么是类的方法和变量的 “默认” 访问权限说明符？<br />\nDefault access specifier for them both is package protected, that is, their accessibility is available to any other class but within the same package.<br />\n 它们的默认访问说明符都受程序包保护，也就是说，它们的可访问性可用于同一包中的任何其他类。</p>\n</blockquote>\n</li>\n<li class=\"quiz\">\n<p>For the following code, which statement is not true?</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Sphere</span> <span class=\"token punctuation\">&#123;</span>\t</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">double</span> radius<span class=\"token punctuation\">;</span>\t</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">double</span> x<span class=\"token punctuation\">;</span>\t</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">double</span> y<span class=\"token punctuation\">;</span>\t</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">double</span> z<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul class=\"options\">\n<li class=\"correct\">z is available to code that is written outside the Sphere class</li>\n<li>radius, x, y, and z are called members of the Sphere class</li>\n<li>x is available to code that is written outside the Sphere class</li>\n<li>radius is not available to code written outside the Sphere class</li>\n</ul>\n<blockquote>\n<p>对于以下代码，哪个语句不正确</p>\n<ul class=\"options\">\n<li>z 可用于在 Sphere 类之外编写的代码 ✔️</li>\n<li>radius，x，y 和 z 被称为 Sphere 类的成员</li>\n<li>x 可用于在 Sphere 类之外编写的代码</li>\n<li>radius 不适用于在 Sphere 类之外编写的代码</li>\n</ul>\n</blockquote>\n</li>\n<li class=\"quiz essay\">\n<p>What will be returned from the following method?</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> <span class=\"token function\">methodA</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token keyword\">double</span> a <span class=\"token operator\">=</span> <span class=\"token number\">8.5</span> <span class=\"token operator\">+</span> <span class=\"token number\">9.5</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token keyword\">return</span> a<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><blockquote>\n<p>以下方法将返回什么？<br />\nThis is an error</p>\n</blockquote>\n</li>\n<li class=\"quiz\">\n<p>What would be the results of the following code?</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> SIZE <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> array1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span>SIZE<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// ... Code that will put values in array1</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">int</span> value <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> a <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> a <span class=\"token operator\">&lt;=</span> array1<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> a<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   value <span class=\"token operator\">+=</span> array1<span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul class=\"options\">\n<li>value contains the lowest value in array1</li>\n<li>value contains the sum of all the values in array1</li>\n<li>value contains the highest value in array1</li>\n<li class=\"correct\">This would cause the program to crash</li>\n</ul>\n<blockquote>\n<p>以下代码的结果是什么？</p>\n<ul class=\"options\">\n<li>值包含 array1 中的最小值</li>\n<li>value 包含 array1 中所有值的总和</li>\n<li>值包含 array1 中的最大值</li>\n<li>这会导致程序崩溃 ✔️</li>\n</ul>\n</blockquote>\n</li>\n<li class=\"quiz\">\n<p>The binary search algorithm</p>\n<ul class=\"options\">\n<li class=\"correct\">will cut the portion of the array being searched in half each time the loop fails to locate the search value</li>\n<li>will have an average of N/2 comparisons, where N is the number of elements in the array</li>\n<li>is less efficient than the sequential search algorithm</li>\n<li>will have a maximum number of comparisons equal to the number of elements in the array</li>\n</ul>\n<blockquote>\n<p>二进制搜索算法</p>\n<ul class=\"options\">\n<li>每次循环未能找到搜索值时，将被搜索数组的部分减少一半。 ✔️</li>\n<li>将具有 N/2 个比较的平均值，其中 N 是数组中元素的数量</li>\n<li>比顺序搜索算法效率低</li>\n<li>将具有的最大比较数量等于数组中元素的数量</li>\n</ul>\n</blockquote>\n</li>\n<li class=\"quiz\">\n<p>If lower is the first subscript in a contiguous portion of an array, and upper is the last subscript, then the array item in the middle of that array portion is at subscript</p>\n<ul class=\"options\">\n<li class=\"correct\">(lower + upper)/2</li>\n<li>(upper - lower)/2</li>\n<li>(lower - upper)/2</li>\n<li>lower + upper/2</li>\n</ul>\n<blockquote>\n<p>如果 lower 是数组连续部分中的第一个下标，而 upper 是最后一个下标，则该数组部分中间的数组项位于下标？</p>\n</blockquote>\n</li>\n<li class=\"quiz\">\n<p>The following statement creates an ArrayList object. What is the purpose of the  <code>&lt;String&gt;</code>  notation?</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> arr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul class=\"options\">\n<li>It specfies that everything store for the arr object will be converted to a String</li>\n<li>It specfies that String objects may not be stored in the ArrayList object</li>\n<li class=\"correct\">It specfies that only String objects may be stored in the ArrayList object</li>\n<li>It specfies that the get method will only return String objects</li>\n</ul>\n<blockquote>\n<p>以下语句创建一个 <code>ArrayList</code>  对象。  <code>&lt;String&gt;</code>  表示法的目的是什么？</p>\n<ul class=\"options\">\n<li>确定将所有存储在 <code>arr</code>  对象中的东西都转换为 <code>String</code> ；</li>\n<li>确定 <code>String</code>  对象可能不存储在 <code>ArrayList</code>  对象中；</li>\n<li>规定只有 <code>String</code>  对象可以存储在 <code>ArrayList</code>  对象中； ✔️</li>\n<li>它指定 <code>get</code>  方法将仅返回 <code>String ob</code> 。</li>\n</ul>\n</blockquote>\n</li>\n<li class=\"quiz\">\n<p>The declaration</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">></span></span> aL <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul class=\"options\">\n<li>compiles and runs correctly, but is not recommended</li>\n<li>allows the programmer to create an ArrayList that holds integer types</li>\n<li class=\"correct\">causes a compile-time error</li>\n<li>compiles correctly, but causes an exception to be thrown at run time</li>\n</ul>\n<blockquote>\n<ul class=\"options\">\n<li>正确编译并运行，但不建议</li>\n<li>允许程序员创建一个保存整数类型的 ArrayList</li>\n<li>导致编译时错误 ✔️</li>\n<li>正确编译，但导致在运行时引发异常</li>\n</ul>\n</blockquote>\n</li>\n</ol>\n",
            "tags": [
                "计算机科学",
                "Master of Software Engineering",
                "ITMD 510. Object-Oriented App Develop",
                "Java"
            ]
        },
        {
            "id": "https://shoka.lostyu.me/computer-science/mse/itmd-534/lecture-3/",
            "url": "https://shoka.lostyu.me/computer-science/mse/itmd-534/lecture-3/",
            "title": "Lecture 3. How to organize and use data from contextual inquiry",
            "date_published": "2020-09-23T12:16:25.000Z",
            "content_html": "<h1 id=\"what-to-do-with-all-data\"><a class=\"anchor\" href=\"#what-to-do-with-all-data\">#</a> What to do with all data?</h1>\n<p>如何处理所有数据？</p>\n<p>How to organize and use data from contextual inquiry?<br />\n 如何组织和使用情境访谈的数据</p>\n<h2 id=\"recommended-technique\"><a class=\"anchor\" href=\"#recommended-technique\">#</a> Recommended technique</h2>\n<p>Use <span class=\"orange\">Graphical Models (diagrams)</span><br />\n 推荐技术：使用图形模型</p>\n<ul>\n<li>Integrate<br />\n 整合</li>\n<li>Summarize<br />\n 总结</li>\n<li>Point back to the data<br />\n 指向数据</li>\n<li>Help inspire and guide design<br />\n 帮助启发和指导设计</li>\n<li>Provide shared focus<br />\n 提供共同的焦点</li>\n<li>Provide an intermediate deliverable outside design team<br />\n 提供一个中间交付的外部设计团队</li>\n</ul>\n<p>&quot;Opinions are cheap but insights are priceless.&quot;<br />\n 意见不多，但见识却多无价</p>\n<h2 id=\"why-graphical-为什么用图表\"><a class=\"anchor\" href=\"#why-graphical-为什么用图表\">#</a> Why Graphical 为什么用图表</h2>\n<ul>\n<li>Displays whole picture at once<br />\n 一次显示整个图片</li>\n<li>Reveals patterns<br />\n 显示图案</li>\n<li>Forces summarization and conciseness<br />\n 力求简洁</li>\n<li>Multiple models provides different perspectives<br />\n 多种模型提供不同的观点</li>\n</ul>\n<h2 id=\"affinity-diagram-亲和图\"><a class=\"anchor\" href=\"#affinity-diagram-亲和图\">#</a> Affinity Diagram 亲和图</h2>\n<ul>\n<li>Write down each quote/observation on a slip of paper<br />\n 将每个报价 / 观察结果记在纸条上</li>\n<li>Put up on board<br />\n 贴在墙上</li>\n<li>Coalesce items that have affinity<br />\n 具有亲和力的合并项\n<ul>\n<li>If they are saying similar things about an issue<br />\n 如果他们对某个问题有类似的发言</li>\n</ul>\n</li>\n<li>Give names to different groups (colors too)<br />\n 为不同的组命名（颜色也是）</li>\n<li>Continue grouping subgroups<br />\n 继续分组子组</li>\n<li>A hierarchy will be formed<br />\n 将形成一个层次结构</li>\n</ul>\n<blockquote>\n<p>Beyer &amp; Holtzblatt call this process &quot;Contextual Design&quot;</p>\n</blockquote>\n<ul>\n<li>\n<p>After collecting data – we go to the models<br />\n 收集数据后，进入模型</p>\n<ul>\n<li>Affinity diagrams are more important for teams and when there are lots of ideas<br />\n 亲和图对于团队以及何时有新主意很重要</li>\n</ul>\n</li>\n<li>\n<p>You will make the models directly from your transcripts<br />\n 你可以直接从笔记中制作模型。</p>\n</li>\n</ul>\n<p><img data-src=\"https://i.loli.net/2020/10/03/K2GCa1jk6xR9TVM.jpg\" alt=\"\" /></p>\n<h1 id=\"models\"><a class=\"anchor\" href=\"#models\">#</a> Models</h1>\n<ul>\n<li>\n<p>Flow Model<br />\n 流程模型<br />\n Communication and coordination necessary to perform task<br />\n 执行任务所需的沟通和协调</p>\n</li>\n<li>\n<p>Social / Cultural Model<br />\n 社会 / 文化模型<br />\n Constraints on work due to policy, culture, or values<br />\n 由于政策，文化或价值观而对工作造成的限制</p>\n</li>\n<li>\n<p>Artifact Model<br />\n 器物模型<br />\n Physical things used and created<br />\n 使用和创建的物理事物</p>\n</li>\n<li>\n<p>Physical Model<br />\n 物理模型<br />\n Layout of work environment as it affects the work.<br />\n 工作环境的布局，因为它会影响工作。</p>\n</li>\n<li>\n<p>Sequence / Step-by-Step Model<br />\n 顺序 / 逐步模型</p>\n<ul>\n<li>Detailed work steps<br />\n 详细的工作步骤</li>\n<li>&quot;Step by Step Task Interaction Model&quot;<br />\n 分步任务交互模型</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"in-all-models\"><a class=\"anchor\" href=\"#in-all-models\">#</a> In All Models</h2>\n<p>ALWAYS label everything you put on the model with the line-number in the transcript (or time on the video/audio, if no transcript).<br />\n 始终使用笔记中的行号，标记放在模型上的所有内容（如果没有笔记，则使用视频 / 音频的时间）。</p>\n<p>This allows you to get back to the raw data to see if a different interpretation is possible.<br />\n 这可以让你找回原始数据，并查看是否有其他解释。</p>\n<p>If there is no pointer back, then it is an unsupported Assumption and subject to additional scrutiny.<br />\n 如果没有指针返回，则表示它是一个不受支持的假设，需要进行额外的检查。</p>\n<p>Don’t make things up –show only what is available in the data<br />\n 不要整理 —— 只显示数据中可用的内容</p>\n<h2 id=\"breakdownbarriers-细分障碍\"><a class=\"anchor\" href=\"#breakdownbarriers-细分障碍\">#</a> Breakdown/Barriers 细分 / 障碍</h2>\n<ul>\n<li>\n<p>Problems that interfere with normal operation<br />\n 干扰正常运行的问题</p>\n</li>\n<li>\n<p>Represented in most models<br />\n 代表大多数型号</p>\n</li>\n<li>\n<p>Key opportunities and issues for design<br />\n 设计的主要机会和问题</p>\n</li>\n<li>\n<p>Often shown in red with a &quot;lightning bolt&quot;<br />\n 通常以 “闪电” 的形式显示为红色</p>\n</li>\n</ul>\n<p><img data-src=\"https://i.loli.net/2020/10/03/8buV2tnEKIPk3oc.png\" alt=\"\" /></p>\n<h3 id=\"additional-example\"><a class=\"anchor\" href=\"#additional-example\">#</a> Additional Example</h3>\n<ul>\n<li>New example: Giving a presentation</li>\n</ul>\n<p><img data-src=\"https://i.loli.net/2020/10/03/rVZmBMU1LWawDKn.jpg\" alt=\"\" /></p>\n<ul>\n<li>From the paper: 来自论文\n<ul>\n<li>Karen Cross, Adrienne Warmack, and Brad Myers.<br />\n&quot;Lessons Learned: Using Contextual Inquiry Analysis to Improve PDA Control of Presentations&quot;<br />\n 经验教训：用语境查询分析改善 PDA 控制的演讲</li>\n<li>Results influenced design of SlideShow Commander remote control product for mobile phones<br />\n 结果影响了手机上的幻灯片遥控产品的设计</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"flow-model-流程模型\"><a class=\"anchor\" href=\"#flow-model-流程模型\">#</a> Flow Model 流程模型</h2>\n<ul>\n<li>\n<p>Communication and coordination necessary to perform tasks<br />\n 执行任务所需的沟通和协调</p>\n<ul>\n<li>Work flow 工作流</li>\n<li>Who talks to whom? Who gives what to whom?<br />\n 谁与谁在对话？谁给了什么给谁？</li>\n</ul>\n</li>\n<li>\n<p>Key <em>roles</em> of individuals or groups<br />\n 个人或团体的关键作用</p>\n</li>\n<li>\n<p>Key <em>responsibilities</em> of that person with respect to the tasks<br />\n 该人在任务方面的主要职责</p>\n</li>\n<li>\n<p><em>Flow</em> of communication and artifacts, shown as arrows<br />\n 通信和工件流，如箭头所示</p>\n</li>\n<li>\n<p>Artifacts passed around<br />\n 工件传递</p>\n</li>\n<li>\n<p>Actions along the way<br />\n 沿途操作</p>\n</li>\n<li>\n<p>Places that things or people go<br />\n 要去的地方</p>\n</li>\n<li>\n<p>Breakdowns<br />\n 故障</p>\n</li>\n</ul>\n<h3 id=\"flow-model-structure-结构\"><a class=\"anchor\" href=\"#flow-model-structure-结构\">#</a> Flow Model Structure 结构</h3>\n<ul>\n<li>\n<p>Circles and/or icons = people or groups by role<br />\n 圆圈和 / 或图表 ➡️ 按角色分类的人或组</p>\n</li>\n<li>\n<p>Boxes = things (artifacts), places, files, etc.<br />\n 盒子 ➡️ 事物（物件）、位置、文件等</p>\n</li>\n<li>\n<p>Arrows = flow<br />\n 箭头 ➡️ 流向</p>\n</li>\n<li>\n<p>Red lightening bolts = breakdowns<br />\n 红色闪电标志 ➡️ 故障</p>\n</li>\n<li>\n<p>Times refer to time codes in video<br />\n 时间是视频中的时间码</p>\n<ul>\n<li>Could also refer to lines of a transcript<br />\n 也可以参考笔记的行号</li>\n<li><code>(A)</code>  = <ins>A</ins>ssumption 假设 = interpretation 解释\n<ul>\n<li>Note: not for team-member's opinions about the UI<br />\n 注意：不适用于团队成员对用户界面的看法</li>\n<li>Instead (A) is for assumptions about what userdid<br />\n 相反 (A) 是关于用户使用什么的假设</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>Note: you (interviewer) are never in any model<br />\n 注意：你作为采访者，永远不会参与任何模型</p>\n</blockquote>\n<h3 id=\"flow-model-components-组成\"><a class=\"anchor\" href=\"#flow-model-components-组成\">#</a> Flow Model Components 组成</h3>\n<h4 id=\"general\"><a class=\"anchor\" href=\"#general\">#</a> General</h4>\n<ul>\n<li>How do job responsibilities get assigned to people?<br />\n 如何分配工作职责给大家？</li>\n<li>How do they get help?<br />\n 大家如何获得帮助</li>\n<li>How do new tasks get assigned, and how are they carried out?<br />\n 如何分配新任务，以及如何执行它们？</li>\n<li>Coordination: where did each artifact come from and where does it go?<br />\n 协调：每个物件从何而来？\n<ul>\n<li>Problems with coordination: forgetting, timing, steps<br />\n 协调问题：遗忘，时间安排，步骤</li>\n</ul>\n</li>\n<li>Creates the &quot;bird's eye view&quot; of organizational structure<br />\n 创建组织结构的 “鸟瞰图”</li>\n</ul>\n<h4 id=\"web-网站\"><a class=\"anchor\" href=\"#web-网站\">#</a> Web 网站</h4>\n<ul>\n<li>NOT flow chart of pages visited<br />\n 没有访问页面的流程图</li>\n<li>How information and command flow among the site(s)<br />\n 信息和命令如何在站点之间流动</li>\n</ul>\n<h3 id=\"flow-model-example\"><a class=\"anchor\" href=\"#flow-model-example\">#</a> Flow Model Example</h3>\n<p class=\"gallery\" data-height=\"220\"><img data-src=\"https://i.loli.net/2020/10/03/H1NUKGpTPB3ilyf.jpg\" alt=\"cdw\" title=\"cdw\" /><br />\n<img data-src=\"https://i.loli.net/2020/10/03/LKCXvMo5VFUTjZp.jpg\" alt=\"stuttering\" title=\"stuttering\" /><br />\n<img data-src=\"https://i.loli.net/2020/10/03/EMYKdwQp1hvyqUH.jpg\" alt=\"ssc\" title=\"ssc\" /></p>\n<h2 id=\"social-model-社会模型\"><a class=\"anchor\" href=\"#social-model-社会模型\">#</a> Social Model 社会模型</h2>\n<ul>\n<li>\n<p>Culture of organization, family, community defines expectations, desires, policies, values and approach<br />\n 组织、家庭、社区的文化，定义了期望、欲望、政策、价值观和方法</p>\n</li>\n<li>\n<p>&quot;Culture is as invisible as water to a fish&quot;<br />\n 文化就像鱼的水一样看不见</p>\n<ul>\n<li>Pervasive, inescapable; yet invisible and intangible<br />\n 普遍存在，不可避免； 看不见，摸不着</li>\n</ul>\n</li>\n<li>\n<p>Types of influences:<br />\n 影响类型：</p>\n<ul>\n<li>Formal and informal policies<br />\n 正式和非正式政策</li>\n<li>Power of individuals and groups over each other<br />\n 个人和团体相互之间的力量</li>\n<li>Values of company or team<br />\n 公司或团队的价值观</li>\n<li>Work domain constraints<br />\n 工作领域限制</li>\n<li>Group's sense of identity<br />\n 集体的认同感</li>\n<li>People's emotions about what they do<br />\n 人对自己所做之事情的情感</li>\n<li>The style, values and preferences of individuals or teams<br />\n 个人或团队的风格，价值观和偏好</li>\n</ul>\n</li>\n<li>\n<p>More examples of what goes on social model:<br />\n 更多示例</p>\n<ul>\n<li>When acceptable to use a recording device<br />\n 当可接受使用记录设备时</li>\n<li>What friends might think<br />\n 朋友可能会怎么想</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"social-model-structure\"><a class=\"anchor\" href=\"#social-model-structure\">#</a> Social Model Structure</h3>\n<ul>\n<li>\n<p>Ovals for &quot;Influencers&quot;: individuals or groups, internal or external<br />\n 椭圆形 ➡️ “影响者”：内部或外部的个人或团体</p>\n</li>\n<li>\n<p>Thought bubbles for feelings/concerns that they actually expressed<br />\n 思想泡泡 ➡️ 他们实际表达的感受 / 担忧</p>\n</li>\n<li>\n<p>Arrows for direction of influence<br />\n 箭头 ➡️ 影响的方向</p>\n<ul>\n<li>Labels for samples of dialog showing type of influence and attitudes<br />\n 标签 ➡️ 样本的对话框，显示影响的类型和态度\n<ul>\n<li>Worded as commands<br />\n 文字 ➡️ 命令</li>\n</ul>\n</li>\n<li>Also show &quot;pushback&quot; –influence in other direction<br />\n 同时显示 “回推” ➡️ 对其他方向的影响</li>\n</ul>\n</li>\n<li>\n<p>Breakdowns<br />\n 故障</p>\n<ul>\n<li>In relationships among people<br />\n 在人与人的关系中</li>\n<li>No need to repeat previously shown problems<br />\n 无需重复先前提过的问题</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>NOTE: Not allowed to make stuff up!<br />\nJust what you actually have data to support!<br />\n 注意：不允许美化！只要实际需要支持的数据！</p>\n</blockquote>\n<h3 id=\"social-model-example\"><a class=\"anchor\" href=\"#social-model-example\">#</a> Social Model Example</h3>\n<p class=\"gallery\" data-height=\"220\"><img data-src=\"https://i.loli.net/2020/10/03/T8DAmik3YFqlBd5.png\" alt=\"cdw\" title=\"cdw\" /><br />\n<img data-src=\"https://i.loli.net/2020/10/03/mPFQ3BkzJgdW6nG.jpg\" alt=\"stuttering\" title=\"stuttering\" /><br />\n<img data-src=\"https://i.loli.net/2020/10/03/bkQuNDt4iAsTCzx.jpg\" alt=\"ssc\" title=\"ssc\" /></p>\n<h2 id=\"artifact-model-工件模型\"><a class=\"anchor\" href=\"#artifact-model-工件模型\">#</a> Artifact Model 工件模型</h2>\n<ul>\n<li>\n<p>Artifacts: What people create, modify and use as part of tasks<br />\n 工件：人们在任务中创建、修改和使用的内容</p>\n</li>\n<li>\n<p>Reveal traces of people’s work practices<br />\n 揭示人们工作习惯的痕迹</p>\n</li>\n<li>\n<p>Examples:</p>\n<ul>\n<li>Handwritten notes and signatures on hardcopy project plans -&gt; information flow and approval<br />\n 硬拷贝项目计划上的手写注释和签名 -&gt; 信息流和批准</li>\n<li>Fancy formatting on spreadsheet -&gt; looks are important<br />\n 电子表格上的精美格式 -&gt; 外观很重要</li>\n<li>Screen shots showing problematic features<br />\n 屏幕截图显示有问题的功能</li>\n</ul>\n</li>\n<li>\n<p>Model = drawing, photograph or copy of real artifact<br />\n 模型 = 实际工件的图纸、照片或副本</p>\n</li>\n<li>\n<p>Annotate with observations<br />\n 注释与观测</p>\n</li>\n</ul>\n<h3 id=\"artifact-model-example\"><a class=\"anchor\" href=\"#artifact-model-example\">#</a> Artifact Model Example</h3>\n<p class=\"gallery\" data-height=\"220\"><img data-src=\"https://i.loli.net/2020/10/03/4vYOWk9oLc1dhIT.png\" alt=\"cdw\" title=\"cdw\" /><br />\n<img data-src=\"https://i.loli.net/2020/10/03/QUbX6kyqEdtgoil.jpg\" alt=\"stuttering\" title=\"stuttering\" /><br />\n<img data-src=\"https://i.loli.net/2020/10/03/AgrOk9nzyMiWfCe.jpg\" alt=\"stuttering\" title=\"stuttering\" /><br />\n<img data-src=\"https://i.loli.net/2020/10/03/jnNCtPaZGwrVmKR.jpg\" alt=\"stuttering\" title=\"stuttering\" /></p>\n<h2 id=\"physical-model-物理模型\"><a class=\"anchor\" href=\"#physical-model-物理模型\">#</a> Physical Model 物理模型</h2>\n<ul>\n<li>\n<p>Way the physical environment affects tasks<br />\n 物理环境影响任务的方式</p>\n<ul>\n<li>E.g, placement of items on a desk<br />\n 例如，将物品放在桌子上</li>\n<li>Proximity of printers<br />\n 邻近打印机</li>\n<li>Can't hold a device with a keyboard while standing up<br />\n 站立时无法手持键盘设备</li>\n</ul>\n</li>\n<li>\n<p>In presentation example, where people are and layout of environment<br />\n 在演示示例中，人在哪里以及环境的布局</p>\n</li>\n</ul>\n<blockquote>\n<p>Note: Physical model not always relevant or needed<br />\nSeems less important for web, unless mobile<br />\n 注意：物理模型并非始终相关或需要<br />\n对于网站似乎就不太重要，除非是移动设备</p>\n</blockquote>\n<h3 id=\"physical-model-components\"><a class=\"anchor\" href=\"#physical-model-components\">#</a> Physical Model Components</h3>\n<ul>\n<li>Places in which work occurs<br />\n 工作场所</li>\n<li>Physical structures which limit or define the space<br />\n 限制或定义空间的物理结构</li>\n<li>Usage and movement within the space<br />\n 空间内的使用和移动</li>\n<li>Hardware and other artifacts used<br />\n 使用的硬件和其他工件</li>\n<li>Layout of tools and artifacts<br />\n 工具和工件的布局</li>\n<li>Positions of people within environment<br />\n 人们在环境中的位置</li>\n<li>Breakdowns due to physical environment<br />\n 由于物理环境造成的故障</li>\n</ul>\n<h3 id=\"physical-model-example\"><a class=\"anchor\" href=\"#physical-model-example\">#</a> Physical Model Example</h3>\n<p><img data-src=\"https://i.loli.net/2020/10/05/FsSBWwNURtrIvCq.jpg\" alt=\"ssc\" title=\"ssc\" /></p>\n<h2 id=\"sequence-model-序列模型\"><a class=\"anchor\" href=\"#sequence-model-序列模型\">#</a> Sequence Model 序列模型</h2>\n<ul>\n<li>Similar to the Flow Model<br />\n 与流程模型相似</li>\n<li><em>Steps</em> taken to complete a task<br />\n 踏踏实实地完成任务</li>\n<li><em>Triggers</em> that cause the step to happen<br />\n 导致步骤发生的触发器\n<ul>\n<li>E.g., at a particular time; when something else happens<br />\n 例如，在特定时间； 当其他事情发生时</li>\n</ul>\n</li>\n<li><em>Intent</em> is key to understanding the steps<br />\n 意图是理解步骤的关键\n<ul>\n<li>Also called the goal<br />\n 也称为目标</li>\n<li>Why each step is performed, and why in that order<br />\n 为什么要执行每个步骤，以及为什么要按顺序进行</li>\n</ul>\n</li>\n<li>Arrows to show order of the steps<br />\n 箭头显示步骤顺序\n<ul>\n<li>Can have loops<br />\n 可以有循环</li>\n</ul>\n</li>\n<li>Breakdowns in communication or coordination<br />\n 沟通或协调失误</li>\n</ul>\n<h3 id=\"sequence-model-components\"><a class=\"anchor\" href=\"#sequence-model-components\">#</a> Sequence Model Components</h3>\n<ul>\n<li>Can choose level of detail depending on focus (what investigating)<br />\n 可以根据重点，选择详细程度（进行调查）\n<ul>\n<li>E.g., for writing a letter:<br />\n 例如，写一封信：\n<ul>\n<li>High-level (functional level): Find most recent letter written to same person, open it, delete date, replace with new date, delete contents, type new contents, …<br />\n 高级（功能级别）：查找写给同一个人的最新字母，打开它，删除日期，替换为新日期，删除内容，键入新内容，…</li>\n<li>Low level (user interface level): Switch windows explorer to details view, Sort files by date, double-click on top item, check &quot;To:&quot; to see if correct person, click and drag across date field, …<br />\n 低级别（用户界面级别）：将 Windows 资源管理器切换到详细信息视图，按日期对文件排序，双击顶部项目，选中 “收件人：” 以查看是否正确的人，单击并在日期字段中拖动，…</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Notice hesitations and errors<br />\n 注意犹豫和错误\n<ul>\n<li>Interrupt and ask why or what expected<br />\n 中断，并询问原因或期望</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"sequence-model-example\"><a class=\"anchor\" href=\"#sequence-model-example\">#</a> Sequence Model Example</h3>\n<p><img data-src=\"https://i.loli.net/2020/10/05/TinG7lFmWNxBaLV.jpg\" alt=\"cdw\" title=\"cdw\" /></p>\n<h2 id=\"creating-models-创建模型\"><a class=\"anchor\" href=\"#creating-models-创建模型\">#</a> Creating Models 创建模型</h2>\n<ul>\n<li>\n<p>Create models generalizing over all interviewees<br />\n 建立涵盖所有受访者的模型</p>\n<ul>\n<li>&quot;Consolidated&quot; models<br />\n “合并” 模型</li>\n<li>Barrier summaries<br />\n 屏障摘要</li>\n<li>Key Idea: Induce generalizations from concrete data<br />\n 关键思想：从具体数据中得出概括\n<ul>\n<li>Don't rely on intuition alone<br />\n 不要只凭直觉</li>\n<li>Don't deduce from logical abstractions<br />\n 不要从逻辑抽象中推断</li>\n<li>Example:\n<ul>\n<li>Logic says system manager will diagnose the reason behind a system failure.<br />\n 逻辑表示系统管理员将诊断系统故障的原因。</li>\n<li>Actual practice: System manager tries standard fixes first (like reboot) &amp; diagnoses only if necessary<br />\n 实际做法：系统管理员首先尝试进行标准修复（例如重新启动）并仅在必要时进行诊断</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>Main goal: Deduce the intent<br />\n 主要目标：推论意图</p>\n</li>\n</ul>\n<h2 id=\"what-to-do-with-models-模型的用处\"><a class=\"anchor\" href=\"#what-to-do-with-models-模型的用处\">#</a> What to do with Models 模型的用处</h2>\n<ul>\n<li>User data drives innovation<br />\n 用户数据推动创新\n<ul>\n<li>Solve problems (breakdowns) identified in models<br />\n 解决模型中发现的问题（故障）</li>\n<li>Grounded brainstorming<br />\n 头脑风暴</li>\n</ul>\n</li>\n<li>Flow model<br />\n 流程模型\n<ul>\n<li>Eliminate flows, roles, redundant data entry<br />\n 消除流程，角色，冗余数据输入</li>\n</ul>\n</li>\n<li>Social / Cultural model<br />\n 社会 / 文化模型\n<ul>\n<li>Increase communication, reinforce positive values<br />\n 增加沟通，增强正面价值</li>\n</ul>\n</li>\n<li>Artifact model:<br />\n 工件模型\n<ul>\n<li>Guide requirements, metaphors, remove screen problems<br />\n 指导要求，隐喻，消除屏幕问题</li>\n</ul>\n</li>\n<li>Physical model:<br />\n 物理模型\n<ul>\n<li>Depend only on what is available, reduce motion, improve flow of artifacts<br />\n 仅取决于可用的东西，减少运动，改善伪影的流动</li>\n</ul>\n</li>\n<li>Sequence model:<br />\n 序列模型\n<ul>\n<li>Eliminate, automate steps<br />\n 消除步骤并使其自动化</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"usability-engineering-可用性工程\"><a class=\"anchor\" href=\"#usability-engineering-可用性工程\">#</a> Usability Engineering 可用性工程</h1>\n<ul>\n<li>Parallel with &quot;software engineering&quot;<br />\n 与 “软件工程” 并行</li>\n<li>Make use of usability more like engineering:<br />\n 像工程一样使用可用性：</li>\n<li>&quot;Engineering&quot; “工程学”\n<ul>\n<li>Measurable, process-oriented<br />\n 可衡量的，面向过程的</li>\n<li>Not just &quot;art&quot;<br />\n 不只是 “艺术”</li>\n</ul>\n</li>\n<li>Term coined by John Bennett in the 1980's<br />\nJohn Bennett 在 1980 年代创造的术语</li>\n<li>ISO 13407 &amp; 13529 standards discuss UE process<br />\nISO 13407 和 13529 标准，评估 UE 流程</li>\n</ul>\n<h2 id=\"usability-engineering-steps-设计思维的步骤\"><a class=\"anchor\" href=\"#usability-engineering-steps-设计思维的步骤\">#</a> Usability Engineering steps 设计思维的步骤</h2>\n<ol>\n<li>Study the users and their tasks<br />\n 研究用户及其任务</li>\n<li>Study the competition<br />\n 研究比赛</li>\n<li>Set usability goals<br />\n 设定可用性目标</li>\n<li>Participatory Design<br />\n 参与式设计</li>\n<li>Coordinating the Total Interface for Consistency<br />\n 协调总接口的一致性\n<ul>\n<li>Include documentation, help, etc.<br />\n 包括文档，帮助等。</li>\n</ul>\n</li>\n<li>Guidelines and Heuristic Evaluation<br />\n 准则和启发式评估\n<ul>\n<li>Evaluate your interface according to the guidelines.<br />\n 根据指南评估您的界面。</li>\n</ul>\n</li>\n<li>Make prototypes of the system early and quickly<br />\n 尽早快速制作系统原型</li>\n<li>Empirical testing<br />\n 实证检验</li>\n<li>Iterative design with usability analysis<br />\n 具有可用性分析的迭代设计</li>\n<li>Collect feedback from field use<br />\n 收集现场使用的反馈</li>\n</ol>\n<h2 id=\"know-the-user\"><a class=\"anchor\" href=\"#know-the-user\">#</a> Know the User</h2>\n<ul>\n<li>Study the intended users and the use of the product<br />\n 研究目标用户和产品的使用\n<ul>\n<li>Best if developers go and interview them personally<br />\n 最好是开发人员亲自去采访他们</li>\n</ul>\n</li>\n<li>Difficult because<br />\n 困难包括\n<ul>\n<li>May want to hide the developers<br />\n 可能要隐藏开发人员</li>\n<li>Reluctance of sales people<br />\n 销售人员的不情愿</li>\n<li>Reluctance of users<br />\n 用户的不情愿</li>\n</ul>\n</li>\n<li>User Characteristics<br />\n 用户特征\n<ul>\n<li>Work experience, education level, age, previous computer experience<br />\n 工作经验，学历，年龄，以前的计算机经验</li>\n<li>Time for learning, training<br />\n 学习，培训时间</li>\n<li>Available hardware (monitor size, acceptance of plugins, cell-phones vs. desktop)<br />\n 可用的硬件（显示器大小，接受插件，手机与台式机的对比）</li>\n<li>Social context of use<br />\n 使用的社会环境</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"personas-用户画像\"><a class=\"anchor\" href=\"#personas-用户画像\">#</a> Personas 用户画像</h2>\n<ul>\n<li>Popularized by Alan Cooper 由艾伦・库珀推广</li>\n<li>User archetype you can use to help guide design decisions<br />\n 用户原型可以用来帮助指导设计决策</li>\n<li>Created after contextual inquiry or equivalent<br />\n 经过情境访谈或等效查询后创建</li>\n<li>Summarizes properties of a group of users<br />\n 汇总一组用户的属性</li>\n<li>Use: helps keep designers &amp; implementers focused on user needs.<br />\n 使用：帮助设计师和实施者专注于用户需求。</li>\n<li>Include: behavior patterns, goals, skills, attitudes, and environment, with a few fictional personal details to bring the persona to life<br />\n 包括：行为模式，目标，技能，态度和环境，以及一些虚构的个人详细信息，使人物形象栩栩如生</li>\n<li>Have a small number for each product<br />\n 每个产品都有少量\n<ul>\n<li>One for each important group of users<br />\n 每个重要用户组一个</li>\n</ul>\n</li>\n</ul>\n<p>From: <span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5zdGVwdHdvLmNvbS5hdS9wYXBlcnMva21jX3BlcnNvbmFzLw==\">http://www.steptwo.com.au/papers/kmc_personas/</span></p>\n<p>Bob is 52 years old and works as a mechanic with an organisation offering road service to customers when their car breaks down. He has worked in the job for the past 12 years and knows it well. Many of the younger mechanics ask Bob for advice when they meet up in the depot as he always knows the answer to tricky mechanical problems. Bob likes sharing his knowledge with the younger guys, as it makes him feel a valued part of the team.</p>\n<p>Bob works rolling day and night shifts and spends his shifts attending breakdowns and lockouts (when customers lock their keys in the car). About 20% of the jobs he attends are complex and he occasionally needs to refer to his standard issue manuals. Bob tries to avoid using the manuals in front of customers as he thinks it gives the impression he doesn't know what he's doing.</p>\n<p>Bob has seen many changes over the years with the company and has tried his best to move with the times. However he found it a bit daunting when a new computer was installed in his van several years ago, and now he has heard rumoursthat the computer is going to be upgraded to one with a bigger screen that's meant to be faster and better.</p>\n<p>Bob's been told that he will be able to access the intranet on the new computer. He has heard about the intranet and saw once in an early version on his manager's computer. He wonders if he will be able to find out want'sgoing on in the company more easily, especially as customers' seem to know more about the latest company news than he does when he turns up at a job. This can be embarrassing and has been a source of frustration for Bob throughout his time with the company.</p>\n<p>Bob wonders if he will be able to cope with the new computer system. He doesn't mind asking his grandchildren for help when he wants to send an email to his brother overseas, but asking the guys at work for help is another story.</p>\n<h1 id=\"task-analysis\"><a class=\"anchor\" href=\"#task-analysis\">#</a> Task Analysis</h1>\n<ul>\n<li>What tasks the users will do?<br />\n 用户将执行哪些任务？</li>\n<li>Involve users in this<br />\n 让用户参与其中</li>\n<li>Important to include exceptions and error conditions<br />\n 重要的是要包含异常和错误条件</li>\n<li>Many different kinds and variations on Task Analyses<br />\n 任务分析的许多不同种类和变体\n<ul>\n<li>Nielsen's (in the book Designing Web Usability: The Practice of Simplicity)<br />\n《设计 Web 可用性：简单实践》 - Nielsen</li>\n<li>&quot;Hierarchical Task Analysis&quot;<br />\n 分层任务分析</li>\n<li>(Better to use CI)<br />\n 最好使用 CI</li>\n</ul>\n</li>\n<li>Need tasks to design CIs, usability analysis, scenarios<br />\n 需要任务来设计 CI，可用性分析和方案</li>\n</ul>\n<h2 id=\"task-inventory-任务清单\"><a class=\"anchor\" href=\"#task-inventory-任务清单\">#</a> Task Inventory 任务清单</h2>\n<p><img data-src=\"https://i.loli.net/2020/10/05/pHyfF1z78OYPXM5.jpg\" alt=\"Task Inventory\" /></p>\n<h2 id=\"user-centered-task-analysis-以用户为中心的任务分析\"><a class=\"anchor\" href=\"#user-centered-task-analysis-以用户为中心的任务分析\">#</a> User Centered Task Analysis 以用户为中心的任务分析</h2>\n<ul>\n<li>Based on what user will do<br />\n 根据用户的意愿\n<ul>\n<li>Not what system will do<br />\n 没有什么系统会做</li>\n</ul>\n</li>\n<li>Not a list of system features<br />\n 未列出系统功能</li>\n<li>High-level 高水平</li>\n<li>Nothing about how to accomplish at user level<br />\n 关于如何在用户级别完成操作\n<ul>\n<li>No discussion of web pages, buttons, filling in fields, etc.<br />\n 不讨论网页，按钮，填写字段等。</li>\n</ul>\n</li>\n<li>Example, company YYY menu structure based on functions rather than tasks =&gt; Inefficient for every task!<br />\n 例如，公司 YYY 菜单结构基于功能而不是任务 =&gt; 效率低下！</li>\n</ul>\n<h2 id=\"components-of-task-analysis-任务分析的组成\"><a class=\"anchor\" href=\"#components-of-task-analysis-任务分析的组成\">#</a> Components of Task Analysis 任务分析的组成</h2>\n<ul>\n<li>Goals:<br />\n 目标：\n<ul>\n<li>What are the actions this task is supposed to accomplish?<br />\n 该任务应完成的动作是什么？</li>\n<li>Remember: not howit will be done, just what<br />\n 请记住：不是怎么做，而是</li>\n<li>Think alouds reveal why<br />\n 大胆想出原因</li>\n</ul>\n</li>\n<li>Information needs<br />\n 信息需求\n<ul>\n<li>What does the user need to know or view to do this task?<br />\n 用户需要知道或查看哪些内容才能执行此任务？</li>\n<li>Includes what needs to be on the screen.<br />\n 包括屏幕上需要显示的内容。</li>\n<li>Both:<br />\n 两者：\n<ul>\n<li>What does the system need to show?<br />\n 系统需要显示什么？</li>\n<li>What does the user need to know?<br />\n 用户需要知道什么？</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"scenarios-of-task-analysis-任务分析的方案\"><a class=\"anchor\" href=\"#scenarios-of-task-analysis-任务分析的方案\">#</a> Scenarios of Task Analysis 任务分析的方案</h2>\n<ul>\n<li>Scenarios (stories) of typical uses:<br />\n 典型场景（故事）\n<ul>\n<li>Related to software engineering &quot;use cases&quot;<br />\n 有关软件工程的 “用例”</li>\n<li>Specific example of how a user might use the system.<br />\n 用户如何使用系统的特定示例</li>\n<li>One scenario for each major class of users doing each kind of important task<br />\n 每个主要类别的用户都需要执行一种重要任务的场景</li>\n<li>Will want to make those tasks efficient and easy<br />\n 想要使那些任务高效且容易</li>\n<li>What is important to optimize?<br />\n 什么是最重要的优化？</li>\n<li>Will significantly affect the design<br />\n 会严重影响设计</li>\n<li>Try to include lots of exceptional cases<br />\n 尝试包含很多例外情况</li>\n<li>Shows how the interface will be used<br />\n 显示如何使用界面</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"functional-analysis-功能分析\"><a class=\"anchor\" href=\"#functional-analysis-功能分析\">#</a> Functional Analysis 功能分析</h2>\n<ul>\n<li>What really needs to be done<br />\n 真正需要做什么</li>\n<li>Not just the way users are doing it now<br />\n 不只是用户现在的操作方式\n<ul>\n<li>May be a more efficient or more appropriate way to achieve same task<br />\n 可能是完成相同任务的更有效或更合适的方法</li>\n</ul>\n</li>\n<li>Usually, companies are good at this<br />\n 通常，公司擅长于此\n<ul>\n<li>However, may include extra functions that are not useful<br />\n 但是，可能包括一些没有用的额外功能</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"competitive-analysis-竞品分析\"><a class=\"anchor\" href=\"#competitive-analysis-竞品分析\">#</a> Competitive Analysis 竞品分析</h2>\n<ul>\n<li>&quot;Know the competition&quot;<br />\n“知道竞品”</li>\n<li>For usability and function<br />\n 为了可用性和功能</li>\n<li>Read trade-press reviews of products or web sites<br />\n 阅读产品或网站的贸易新闻评论</li>\n<li>Visit competitor's web sites<br />\n 访问竞争对手的网站\n<ul>\n<li>Also, web sites for related products<br />\n 以及，相关产品的网站</li>\n</ul>\n</li>\n<li>Importance of various features, issues<br />\n 各种功能，问题的重要性\n<ul>\n<li>Pictures, navigation, search, prices, shipping, metaphors<br />\n 图片，导航，搜索，价格，运输，隐喻</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"goal-setting-目标设定\"><a class=\"anchor\" href=\"#goal-setting-目标设定\">#</a> Goal Setting 目标设定</h2>\n<ul>\n<li>What does it mean to be &quot;easy to use&quot;?<br />\n“易于使用” 是什么意思？</li>\n<li>Some proposed definitions:<br />\n 一些建议的定义：\n<ul>\n<li>&quot;I like it&quot;<br />\n“我喜欢”</li>\n<li>&quot;I always do it that way&quot;<br />\n“我总是那样做”</li>\n<li>&quot;That is the way the xxx system does it&quot;<br />\n“这就是 xxx 系统的处理方式”</li>\n<li>&quot;It is easy to implement&quot;<br />\n“易于实施”</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"improved-改善\"><a class=\"anchor\" href=\"#improved-改善\">#</a> Improved 改善</h3>\n<ul>\n<li>\n<p>Objective Criteria<br />\n 客观标准</p>\n<ul>\n<li>Can be learned in less than 2 minutes<br />\n 不到 2 分钟即可学会</li>\n<li>User will perform 2 error-free purchases per session<br />\n 用户每次会话将执行 2 次无错购买</li>\n<li>The error rate will be lower than 2 per 10 operations<br />\n 每 10 次操作的错误率将低于 2</li>\n<li>Tasks will be performed in 30% of the time it takes using the competitor’s system<br />\n 使用竞争对手的系统将在 30％的时间内完成任务</li>\n<li>Users will have a high satisfaction with the system as measured by a survey.<br />\n 通过问卷调查，用户会对系统高度满意。</li>\n</ul>\n</li>\n<li>\n<p>Explicit, specific, measurable metrics.<br />\n 明确，具体，可衡量的指标。</p>\n</li>\n<li>\n<p>Allows objective decision making.<br />\n 允许客观决策。</p>\n</li>\n<li>\n<p>Tradeoffs, so have to pick relevant metrics<br />\n 权衡，所以必须选择相关指标</p>\n</li>\n<li>\n<p>Some measures:<br />\n 一些措施：</p>\n<ul>\n<li>Learnability: Time to learn how to do specific tasks (at a specific proficiency)<br />\n 学习能力：时间来学习如何执行特定的任务（以特定的熟练程度）</li>\n<li>Efficiency: (Expert) Time to execute benchmark (typical) tasks. Throughput.<br />\n 效率：（专家）执行基准（典型）任务的时间。 吞吐量。</li>\n<li>Errors: Error rate per task. Time spent on errors. Error severity.<br />\n 错误：每个任务的错误率。 花在错误上的时间。 错误严重性。</li>\n<li>Lots of measures from web analytics:<br />\n 网络分析中的许多措施：\n<ul>\n<li>Abandonment rates, Completion rates, Clickthroughs,% completions, etc.<br />\n 放弃率，完成率，点击率，完成率等。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>Subjective satisfaction: Questionnaire.<br />\n 主观满意度：问卷。</p>\n</li>\n</ul>\n<h2 id=\"financial-impact-财务影响\"><a class=\"anchor\" href=\"#financial-impact-财务影响\">#</a> Financial Impact 财务影响</h2>\n<ul>\n<li>Prove It! 证明给我看！</li>\n<li>Demonstrates the importance of usability<br />\n 展示可用性的重要性</li>\n<li>#users * their salary per hour * #hours on system = cost of system per hour<br />\n＃个用户 * 他们每小时的薪水 *＃个系统小时数 = 每小时系统成本</li>\n<li>Estimate savings of reduced training, error time, need for support staff, etc.<br />\n 估计减少培训、减少错误时间、需要支持人员等，而节省的费用。</li>\n<li>Tells how much time to spend on usability<br />\n 告诉您要花多少时间在可用性上</li>\n<li>Whole books on this topic:<br />\n 有关此主题的整本书：\n<ul>\n<li>Randolph G. Bias and Deborah J. Mayhew, Eds.Cost-Justifying Usability: An Update for the Internet Age, Second Edition. Morgan Kaufmann, 2005<br />\n 成本合理性：互联网时代的更新</li>\n<li>Randolph G. Bias and Deborah J. Mayhew, Cost-Justifying Usability, Boston: Academic Press, 1994.<br />\n 合理成本可用性</li>\n</ul>\n</li>\n</ul>\n",
            "tags": [
                "计算机科学",
                "Master of Software Engineering",
                "ITMD 534. Human Computer Interaction",
                "人机交互"
            ]
        },
        {
            "id": "https://shoka.lostyu.me/computer-science/mse/itmd-534/lecture-2/",
            "url": "https://shoka.lostyu.me/computer-science/mse/itmd-534/lecture-2/",
            "title": "Lecture 2. Contextual Inquiry",
            "date_published": "2020-09-18T11:56:45.000Z",
            "content_html": "<h1 id=\"how-to-innovate\"><a class=\"anchor\" href=\"#how-to-innovate\">#</a> How to Innovate</h1>\n<table>\n<tbody>\n<tr>\n<td>Contextual Inquiry</td>\n<td>A vs. B studies</td>\n</tr>\n<tr>\n<td>Contextual Analysis (Design)</td>\n<td>Questionnaires</td>\n</tr>\n<tr>\n<td>Paper prototypes</td>\n<td>Surveys</td>\n</tr>\n<tr>\n<td>Think-aloud protocols</td>\n<td>Interaction Relabeling</td>\n</tr>\n<tr>\n<td>Heuristic Evaluation</td>\n<td>Log analysis</td>\n</tr>\n<tr>\n<td>Story Boarding</td>\n<td>Focus groups</td>\n</tr>\n<tr>\n<td>Affinity diagrams (WAAD)</td>\n<td>Card sorting</td>\n</tr>\n<tr>\n<td>Personas</td>\n<td>Diary studies</td>\n</tr>\n<tr>\n<td>Wizard of Oz</td>\n<td>Improvisation</td>\n</tr>\n<tr>\n<td>Task analysis</td>\n<td>Use cases</td>\n</tr>\n<tr>\n<td>Story Boarding</td>\n<td>Scenarios</td>\n</tr>\n<tr>\n<td>Cognitive Walkthrough</td>\n<td>Cognitive Dimensions</td>\n</tr>\n<tr>\n<td>KLM and GOMS (CogTool)</td>\n<td>&quot;Speed Dating&quot;</td>\n</tr>\n<tr>\n<td>Video prototyping</td>\n</tr>\n<tr>\n<td>Body storming</td>\n</tr>\n<tr>\n<td>Expert interviews</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"contextual-inquiry-情境访谈\"><a class=\"anchor\" href=\"#contextual-inquiry-情境访谈\">#</a> Contextual Inquiry 情境访谈</h1>\n<dl>\n<dt>Definition:</dt>\n<dd>A kind of &quot;ethnographic&quot; or &quot;participatory design&quot; method<br />\n 一种人种学方法或参与式设计<br />\n Combines aspects of other methods: 结合其他几种方法\n<ul>\n<li>Interviewing, think-aloud protocols, participant/observer in the context of the work<br />\n 面试，思考型协议，工作背景下的参与者 / 观察者</li>\n<li>User is given control of interview where the interviewer learns from the interviewee in an open ended way<br />\n 给予用户访问控制权</li>\n<li>Possible to derive objective conclusions<br />\n 可能得出客观的结论</li>\n</ul>\n</dd>\n</dl>\n<ul>\n<li>\n<p>Interpretive field research method 解释性现场研究方法</p>\n</li>\n<li>\n<p>Depends on conversations with users in the context of their work<br />\n 取决于与他们工作的背景</p>\n</li>\n<li>\n<p>Used to define requirements, plans and designs.<br />\n 用于定义需求，计划和设计。<br />\nDiscover the real requirements of the work<br />\n 发现工作的真正需求</p>\n</li>\n<li>\n<p>Drives the creative process: 推动创作过程</p>\n<ul>\n<li>In original design 原创设计</li>\n<li>In considering new features or functionality 在考虑新功能时</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"context-情景\"><a class=\"anchor\" href=\"#context-情景\">#</a> Context 情景</h2>\n<dl>\n<dt>Definition:</dt>\n<dd>The interrelated conditions within which something occurs or exists<br />\nsth 发生或存在相关的条件</dd>\n</dl>\n<ul>\n<li>\n<p>Understand work in its natural environment 真实环境中的工作</p>\n<ul>\n<li>Go to the user 基于用户</li>\n<li>Observe real work 观察实际工作</li>\n<li>Use real examples and artifacts 使用真实的例子和产品<br />\n &quot;Artifact&quot;: An object created by human workmanship 由人工制作的对象</li>\n<li>Interview while she/he is working 工作期间的面谈</li>\n<li>More reliable than asking them 比提问更有效</li>\n</ul>\n</li>\n<li>\n<p>Context exists even when not a &quot;work&quot; activity</p>\n<ul>\n<li>Use &quot;work&quot; here just to mean &quot;doing something&quot;</li>\n<li>Can be home, entertainment, etc.</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"context-elements-情景元素\"><a class=\"anchor\" href=\"#context-elements-情景元素\">#</a> Context Elements 情景元素</h2>\n<ul>\n<li>User's work space 用户的工作空间</li>\n<li>User's work 用户的工作内容</li>\n<li>User's workarounds 用户的解决方法</li>\n<li>User's work intentions 用户的工作意图</li>\n<li>User's words (language used) 用户的文字（使用的语言）</li>\n<li>Tools used 使用的工具</li>\n<li>How people work together 人们如何一起工作</li>\n<li>Business goals 业务目标</li>\n<li>Organizational and cultural structure 组织文化结构</li>\n</ul>\n<h2 id=\"why-context\"><a class=\"anchor\" href=\"#why-context\">#</a> Why Context</h2>\n<ul>\n<li>\n<p>Design complete work process 设计完整的工作流程</p>\n<ul>\n<li>Fits into &quot;fabric&quot; of entire operations<br />\n 适合整个运营的 &quot;结构&quot;</li>\n<li>Not just &quot;point solutions&quot; to specific problems<br />\n 不仅仅是针对特定问题的 &quot;解决方案&quot;</li>\n</ul>\n</li>\n<li>\n<p>Integration! 整合</p>\n<ul>\n<li>Consistency, effectiveness, efficiency, coherent<br />\n 一致性，有效性，效率，连贯性</li>\n</ul>\n</li>\n<li>\n<p>Design from data 根据数据进行设计</p>\n<ul>\n<li>Not just opinions, negotiation<br />\n 不只是意见，谈判</li>\n<li>Not just a list of features<br />\n 不只是功能列表</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"ci-difference\"><a class=\"anchor\" href=\"#ci-difference\">#</a> CI Difference</h2>\n<table>\n<tbody>\n<tr>\n<td>\n<p>Interviews, Surveys, Focus Groups<br />\n 访谈，调查，焦点小组</p>\n</td>\n<td>\n<p>Contextual Inquiry<br />\n 情境访谈</p>\n</td>\n</tr>\n<tr>\n<td>\n<p>Summary data &amp; abstractions<br />\n 摘要数据和抽象</p>\n</td>\n<td>\n<p>Ongoing experience &amp; concrete data<br />\n 持续的经验和具体数据</p>\n</td>\n</tr>\n<tr>\n<td>\n<p>What customers <strong>say</strong><br />\n 客户怎么说</p>\n</td>\n<td>\n<p>What users <strong>do</strong><br />\n 用户做什么</p>\n</td>\n</tr>\n<tr>\n<td>\n<p><strong>Subjective</strong><br />\n 主观</p>\n</td>\n<td>\n<p><strong>Objective</strong><br />\n 客观</p>\n</td>\n</tr>\n<tr>\n<td>\n<p>Limited by reliability of human memory<br />\n 受人类记忆可靠性的限制</p>\n</td>\n<td>\n<p>Spontaneous, as it happens<br />\n 自发发生</p>\n</td>\n</tr>\n<tr>\n<td>\n<p>What customers <strong>think</strong> they want<br />\n 客户认为他们想要什么</p>\n</td>\n<td>\n<p>What users actually <strong>need</strong><br />\n 用户实际需要什么</p>\n</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"ci-quick-review-video\"><a class=\"anchor\" href=\"#ci-quick-review-video\">#</a> CI Quick Review Video</h2>\n<p>Contextual inquiry can be considered as three parts.<br />\n 情境访谈可以分为三个部分。</p>\n<ol>\n<li>\n<p>The first is identifying the users.<br />\n 首先是识别用户。</p>\n<p>Trust the identifying users' your goal should be to visit enough of the right people together, quality data without being swamped.<br />\n 你的目标应该是访问足够多的合适的人，高质量的数据不被淹没。<br />\nEvery project is different.<br />\nBut my rule of thumb is to visit around six people and at least two from each significantly different user group.<br />\n 我的经验是访问大约六个人，每个明显不同的用户组至少有两个人。\t<br />\nYou also need to consider budget as the rule of thumb. Visiting six people will probably take two or three days of planning and organizing, three days for the visits and two or three days of analysis.<br />\n 你还需要考虑预算。拜访六个人可能需要 2-3 天的计划和组织，\t3 天的访问，和 2-3 天的分析。\t<br />\nIt's time well spent, but it's a considerable undertaking. Squeezing your timeframe may be a false economy.<br />\n 这很花时间，但这是一项相当大的任务。压缩你的时间可能是一种错误的节约。</p>\n</li>\n<li>\n<p>The second is scheduling and conducting visits.<br />\n 第二是安排和进行访问。</p>\n<p>Don't underestimate the effort and scheduling. Some people may be reluctant to commit too much time, so make sure you clearly communicate the benefits.<br />\n 不要低估努力和时间安排。有些人可能不愿意花太多时间，所以要确保你清楚地传达了好处。<br />\nGenerally, when our visit is likely to be acceptable, particularly if people understand what you were doing and make their life. But always let users know what to expect, that is that you want to observe them carrying out their regular to absence, prepare materials such as consent forms, questionnaires, and scripts in advance, and make sure any recording equipment is working.<br />\n 一般来说，我们的访问可能是可以接受的，特别是如果人们理解你在做什么，并改善他们的生活。但是要让用户知道期望什么，就是你要观察他们通常缺少什么，提前准备好同意书、问卷和脚本等材料，确保所有录音设备都正常工作。<br />\nTake a colleague with you on the visits to discuss your observations and put their implications. Or take someone who, again, value from visiting users, a business person, or develop perhaps,<br />\n 带一位同事与你一起访问，讨论观察结果，记录他们的影响。或者带上那些重视访问用户、业务人员或开发人员的人。<br />\nLimit visits to two per day. This gives you time to write up your notes and assimilate, learn, take detailed notes and sketches, and write them up as soon as possible after each visit<br />\n 将访问限制为每天两次。这让你有时间写笔记，吸收，学习，做详细的笔记和草图，并在每次就诊后尽快写下来。<br />\nyou know should contain what you saw, what was said, what was done, what artifacts were used on interruptions occurred.<br />\n 应该包含你所看到的，说了什么，做了什么，在发生中断时使用了什么工件。</p>\n</li>\n<li>\n<p>Finally, we come to analyzing the data.<br />\n 最后，我们来分析数据。<br />\nFor small projects, you might be able to use spreadsheet or do a card sport. That's my preferred approach.<br />\n 对于小型项目，您可以使用电子表格或进行卡片运动。这是我首选的方法。<br />\nFor large data sets. It's news programs such as NVIVO or dedoose, although these are the steep learning curve,  optimal workshops, new tool Reframer, or maybe worth checking out.<br />\n 对于大型数据，一些新的项目，如 NVIVO or dedoose，虽然这些都是陡峭的学习曲线，最佳研讨会，新的工具 Reframer，或许可能值得一看。<br />\nYou may want to create persona. As for scenario to communicate what you found, you may need to create a service man for service blueprint if you work in more effort projects. The main thing is to ensure that the data you gathered his mind for your immediate needs communicates well to stakeholders and has retained for future reuse. However you end up with the key is to get out and spend time with users.<br />\n 您可能想要创建角色。如果您在更多的项目中工作，为了传达所发现的内容方案，您可能需要为服务蓝图创建一个服务人员。主要是确保您为您的即时需求而收集的数据，能够很好地与利益相关者沟通，并保留下来，供将来重用。然而，你最终得到的关键是走出去，花时间与用户在一起。<br />\nIf you do this with an inquiring and flexible mind, you'll reap many benefits. And your designs will be all the better for your effort.<br />\n 如果你带着一颗好奇和灵活的心去做这件事，你会得到很多好处。你的努力会让你的设计变得更好。</p>\n</li>\n</ol>\n<p><img data-src=\"https://i.loli.net/2020/09/23/atlJXUhsBT2d36z.png\" alt=\"CI Quick Review\" /></p>\n<h2 id=\"who\"><a class=\"anchor\" href=\"#who\">#</a> Who?</h2>\n<h3 id=\"users\"><a class=\"anchor\" href=\"#users\">#</a> Users</h3>\n<ul>\n<li>Between 6–20<br />\n6-20 个用户</li>\n<li>Representative of different roles<br />\n 代表不同的角色</li>\n</ul>\n<blockquote>\n<p>Note: may not be people who will be doing the purchasing of the system<br />\nE.g., if for an enterprise; public kiosk</p>\n</blockquote>\n<h3 id=\"interviewers\"><a class=\"anchor\" href=\"#interviewers\">#</a> Interviewers</h3>\n<p>&quot;Cross-functional&quot; team<br />\n 采访者：跨职能团队</p>\n<ul>\n<li>Designers 设计师</li>\n<li>UI specialists UI 专家</li>\n<li>Product managers 产品经理</li>\n<li>Marketing 销售</li>\n<li>Technical people 技术人员</li>\n</ul>\n<h2 id=\"partnership-合作关系\"><a class=\"anchor\" href=\"#partnership-合作关系\">#</a> Partnership 合作关系</h2>\n<p>The whole approach to this study is that establishing of course sort of like a partnership.<br />\n 这项研究的整个方法是建立一种伙伴关系。</p>\n<p><img data-src=\"https://i.loli.net/2020/09/23/5m6x2f73kuNIhtv.jpg\" alt=\"Partnership\" /></p>\n<dl>\n<dt>Definition:</dt>\n<dd>A relationship characterized by close cooperation 紧密合作的关系</dd>\n</dl>\n<ul>\n<li>Build an equitable relationship with the user 与用户建立公平的关系</li>\n<li>Suspend your assumptions and beliefs 暂停你的假设和信念</li>\n<li>Invite the user into the inquiry process 邀请用户参加调查流程</li>\n</ul>\n<h3 id=\"why-are-partnerships-important\"><a class=\"anchor\" href=\"#why-are-partnerships-important\">#</a> Why are Partnerships Important?</h3>\n<ul>\n<li>\n<p>Information is obtained through a <em>dialog</em><br />\n 通过 <em>对话</em> 获取信息</p>\n</li>\n<li>\n<p>The user is the <em>expert</em>.<br />\n 用户是 <em>专家</em></p>\n</li>\n<li>\n<p>Not a conventional interview or consultant relationship<br />\n 不是常规的采访或顾问关系</p>\n</li>\n<li>\n<p>Alternative way to view the relationship: <span class=\"orange\">Master/Apprentice</span><br />\n 查看关系的另一种方法：师徒</p>\n<ul>\n<li>The user is the &quot;master craftsman&quot; at his/her work<br />\n 用户是其工作中的 &quot;大师级工匠&quot;</li>\n<li>You are the apprentice trying to learn<br />\n 你是尝试学习的学徒</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"establishing-partnership-建立合作关系\"><a class=\"anchor\" href=\"#establishing-partnership-建立合作关系\">#</a> Establishing Partnership 建立合作关系</h3>\n<ul>\n<li>Share control 分享控制</li>\n<li>Use open-ended questions that invite users to talk:<br />\n 使用邀请用户交谈的开放式问题\n<ul>\n<li>&quot;What are you doing?&quot;<br />\n 你在做什么</li>\n<li>&quot;Is that what you expect?&quot;<br />\n 这是你期望的吗</li>\n<li>&quot;Why are you doing...?&quot;<br />\n 你为什么要做...</li>\n</ul>\n</li>\n<li>Let the user lead the conversation<br />\n 让用户主持对话</li>\n<li>Listen!<br />\n 倾听</li>\n<li>Pay attention to communication that is non-verbal<br />\n 注意非语言的交流</li>\n</ul>\n<h2 id=\"recording-and-noting-记录\"><a class=\"anchor\" href=\"#recording-and-noting-记录\">#</a> Recording and Noting 记录</h2>\n<h3 id=\"do-record-interview\"><a class=\"anchor\" href=\"#do-record-interview\">#</a> Do record interview</h3>\n<ul>\n<li>Video recordings 录像</li>\n<li>Screen capture software with laptop microphone for user<br />\n 带有麦克风的屏幕捕获软件</li>\n</ul>\n<h3 id=\"when-to-take-notes\"><a class=\"anchor\" href=\"#when-to-take-notes\">#</a> When to take notes?</h3>\n<ul>\n<li>Note taking can help you pay closer attention 帮助提高注意力</li>\n<li>Notes lead to faster turn-around 加快周转速度</li>\n<li>Do not let it interfere with interviewing 不要让记笔记干扰采访<br />\n Usually would use a second person 笔记通常由另一个人记录</li>\n</ul>\n<h3 id=\"how-to-record\"><a class=\"anchor\" href=\"#how-to-record\">#</a> How to record?</h3>\n<ul>\n<li>What the user says – in quotes 用户说的话，用引号引起来</li>\n<li>What the user does – plain text 用户的工作，纯文本</li>\n<li>Your interpretation –in parentheses 你的解释，放在括号中</li>\n<li>Write fast! 快速记录</li>\n</ul>\n<h1 id=\"task-analysis-人物分析\"><a class=\"anchor\" href=\"#task-analysis-人物分析\">#</a> Task analysis 人物分析</h1>\n<h2 id=\"defining-tasks-定义任务\"><a class=\"anchor\" href=\"#defining-tasks-定义任务\">#</a> Defining Tasks 定义任务</h2>\n<ul>\n<li>\n<p>In a real Contextual Inquiry, <em>user</em> decides the tasks<br />\n 用户决定任务<br />\n Investigate real-world tasks, needs, context<br />\n 调查实际任务，需求，情景</p>\n</li>\n<li>\n<p>But you still must decide the <em>focus</em><br />\n 仍然必须确定重点<br />\n What tasks you want to observe that are relevant to your product plan<br />\n 你想要观察的任务，与你的产品计划有关</p>\n</li>\n</ul>\n<h2 id=\"test-tasks-任务测试\"><a class=\"anchor\" href=\"#test-tasks-任务测试\">#</a> Test Tasks 任务测试</h2>\n<ul>\n<li>\n<p>Task design is difficult part of usability testing<br />\n 任务设计是可用性测试中的困难部分</p>\n</li>\n<li>\n<p>Representative of &quot;real&quot; tasks<br />\n 代表 &quot;实际&quot; 任务</p>\n<ul>\n<li>Sufficiently realistic and compelling so users are motivated to finish<br />\n 足够逼真和引人入胜，使用户有动力完成</li>\n<li>Can let users create their own tasks if relevant<br />\n 如果相关，可以让用户创建自己的任务</li>\n</ul>\n</li>\n<li>\n<p>Appropriate difficulty and coverage<br />\n 适当的难度和覆盖范围</p>\n<ul>\n<li>Should last about 2 min.<br />\n 应该持续约 2 分钟。</li>\n<li>for expert, less than 30 min.<br />\n 对于专家，少于 30 分钟。</li>\n<li>for novice Short enough to be finished, but not trivial.<br />\n 对于新手，足够短，可以完成，但不琐碎</li>\n</ul>\n</li>\n<li>\n<p>Tasks nothumorous, frivolous, or offensive<br />\n 任务不幽默，轻浮或令人反感</p>\n</li>\n<li>\n<p>Easy task first, progressively harder<br />\n 轻松完成任务，逐步提高难度</p>\n<ul>\n<li>But better if independent<br />\n 但如果独立则更好</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>Remember: No tasking their opinions.<br />\n 没有要求他们发表意见。</p>\n</blockquote>\n<h1 id=\"personas-角色\"><a class=\"anchor\" href=\"#personas-角色\">#</a> Personas 角色</h1>\n<ul>\n<li>Popularized by Alan Cooper 由这个人推广的一种方法</li>\n<li>User archetype you can use to help guide design decisions<br />\n 是一种用户原型，可以用来帮助指导设计决策</li>\n<li>Created after contextual inquiry or equivalent<br />\n 在情境访谈后创建</li>\n<li>Summarizes properties of a group of users<br />\n 汇总一组用户的属性</li>\n<li>Use: helps keep designers &amp; implementers focused on user needs.<br />\n 使用：帮助使设计师和实施者专注于用户需求。</li>\n<li>Include: behavior patterns, goals, skills, attitudes, and environment, with a few fictional personal details to bring the persona to life<br />\n 包括：行为模式、目标、技能、态度和环境，以及一些虚构的个人详细信息，使人物形象栩栩如生</li>\n<li>Have a small number for each product<br />\n 每个产品都有少量\n<ul>\n<li>One for each important group of users<br />\n 每个重要用户组一个</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"user-persona\"><a class=\"anchor\" href=\"#user-persona\">#</a> User + Persona</h2>\n<ul>\n<li>Description of user and what user wishes to do<br />\n 用户说明以及用户希望做什么</li>\n<li>Be specific/detailed, even give names and picture<br />\n 要具体 / 详细，甚至给出名字和图片</li>\n<li>Three personas for ATM usage follow<br />\n 使用 ATM 的三个角色\n<ul>\n<li>Adapted from User Interface Design and Evaluation<br />\n 改编自用户界面设计和评估</li>\n<li>The Open University<br />\n 开放大学</li>\n</ul>\n</li>\n<li>Developed by Cooper (1999)<br />\n 库珀开发（1999）</li>\n</ul>\n<h3 id=\"felix-teenage-atm-user\"><a class=\"anchor\" href=\"#felix-teenage-atm-user\">#</a> Felix – Teenage ATM User</h3>\n<p>Felix is 13 and gets pocket money each week. He spends it with his friends, so doesn't make regular deposits. He does receive gifts for his birthday, Christmas, etc. and saves that money for special purchases, such as a computer games console or trendy clothes. He has an ATM card allowing him make withdrawals when needed for his purchases.</p>\n<h3 id=\"sandra-young-adult\"><a class=\"anchor\" href=\"#sandra-young-adult\">#</a> Sandra – Young Adult</h3>\n<p>Sandra is 30, is married to Jason, has two children Todd(6) and Carly Carly (18 months). They live in a subdivision that is about three miles from the town center, where the bank and stores are located. Jason uses the car for work, and works long hours, leaving at 6:45 am and returning at 8:00 pm. Sandra does not drive, so has to use public transportation. She tries to run errands and shop while Todd is in school, so she only has to take Carly to town with her. She typically needs to make two trips to town each week to get everything done. She uses a stroller with Carly, and the bank is one flight up via escalator, so she prefers to use the ATM outside the first floor, even though there is no canopy to protect customers from bad weather.</p>\n<h3 id=\"marvin-middle-ageto-senior\"><a class=\"anchor\" href=\"#marvin-middle-ageto-senior\">#</a> Marvin – Middle Ageto Senior</h3>\n<p>Marvin is 68 years old, and his social security is deposited into his bank account at the start of each month. He goes to the bank every week, withdrawing enough cash for the week for miscellaneous expenditure. Regular bills are paid by check.<br />\nHe stands in line for a live teller, as he prefers the social interaction to using an ATM, even though his new artificial hip makes standing in line uncomfortable. He does not have an ATM card.</p>\n<h2 id=\"initial-questions-起始问题\"><a class=\"anchor\" href=\"#initial-questions-起始问题\">#</a> Initial Questions 起始问题</h2>\n<p>First, assure the users that <span class=\"orange\">not testing them</span><br />\n 确保用户未对其进行测试</p>\n<ul>\n<li>You are testing the product, and you want to find problems<br />\n 您正在测试产品，并且想要查找问题</li>\n</ul>\n<p>Find out the <span class=\"orange\">context</span> through initial questions<br />\n 通过最初的问题找出背景</p>\n<ul>\n<li>\n<p><span class=\"orange\">When</span> would you normally do this kind of task?<br />\n 你通常在何时执行此类任务？</p>\n</li>\n<li>\n<p><span class=\"orange\">Who</span> would be involved in making the decisions?<br />\n 谁将参与决策？</p>\n</li>\n<li>\n<p><span class=\"orange\">What</span> would influence any decisions?<br />\n 什么会影响任何决定？</p>\n</li>\n<li>\n<p>How would you know what to do?<br />\n 你如何知道该怎么办？</p>\n<ul>\n<li>What <span class=\"orange\">information</span> would you use to help decide?<br />\n 您将使用哪些信息来帮助做出决定？</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"test-scripts-测试脚本\"><a class=\"anchor\" href=\"#test-scripts-测试脚本\">#</a> Test Scripts 测试脚本</h2>\n<ul>\n<li>\n<p>Useful to have a script<br />\n 有用的脚本</p>\n<ul>\n<li>Make sure say everything you want<br />\n 确保说出所有想要的内容</li>\n<li>Make sure all users get same instructions<br />\n 确保所有用户都获得相同的说明</li>\n</ul>\n</li>\n<li>\n<p>Should read instructions out loud<br />\n 应该大声朗读说明</p>\n<ul>\n<li>Ask if users have any questions<br />\n 询问用户是否有任何问题</li>\n</ul>\n</li>\n<li>\n<p>Make sure instructions provide goals only in a general way, and doesn't give away information<br />\n 确保说明仅通过一般的方式，不会泄露信息</p>\n<ul>\n<li>Describe the resultand not the steps<br />\n 描述结果而不是步骤</li>\n<li>Avoid product names and technical terms that appear on the web site<br />\n 避免在网站上出现产品名称和技术术语\n<ul>\n<li>Don't give away the vocabulary<br />\n 不要放弃词汇量</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>Example:<br />\n&quot;The clock should have the right time&quot;;<br />\n 时钟应有正确的时间<br />\n not: &quot;Use the hours and minutes buttons to set the time&quot;<br />\n 使用小时和分钟按钮设置时间</p>\n</li>\n</ul>\n<h2 id=\"alternative-to-ci-ci的替代方法\"><a class=\"anchor\" href=\"#alternative-to-ci-ci的替代方法\">#</a> Alternative to CI CI 的替代方法</h2>\n<ul>\n<li>\n<p>For intermittent tasks<br />\n 对于间歇性任务</p>\n<ul>\n<li>In-context cued recall<br />\n 根据情景提示召回</li>\n<li>Activity logs<br />\n 活动日志</li>\n</ul>\n</li>\n<li>\n<p>For uninterruptible tasks<br />\n 对于不间断的任务</p>\n<ul>\n<li>Post-observation inquiry<br />\n 观察后查询</li>\n</ul>\n</li>\n<li>\n<p>For extremely long or multi-person tasks<br />\n 对于极长或多人的任务</p>\n<ul>\n<li>Artifact walkthrough<br />\n 神器演练</li>\n</ul>\n</li>\n<li>\n<p>New technology within current work<br />\n 当前工作中的新技术</p>\n<ul>\n<li>Future Scenario<br />\n 未来场景</li>\n</ul>\n</li>\n<li>\n<p>Prototype or prior version exists<br />\n 存在原型或先前版本</p>\n<ul>\n<li>Prototype/Test drive<br />\n 原型 / 试驾</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"ci-example-from-cmu\"><a class=\"anchor\" href=\"#ci-example-from-cmu\">#</a> CI Example from CMU</h1>\n<p>电子商务站点的示例会话</p>\n<p>Issues to observe<br />\n 要注意的问题</p>\n<ul>\n<li>Interview of work in progress, in &quot;context&quot;<br />\n 在 “情景” 中采访正在进行的工作</li>\n<li>Actual session of doing a task<br />\n 执行任务的实际时间\n<ul>\n<li>Not an interview asking about possible tasks, etc.<br />\n 不要在采访中询问可能的任务，等。</li>\n<li>Note that focusing on expert behavior &amp; breakdowns<br />\n 请注意，关注专家 行为和故障</li>\n</ul>\n</li>\n<li>Questions to clarify about routine, motivations<br />\n 要澄清有关日常活动，动机的问题\n<ul>\n<li>Why do certain actions: need intentfor actions<br />\n 为什么要采取某些行动：需要采取行动的意图</li>\n<li>Notice problems (&quot;breakdowns&quot;)<br />\n 注意问题（“故障”）</li>\n</ul>\n</li>\n<li>Notice what happens that causes users to do something (&quot;triggers&quot;)<br />\n 注意会导致用户采取行动的情况（“触发器”）\n<ul>\n<li>E.g. appearance of error messages, other feedback, external events (phone ringing), etc.<br />\n 例如错误消息的出现，其他反馈，外部事件（电话响铃）等</li>\n</ul>\n</li>\n</ul>\n",
            "tags": [
                "计算机科学",
                "Master of Software Engineering",
                "ITMD 534. Human Computer Interaction",
                "人机交互"
            ]
        },
        {
            "id": "https://shoka.lostyu.me/computer-science/mse/itmd-510/week-4/",
            "url": "https://shoka.lostyu.me/computer-science/mse/itmd-510/week-4/",
            "title": "Week 4. Arrays and the ArrayList Class",
            "date_published": "2020-09-16T12:52:15.000Z",
            "content_html": "<h1 id=\"notes\"><a class=\"anchor\" href=\"#notes\">#</a> Notes</h1>\n<p>Make use of methods to implement arrays. Arrays can be passed into parameter list and can be returned in the method block.<br />\n 利用方法实现数组。 数组可以传递到参数列表中，并可以在方法块中返回。<br />\nEx.</p>\n<ol>\n<li>Create array 创建数组</li>\n<li>Print array 打印数组</li>\n<li>Sort array (swapping elements by position) 对数组排序（按位置交换元素）</li>\n<li>Search array 搜索数组</li>\n<li>Highest value in array 数组中的最大值</li>\n<li>Lowest value in array 数组中的最小值</li>\n<li>Remove item (s) from array 从数组中删除元素</li>\n<li>Update item (s) from array 从数组更新元素</li>\n</ol>\n<h2 id=\"arrays-vs-arraylists-intro\"><a class=\"anchor\" href=\"#arrays-vs-arraylists-intro\">#</a> Arrays vs ArrayLists intro</h2>\n<p>A challenge – merge two arrays together!<br />\nHave method to take in two arrays and return the merged array in sorted order.<br />\n 将两个数组合并在一起！<br />\n想办法接受两个数组，并按顺序合并数组。</p>\n<h3 id=\"method-1\"><a class=\"anchor\" href=\"#method-1\">#</a> Method 1</h3>\n<pre class=\"info\"><code>Check sizes of each array ( arrays X and Y )\nSet size of new array to be merged ( array M )\nLoop thru each array based on length of each array\nTrack current position of merged array M\nStore each array value into new array M \nReturn array M</code></pre><figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token function\">mergeArray</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>arrayX<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>arrayY<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token comment\">//  The size of the new array will be the sum of arrayX and arrayY sizes</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arrayM <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span>arrayX<span class=\"token punctuation\">.</span>length <span class=\"token operator\">+</span> arrayY<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> currentPos <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token comment\">//  Loop 1</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">&lt;</span> arrayX<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>           arrayM<span class=\"token punctuation\">[</span>currentPos<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> arrayX<span class=\"token punctuation\">[</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token comment\">//  loop 2 </span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>         <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">&lt;</span> arrayY<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span>   </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            arrayM<span class=\"token punctuation\">[</span>currentPos<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> arrayY<span class=\"token punctuation\">[</span>j<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">return</span> arrayM<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"method-2\"><a class=\"anchor\" href=\"#method-2\">#</a> Method 2</h3>\n<p>ArrayList use case for merging 2 arrays</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ArrayList</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">//merge two arrays into an ArrayList</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">MyMerge</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> args<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> a <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Simple Array of integers 1 thru 4</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> b <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Simple Array of integers 5 thru 10</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token comment\">// Use dynamic Array list to hold merge of a and b 1 thru 10</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> arrMerge <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> a<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// Loop thru array a and merge all items in a</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            arrMerge<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> b<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// Loop thru array b and merge all items from b</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            arrMerge<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>arrMerge<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Print Contents of final merged array</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><blockquote>\n<p>Result:<br />\n <code>[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]</code></p>\n</blockquote>\n<h2 id=\"sort-search\"><a class=\"anchor\" href=\"#sort-search\">#</a> sort &amp; search</h2>\n<p>Java built in methods can do the trick!</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token operator\">*</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> bSearch2 <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> myArray<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span>myArray<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">int</span> result <span class=\"token operator\">=</span> <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">binarySearch</span><span class=\"token punctuation\">(</span>myArray<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>result <span class=\"token operator\">>=</span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> <span class=\"token string\">\"Is found \"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"Is not found \"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                         <span class=\"token string\">\" \\nfound at position \"</span> <span class=\"token operator\">+</span> result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>Bsearch trace revisited follows…<br />\n<img data-src=\"https://i.loli.net/2020/09/24/InyO9YFPSkh8Wvc.png\" alt=\"\" /></p>\n<h3 id=\"optimizing-code\"><a class=\"anchor\" href=\"#optimizing-code\">#</a> Optimizing code</h3>\n<p>Finding the next best value in array <em>if present</em>!</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// classic case – BUT include next best value if Key is not present or found.</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">BSearch</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> <span class=\"token function\">bs</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> key<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">int</span> lo <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">int</span> hi <span class=\"token operator\">=</span> a<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">int</span> mid<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>lo <span class=\"token operator\">&lt;=</span> hi<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token comment\">// Key is in a[lo..hi] or not present.</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            mid <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>hi <span class=\"token operator\">+</span> lo<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>key <span class=\"token operator\">&lt;</span> a<span class=\"token punctuation\">[</span>mid<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> hi <span class=\"token operator\">=</span> mid <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>key <span class=\"token operator\">></span> a<span class=\"token punctuation\">[</span>mid<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> lo <span class=\"token operator\">=</span> mid <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token keyword\">else</span> <span class=\"token keyword\">return</span> mid<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">return</span> lo<span class=\"token operator\">==</span>hi <span class=\"token operator\">?</span> mid <span class=\"token operator\">:</span> hi <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>         </pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">int</span> arr <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">12</span><span class=\"token punctuation\">,</span><span class=\"token number\">16</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token comment\">//sort the array</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span> <span class=\"token function\">bs</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//search for key item 2 from list </span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">abs</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"split-function-working-in-conjunction-with-an-array\"><a class=\"anchor\" href=\"#split-function-working-in-conjunction-with-an-array\">#</a> Split function working in conjunction with an array</h2>\n<p>拆分函数与数组结合使用</p>\n<p>The string  <code>split()</code>  method breaks a given string (&quot;tokenizes&quot;) around matches of the given regular expression.</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">String</span> line <span class=\"token operator\">=</span> <span class=\"token string\">\"a,b,c\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\">String</span> splitter<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> line<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\",\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>splitter<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"a\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>splitter<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"b\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>splitter<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"c\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">// traverse data</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">// traditional loop</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> splitter<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>splitter<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">// or use for enhanced or \"for each\" loop</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> sObj <span class=\"token operator\">:</span> splitter<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>sObj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><blockquote>\n<p>Result:<br />\n 结果均为</p>\n<pre class=\"info\"><code>a\nb\nc</code></pre></blockquote>\n<h1 id=\"lab\"><a class=\"anchor\" href=\"#lab\">#</a> Lab</h1>\n<ul>\n<li>\n<p>PROJECT<br />\nBank record generations</p>\n</li>\n<li>\n<p>Objective<br />\nTo write a program that parses and processes bank data from a file.</p>\n</li>\n</ul>\n<h2 id=\"project-description\"><a class=\"anchor\" href=\"#project-description\">#</a> PROJECT DESCRIPTION</h2>\n<p>Bank of IIT has gotten their hands on some interesting data which will allow for possible loans to various clients from various regions.</p>\n<p>Accompanying the labs specs is a csv (comma separated value) file named<br />\n <code>bank-Detail.csv</code>  which contains valuable raw data to allow the bank to process loans based on client details from the file.</p>\n<p>You need to parse the data and print record data for future loan considerations.</p>\n<h2 id=\"project-details\"><a class=\"anchor\" href=\"#project-details\">#</a> Project Details</h2>\n<ol>\n<li>\n<p>Create an abstract class called  <code>Client.java</code>  to allow for three abstract methods the bank needs to process. Name your methods  <code>readData()</code> ,  <code>processData()</code>  and  <code>printData()</code> . No arguments are needed for your methods.</p>\n</li>\n<li>\n<p>Create a  <code>BankRecords.java</code>  file which will utilize the Client asbtract methods and generate ultimately the client records from the csv file.</p>\n<p>The client file has the following header information</p>\n<pre class=\"info\"><code>id &#123;string&#125; \nage &#123;numeric&#125;\nsex &#123;FEMALE,MALE&#125;\nregion &#123;INNER_CITY,TOWN,RURAL,SUBURBAN&#125;\nincome &#123;numeric&#125;\nmarried &#123;NO,YES&#125;\nchildren &#123;0,1,2,3&#125;\ncar &#123;NO,YES&#125;\nsave_act &#123;NO,YES&#125;\ncurrent_act &#123;NO,YES&#125;\nmortgage &#123;NO,YES&#125;\npep &#123;YES,NO&#125;</code></pre><p>Create instance fields with appropriate data types for each header item above in your class. Include getter and setters for each instance field.</p>\n</li>\n<li>\n<p>Include code definitions for each method declared in your Client class as follows</p>\n<ul>\n<li>Your  <code>readData()</code>  method should read in all the record data from the csv file in your path into an ArrayList.</li>\n<li>Your  <code>processData()</code>  method should take all the record data from your ArrayList and add the data into each of your instance fields via your setters. Use an array of objects to store record data for each instance field.</li>\n<li>Your  <code>printData()</code>  method should print the first 25 records for various fields to the console via your getters. Print records for the following fields:  <code>ID</code> ,  <code>AGE</code> ,  <code>SEX</code> ,  <code>REGION</code> ,  <code>INCOME</code> , and  <code>MORTGAGE</code> .</li>\n</ul>\n</li>\n<li>\n<p>Include headings in your print detail.Printing record detail should be in a neat columnar style format.</p>\n</li>\n</ol>\n<blockquote>\n<p>Make sure to include a try catch block when reading any file!<br />\nInclude also proper exception handling.<br />\nInclude your project’s entire source code/csv file into a zip file, and in a separate Word file, your output snapshot/program description/source code as well.</p>\n</blockquote>\n<h2 id=\"objectives\"><a class=\"anchor\" href=\"#objectives\">#</a> Objectives</h2>\n<h3 id=\"uml-design-of-classes\"><a class=\"anchor\" href=\"#uml-design-of-classes\">#</a> UML Design of classes</h3>\n<pre class=\"mermaid\"><svg id=\"mermaid-1605038089456\" width=\"100%\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" height=\"405\" style=\"max-width: 260.6875px;\" viewBox=\"-20 -20 260.6875 405\"><g></g><defs><marker id=\"extensionStart\" class=\"extension\" refX=\"0\" refY=\"7\" markerWidth=\"190\" markerHeight=\"240\" orient=\"auto\"><path d=\"M 1,7 L18,13 V 1 Z\"></path></marker></defs><defs><marker id=\"extensionEnd\" refX=\"19\" refY=\"7\" markerWidth=\"20\" markerHeight=\"28\" orient=\"auto\"><path d=\"M 1,1 V 13 L18,7 Z\"></path></marker></defs><defs><marker id=\"compositionStart\" class=\"extension\" refX=\"0\" refY=\"7\" markerWidth=\"190\" markerHeight=\"240\" orient=\"auto\"><path d=\"M 18,7 L9,13 L1,7 L9,1 Z\"></path></marker></defs><defs><marker id=\"compositionEnd\" refX=\"19\" refY=\"7\" markerWidth=\"20\" markerHeight=\"28\" orient=\"auto\"><path d=\"M 18,7 L9,13 L1,7 L9,1 Z\"></path></marker></defs><defs><marker id=\"aggregationStart\" class=\"extension\" refX=\"0\" refY=\"7\" markerWidth=\"190\" markerHeight=\"240\" orient=\"auto\"><path d=\"M 18,7 L9,13 L1,7 L9,1 Z\"></path></marker></defs><defs><marker id=\"aggregationEnd\" refX=\"19\" refY=\"7\" markerWidth=\"20\" markerHeight=\"28\" orient=\"auto\"><path d=\"M 18,7 L9,13 L1,7 L9,1 Z\"></path></marker></defs><defs><marker id=\"dependencyStart\" class=\"extension\" refX=\"0\" refY=\"7\" markerWidth=\"190\" markerHeight=\"240\" orient=\"auto\"><path d=\"M 5,7 L9,13 L1,7 L9,1 Z\"></path></marker></defs><defs><marker id=\"dependencyEnd\" refX=\"19\" refY=\"7\" markerWidth=\"20\" markerHeight=\"28\" orient=\"auto\"><path d=\"M 18,7 L9,13 L14,7 L9,1 Z\"></path></marker></defs><g id=\"classid-BankRecords-0\" class=\"classGroup\" transform=\"translate(34.84375,0 )\"><rect x=\"0\" y=\"0\" width=\"147.59375\" height=\"248\" class=\" \"></rect><text y=\"15\" x=\"0\"><tspan class=\"title\" x=\"43.609375\">BankRecords</tspan></text><line x1=\"0\" y1=\"21\" y2=\"21\" x2=\"147.59375\"></line><text x=\"5\" y=\"31\" fill=\"white\" class=\"classText\"><tspan x=\"5\">new BankRecords</tspan><tspan x=\"5\" dy=\"10\">array: ArrayList&lt;List&lt;String&gt;&gt;</tspan><tspan x=\"5\" dy=\"10\">-id:string</tspan><tspan x=\"5\" dy=\"10\">-age:int</tspan><tspan x=\"5\" dy=\"10\">-sex:String</tspan><tspan x=\"5\" dy=\"10\">-region:String</tspan><tspan x=\"5\" dy=\"10\">-income:double</tspan><tspan x=\"5\" dy=\"10\">-married:String</tspan><tspan x=\"5\" dy=\"10\">-children:int</tspan><tspan x=\"5\" dy=\"10\">-car:String</tspan><tspan x=\"5\" dy=\"10\">-save_act:String</tspan><tspan x=\"5\" dy=\"10\">-current_act:String</tspan><tspan x=\"5\" dy=\"10\">-mortgage:String</tspan><tspan x=\"5\" dy=\"10\">-pep:String</tspan></text><line x1=\"0\" y1=\"167\" y2=\"167\" x2=\"147.59375\"></line><text x=\"5\" y=\"182\" fill=\"white\" class=\"classText\"><tspan x=\"5\">+getId()</tspan><tspan x=\"5\" dy=\"10\">+getAge()</tspan><tspan x=\"5\" dy=\"10\">+setId(id:String)</tspan><tspan x=\"5\" dy=\"10\">+setAge(age:int)</tspan><tspan x=\"5\" style=\"font-style:italic;\" dy=\"10\">+readData()</tspan><tspan x=\"5\" style=\"font-style:italic;\" dy=\"10\">+processData()</tspan><tspan x=\"5\" style=\"font-style:italic;\" dy=\"10\">+printData()</tspan></text></g><g id=\"classid-Client-1\" class=\"classGroup\" transform=\"translate(0,298 )\"><rect x=\"0\" y=\"0\" width=\"81.9375\" height=\"67\" class=\" \"></rect><text y=\"15\" x=\"0\"><tspan class=\"title\" x=\"27.1171875\">Client</tspan></text><line x1=\"0\" y1=\"21\" y2=\"21\" x2=\"81.9375\"></line><text x=\"5\" y=\"31\" fill=\"white\" class=\"classText\"></text><line x1=\"0\" y1=\"26\" y2=\"26\" x2=\"81.9375\"></line><text x=\"5\" y=\"41\" fill=\"white\" class=\"classText\"><tspan x=\"5\" style=\"font-style:italic;\">+readData()</tspan><tspan x=\"5\" style=\"font-style:italic;\" dy=\"10\">+processData()</tspan><tspan x=\"5\" style=\"font-style:italic;\" dy=\"10\">+printData()</tspan></text></g><g id=\"classid-BankRecordsTest-2\" class=\"classGroup\" transform=\"translate(131.9375,308 )\"><rect x=\"0\" y=\"0\" width=\"88.75\" height=\"47\" class=\" \"></rect><text y=\"15\" x=\"0\"><tspan class=\"title\" x=\"5\">BankRecordsTest</tspan></text><line x1=\"0\" y1=\"21\" y2=\"21\" x2=\"88.75\"></line><text x=\"5\" y=\"31\" fill=\"white\" class=\"classText\"></text><line x1=\"0\" y1=\"26\" y2=\"26\" x2=\"88.75\"></line><text x=\"5\" y=\"41\" fill=\"white\" class=\"classText\"><tspan x=\"5\">+main()</tspan></text></g><path d=\"M52.32309144295302,248L50.43070120246085,252.16666666666666C48.53831096196868,256.3333333333333,44.753530480984345,264.6666666666667,42.86114024049217,273C40.96875,281.3333333333333,40.96875,289.6666666666667,40.96875,293.8333333333333L40.96875,298\" id=\"edge0\" class=\"relation\" marker-end=\"url(#dependencyEnd)\"></path><path d=\"M164.95815855704697,248L166.85054879753915,252.16666666666666C168.74293903803132,256.3333333333333,172.52771951901568,264.6666666666667,174.42010975950782,274.6666666666667C176.3125,284.6666666666667,176.3125,296.3333333333333,176.3125,302.1666666666667L176.3125,308\" id=\"edge1\" class=\"relation\"></path></svg></pre><ol>\n<li>\n<p><code>Client.java</code>  source setup</p>\n<p>Create class file as abstract</p>\n<p>Include 3 abstract methods <em>inheritable</em> for your BankRecords class.</p>\n<p>Ex. of abstract method.</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">abstract</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Client</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">abstract</span> <span class=\"token keyword\">void</span> <span class=\"token function\">readData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//read file detail</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>       </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\">//finish remaining methods</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></li>\n<li>\n<p><code>BankRecords.java</code>  source setup</p>\n<ul>\n<li>\n<p>Add .csv source file to your project folder<br />\nTake your .csv file and add it to the <ins>root</ins> of your project folder.</p>\n</li>\n<li>\n<p>Create necessary class variables</p>\n</li>\n</ul>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">//setup static objects for IO processing</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">//array of BankRecords objects</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">static</span> <span class=\"token class-name\">BankRecords</span> robjs<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BankRecords</span><span class=\"token punctuation\">[</span><span class=\"token number\">600</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">//arraylist to hold spreadsheet rows &amp; columns</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">static</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">List</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span> array <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">//instance fields</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> id<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> age<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">/*create remaining instance fields with appropriate data types*/</span></pre></td></tr></table></figure><ul>\n<li>Generate getters &amp; setters for ALL your <em>instance</em> fields<br />\nFrom your menu go to Source &gt; Generate Getters and Setters…</li>\n</ul>\n<div class=\"note info\">\n<p>even though we don’t need all getters and setters for this lab, we may need them in subsequent labs!</p>\n</div>\n<ul>\n<li>\n<p>Setup class functions to perform the following tasks</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>Read data from spreadsheet</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">readData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token class-name\">BufferedReader</span> br<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\">//initialize reader object and set file path to root of project</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    br <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BufferedReader</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">FileReader</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">File</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"bank-Detail.csv\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token class-name\">String</span> line<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token comment\">//read each record in csv file</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>line <span class=\"token operator\">=</span> br<span class=\"token punctuation\">.</span><span class=\"token function\">readLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token comment\">//parse each record in csv file by a comma ( , )</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token comment\">//into a list stored in the arraylist-> Arrays</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        array<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">asList</span><span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\",\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token function\">processData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//call function for processing record data</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>Process data from arraylist</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">processData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\">//create index for array while iterating thru arraylist</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">int</span> idx<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\">//create for each loop to cycle thru arraylist of values </span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\">//and PASS that data into your record objects' setters </span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> rowData<span class=\"token operator\">:</span> array<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token comment\">//initialize array of objects</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        robjs<span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BankRecords</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token comment\">//call setters below and populate them, item by item</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        robjs<span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">setId</span><span class=\"token punctuation\">(</span>rowData<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//get 1st column</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        robjs<span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">setAge</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>rowData<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//get 2nd column</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token comment\">/*continue processing arraylist item values into each array object -> robjs[] by index*/</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        idx<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token function\">printData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//call function to print objects held in memory</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>Print data from array</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">printData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>                    </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token comment\">//1. Set appropriate headings for displaying first 25 records</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token comment\">//2. Create for loop and print each record objects instance data </span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token comment\">//3. Within for loop use appropriate formatting techniques to print out record detail  </span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ol>\n<h3 id=\"error-trappings\"><a class=\"anchor\" href=\"#error-trappings\">#</a> Error trappings!</h3>\n<p>Make sure to include appropriate exception handling with try catch blocks for any file being processed.</p>\n<p>*Make use of such runtime exceptions such as FileNotFoundException or other possible exceptions that may occur during the processing of any file(s).</p>\n<h3 id=\"print-formatting-hints\"><a class=\"anchor\" href=\"#print-formatting-hints\">#</a> Print formatting hints</h3>\n<p>Use various print formatting for printing detailed record information especially to make output look professional and columnar like with the format specifier % symbol followed by a converter.</p>\n<p>Popular converters to use include:</p>\n<table>\n<tbody>\n<tr>\n<td><code>%f</code></td>\n<td>float</td>\n</tr>\n<tr>\n<td><code>%d</code></td>\n<td>int</td>\n</tr>\n<tr>\n<td><code>%s</code></td>\n<td>string</td>\n</tr>\n<tr>\n<td><code>%n</code></td>\n<td>newline</td>\n</tr>\n</tbody>\n</table>\n<p>Ex. of an appropriate heading that can be printed may be as follows:</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ID\\t\\tAGE\\t\\tSEX\\t\\tREGION\\t\\tINCOME\\t\\tMORTGAGE\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"code\"><a class=\"anchor\" href=\"#code\">#</a> code</h2>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>BankRecords.java</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">BufferedReader</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">File</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">FileReader</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ArrayList</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">List</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">BankRecords</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Client</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token comment\">//setup static objects for IO processing</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token comment\">//array of BankRecords objects</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">static</span> <span class=\"token class-name\">BankRecords</span> robjs<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BankRecords</span><span class=\"token punctuation\">[</span><span class=\"token number\">600</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token comment\">//arraylist to hold spreadsheet rows &amp; columns</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">static</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">List</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span> array <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token comment\">//instance fields</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> id<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> age<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> sex<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> region<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">double</span> income<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> married<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> children<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> car<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> save_act<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> current_act<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> mortgage<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> pep<span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">readData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token class-name\">BufferedReader</span> br <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token comment\">//initialize reader object and set file path to root of project</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            br <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BufferedReader</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">FileReader</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">File</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"bank-Detail.csv\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>            <span class=\"token class-name\">String</span> line<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>            <span class=\"token comment\">//read each record in csv file</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>            <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>line <span class=\"token operator\">=</span> br<span class=\"token punctuation\">.</span><span class=\"token function\">readLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>                <span class=\"token comment\">//parse each record in csv file by a comma ( , )</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>                <span class=\"token comment\">//into a list stored in the arraylist-> Arrays</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>                array<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">asList</span><span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\",\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>err<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"There was a problem loading the file\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        <span class=\"token function\">processData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//call function for processing record data</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">processData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>        <span class=\"token comment\">//create index for array while iterating thru arraylist</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        <span class=\"token keyword\">int</span> idx<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"57\"></td><td><pre>        <span class=\"token comment\">//create for each loop to cycle thru arraylist of values </span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>        <span class=\"token comment\">//and PASS that data into your record objects' setters </span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> rowData<span class=\"token operator\">:</span> array<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>            <span class=\"token comment\">//initialize array of objects</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>            robjs<span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BankRecords</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>            <span class=\"token comment\">//call setters below and populate them, item by item</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>            robjs<span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">setId</span><span class=\"token punctuation\">(</span>rowData<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//get 1st column</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>            robjs<span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">setAge</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>rowData<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//get 2nd column</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>            robjs<span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">setSex</span><span class=\"token punctuation\">(</span>rowData<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>            robjs<span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">setRegion</span><span class=\"token punctuation\">(</span>rowData<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>            robjs<span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">setIncome</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Double</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseDouble</span><span class=\"token punctuation\">(</span>rowData<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>            robjs<span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">setMarried</span><span class=\"token punctuation\">(</span>rowData<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>            robjs<span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">setChildren</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>rowData<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>            robjs<span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">setCar</span><span class=\"token punctuation\">(</span>rowData<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>            robjs<span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">setSave_act</span><span class=\"token punctuation\">(</span>rowData<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>            robjs<span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">setCurrent_act</span><span class=\"token punctuation\">(</span>rowData<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token number\">9</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>            robjs<span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">setMortgage</span><span class=\"token punctuation\">(</span>rowData<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>            robjs<span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">setPep</span><span class=\"token punctuation\">(</span>rowData<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token number\">11</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>            <span class=\"token comment\">/*continue processing arraylist item values into each array object -> robjs[] by index*/</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>            idx<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"80\"></td><td><pre>        <span class=\"token function\">printData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//call function to print objects held in memory       </span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"83\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">printData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>        <span class=\"token comment\">//1. Set appropriate headings for displaying first 25 records</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>        <span class=\"token comment\">//2. Create for loop and print each record objects instance data </span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>        <span class=\"token comment\">//3. Within for loop use appropriate formatting techniques to print out record detail  </span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"89\"></td><td><pre>        <span class=\"token comment\">//Set heading</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"First 25 Client details:\\n\\n%-10s\\t%-10s\\t%-10s\\t%-10s\\t%-10s\\t%-10s\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ID\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"Age\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"Sex\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"Region\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"Income\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"Mortgage\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"92\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span><span class=\"token number\">25</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"94\"></td><td><pre>            <span class=\"token class-name\">String</span> s<span class=\"token operator\">=</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%-10s\\t%-10d\\t%-10s\\t%-10s\\t%-10.2f\\t%-10s\"</span><span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"95\"></td><td><pre>                    robjs<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>robjs<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAge</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>robjs<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">getSex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>robjs<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">getRegion</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>robjs<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">getIncome</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>robjs<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">getMortgage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"98\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span>   </pre></td></tr><tr><td data-num=\"100\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"101\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"102\"></td><td><pre>     * @return the id</pre></td></tr><tr><td data-num=\"103\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>        <span class=\"token keyword\">return</span> id<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"108\"></td><td><pre>     * @param id the id to set</pre></td></tr><tr><td data-num=\"109\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setId</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>id <span class=\"token operator\">=</span> id<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"114\"></td><td><pre>     * @return the age</pre></td></tr><tr><td data-num=\"115\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">getAge</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>        <span class=\"token keyword\">return</span> age<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"120\"></td><td><pre>     * @param age the age to set</pre></td></tr><tr><td data-num=\"121\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setAge</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> age<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> age<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"126\"></td><td><pre>     * @return the sex</pre></td></tr><tr><td data-num=\"127\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getSex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>        <span class=\"token keyword\">return</span> sex<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"132\"></td><td><pre>     * @param sex the sex to set</pre></td></tr><tr><td data-num=\"133\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setSex</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> sex<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>sex <span class=\"token operator\">=</span> sex<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"138\"></td><td><pre>     * @return the region</pre></td></tr><tr><td data-num=\"139\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getRegion</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre>        <span class=\"token keyword\">return</span> region<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"143\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"144\"></td><td><pre>     * @param region the region to set</pre></td></tr><tr><td data-num=\"145\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"146\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setRegion</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> region<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"147\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>region <span class=\"token operator\">=</span> region<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"148\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"149\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"150\"></td><td><pre>     * @return the income</pre></td></tr><tr><td data-num=\"151\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"152\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">double</span> <span class=\"token function\">getIncome</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"153\"></td><td><pre>        <span class=\"token keyword\">return</span> income<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"154\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"155\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"156\"></td><td><pre>     * @param income the income to set</pre></td></tr><tr><td data-num=\"157\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"158\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setIncome</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span> income<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"159\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>income <span class=\"token operator\">=</span> income<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"160\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"161\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"162\"></td><td><pre>     * @return the married</pre></td></tr><tr><td data-num=\"163\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"164\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getMarried</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"165\"></td><td><pre>        <span class=\"token keyword\">return</span> married<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"166\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"167\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"168\"></td><td><pre>     * @param married the married to set</pre></td></tr><tr><td data-num=\"169\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"170\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setMarried</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> married<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"171\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>married <span class=\"token operator\">=</span> married<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"172\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"173\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"174\"></td><td><pre>     * @return the children</pre></td></tr><tr><td data-num=\"175\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"176\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">getChildren</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"177\"></td><td><pre>        <span class=\"token keyword\">return</span> children<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"178\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"179\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"180\"></td><td><pre>     * @param children the children to set</pre></td></tr><tr><td data-num=\"181\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"182\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setChildren</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> children<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"183\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>children <span class=\"token operator\">=</span> children<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"184\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"185\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"186\"></td><td><pre>     * @return the car</pre></td></tr><tr><td data-num=\"187\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"188\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getCar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"189\"></td><td><pre>        <span class=\"token keyword\">return</span> car<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"190\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"191\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"192\"></td><td><pre>     * @param car the car to set</pre></td></tr><tr><td data-num=\"193\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"194\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setCar</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> car<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"195\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>car <span class=\"token operator\">=</span> car<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"196\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"197\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"198\"></td><td><pre>     * @return the save_act</pre></td></tr><tr><td data-num=\"199\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"200\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getSave_act</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"201\"></td><td><pre>        <span class=\"token keyword\">return</span> save_act<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"202\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"203\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"204\"></td><td><pre>     * @param save_act the save_act to set</pre></td></tr><tr><td data-num=\"205\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"206\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setSave_act</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> save_act<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"207\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>save_act <span class=\"token operator\">=</span> save_act<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"208\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"209\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"210\"></td><td><pre>     * @return the current_act</pre></td></tr><tr><td data-num=\"211\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"212\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getCurrent_act</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"213\"></td><td><pre>        <span class=\"token keyword\">return</span> current_act<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"214\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"215\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"216\"></td><td><pre>     * @param current_act the current_act to set</pre></td></tr><tr><td data-num=\"217\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"218\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setCurrent_act</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> current_act<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"219\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>current_act <span class=\"token operator\">=</span> current_act<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"220\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"221\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"222\"></td><td><pre>     * @return the mortgage</pre></td></tr><tr><td data-num=\"223\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"224\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getMortgage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"225\"></td><td><pre>        <span class=\"token keyword\">return</span> mortgage<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"226\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"227\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"228\"></td><td><pre>     * @param mortgage the mortgage to set</pre></td></tr><tr><td data-num=\"229\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"230\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setMortgage</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> mortgage<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"231\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mortgage <span class=\"token operator\">=</span> mortgage<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"232\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"233\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"234\"></td><td><pre>     * @return the pep</pre></td></tr><tr><td data-num=\"235\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"236\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getPep</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"237\"></td><td><pre>        <span class=\"token keyword\">return</span> pep<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"238\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"239\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"240\"></td><td><pre>     * @param pep the pep to set</pre></td></tr><tr><td data-num=\"241\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"242\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setPep</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> pep<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"243\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>pep <span class=\"token operator\">=</span> pep<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"244\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span>   </pre></td></tr><tr><td data-num=\"245\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>BankRecordsTest.java</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">BankRecordsTest</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token class-name\">BankRecords</span> br <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BankRecords</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        br<span class=\"token punctuation\">.</span><span class=\"token function\">readData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>Client.java</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">abstract</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Client</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">abstract</span> <span class=\"token keyword\">void</span> <span class=\"token function\">readData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//read file detail</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">abstract</span> <span class=\"token keyword\">void</span> <span class=\"token function\">processData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//process file detail</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">abstract</span> <span class=\"token keyword\">void</span> <span class=\"token function\">printData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//print file detail</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>     </pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "计算机科学",
                "Master of Software Engineering",
                "ITMD 510. Object-Oriented App Develop",
                "Java"
            ]
        },
        {
            "id": "https://shoka.lostyu.me/computer-science/mse/itmd-510/week-3/",
            "url": "https://shoka.lostyu.me/computer-science/mse/itmd-510/week-3/",
            "title": "Week 3. Learning about Classes and Objects",
            "date_published": "2020-09-13T01:16:05.000Z",
            "content_html": "<h1 id=\"notes\"><a class=\"anchor\" href=\"#notes\">#</a> Notes</h1>\n<h2 id=\"object-oriented-design\"><a class=\"anchor\" href=\"#object-oriented-design\">#</a> Object Oriented Design</h2>\n<dl>\n<dt>Class</dt>\n<dd>contains fields and methods.</dd>\n<dt>Fields</dt>\n<dd>are <ins>related</ins> items that are stored within an object of the class, and define the object’s state.</dd>\n<dt>Methods</dt>\n<dd>are actions or behaviors that may be performed by an object of the class.</dd>\n</dl>\n<p>When developing an object-oriented application, one of your first tasks is to identify the classes that you will need to create (your domain). Typically, your goal is to identify the different types of real-world objects that are <ins>present</ins> in the problem, and then create classes for those types of objects within your application.</p>\n<p>Over the years, software professionals have developed numerous techniques for finding the classes in a given problem. One simple and popular technique involves the following steps:</p>\n<ol>\n<li>Get a <ins>written description</ins> of the problem domain.</li>\n<li>Identify all the <ins>nouns</ins> (including pronouns and noun phrases) in the description.<br />\nEach of these is a <ins>potential class</ins>.</li>\n<li><span class=\"red\">Refine</span> the list to include only the classes that are <ins>relevant to the problem</ins>.</li>\n</ol>\n<h2 id=\"what-to-include-in-a-class\"><a class=\"anchor\" href=\"#what-to-include-in-a-class\">#</a> What to include in a class?</h2>\n<p>If a noun represents a type of item that would not have any identifiable fields or methods, then it can probably be eliminated from the list. To help determine whether a noun represents an item that would have fields and methods, ask the following questions about it:</p>\n<ul>\n<li>Would you use a group of related values to represent the item’s state?</li>\n<li>Are there any obvious actions to be performed by the item?</li>\n</ul>\n<h2 id=\"example-of-a-problem-domain\"><a class=\"anchor\" href=\"#example-of-a-problem-domain\">#</a> Example of a problem domain</h2>\n<p>Suppose we are programming an application that the manager of Joe’s Automotive Shop will use to print service quotes for customers. Here is a description that an expert, perhaps Joe himself, might have written:</p>\n<pre class=\"info\"><code>Joe’s Automotive Shop services foreign cars, and specializes in servicing cars made by Mercedes, Porsche, and BMW. When a customer brings a car to the shop, the manager gets the customer’s name, address, and telephone number. Then the manager determines the make, model, and year of the car, and gives the customer a service quote. The service quote shows the estimated parts charges, estimated labor charges, sales tax, and total estimated charges.</code></pre><p>The problem domain description should include any of the following:</p>\n<ul>\n<li>Physical objects such vehicles, machines, or products</li>\n<li>Any role played by a person, such as manager, employee, customer, teacher, student, etc</li>\n<li>The results of a business event, such as a customer order, or in this case a service quote</li>\n<li>Recordkeeping items, such as customer histories and payroll record</li>\n</ul>\n<p>Identifying All of the nouns (possible classes!!)</p>\n<p>The next step is to identify all of the nouns and noun phrases. (If the description contains pronouns, include them too.) Here’s another look at the previous problem domain description. This time the nouns and noun phrases appear in bold.</p>\n<blockquote>\n<p><strong>Joe's Automotive Shop</strong> services <strong>foreign cars</strong> , and specializes in servicing <strong>cars</strong> made by <strong>Mercedes</strong> , <strong>Porsche</strong> , and <strong>BMW</strong>. When a <strong>customer</strong> brings a <strong>car</strong> to the <strong>shop</strong> , the <strong>manager</strong> gets the <strong>customer's name</strong> , <strong>address</strong> , and <strong>telephone number</strong>. Then the <strong>manager</strong> determines the <strong>make</strong> , <strong>model</strong> , and <strong>year</strong> of the <strong>car</strong> , and gives the <strong>customer</strong> a <strong>service quote</strong>. The <strong>service quote</strong> shows the <strong>estimated parts charges</strong> , <strong>estimated labor charges</strong> , <strong>sales tax</strong> , and <strong>total estimated charges</strong>.</p>\n</blockquote>\n<p>Notice above that some of the nouns are repeated.</p>\n<p>List now nouns without duplication.  Refine list as well.  Eliminate redundancies. Eliminate possible primitive types.</p>\n<table>\n<tbody>\n<tr>\n<td>address</td>\n<td>foreign cars</td>\n<td>Porsche</td>\n</tr>\n<tr>\n<td>BMW</td>\n<td>Joe's Automotive Shop</td>\n<td>sales tax</td>\n</tr>\n<tr>\n<td>car</td>\n<td>make</td>\n<td>service quote</td>\n</tr>\n<tr>\n<td>cars</td>\n<td>manager</td>\n<td>shop</td>\n</tr>\n<tr>\n<td>customer</td>\n<td>Mercedes</td>\n<td>telephone number</td>\n</tr>\n<tr>\n<td>estimated labor charges</td>\n<td>model</td>\n<td>total estimated charges</td>\n</tr>\n<tr>\n<td>estimated parts charges</td>\n<td>name</td>\n<td>year</td>\n</tr>\n</tbody>\n</table>\n<p>True class attributes!! Needed classes remain as follows…</p>\n<table>\n<tbody>\n<tr>\n<td><s>address</s></td>\n<td><s>foreign cars</s></td>\n<td><s>Porsche</s></td>\n</tr>\n<tr>\n<td><s>BMW</s></td>\n<td><s>Joe's Automotive Shop</s></td>\n<td><s>sales tax</s></td>\n</tr>\n<tr>\n<td><strong class=\"red\">car</strong></td>\n<td><s>make</s></td>\n<td><strong class=\"red\">service quote</strong></td>\n</tr>\n<tr>\n<td><s>cars</s></td>\n<td><s>manager</s></td>\n<td><s>shop</s></td>\n</tr>\n<tr>\n<td><strong class=\"red\">customer</strong></td>\n<td><s>Mercedes</s></td>\n<td><s>telephone number</s></td>\n</tr>\n<tr>\n<td><s>estimated labor charges</s></td>\n<td><s>model</s></td>\n<td><s>total estimated charges</s></td>\n</tr>\n<tr>\n<td><s>estimated parts charges</s></td>\n<td><s>name</s></td>\n<td><s>year</s></td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"review\"><a class=\"anchor\" href=\"#review\">#</a> Review</h1>\n<blockquote>\n<p>Chapter 6 OOP</p>\n</blockquote>\n<ol>\n<li class=\"quiz\">\n<p>Methods that operate on an object's fields are called</p>\n<ul class=\"options\">\n<li>Private methods</li>\n<li class=\"correct\">Instance methods</li>\n<li>Instance variables</li>\n<li>Public methods</li>\n</ul>\n<blockquote>\n<p>在对象的字段上操作的方法称为</p>\n<ul class=\"options\">\n<li>Private 方法</li>\n<li>实例方法 ✔️</li>\n<li>实例变量</li>\n<li>Public 方法</li>\n</ul>\n</blockquote>\n</li>\n<li class=\"quiz\">\n<p>A constructor</p>\n<ul class=\"options\">\n<li>Has return type of void</li>\n<li>Always accepts two arguments</li>\n<li>Always has an access specifier of private</li>\n<li class=\"correct\">Has the same name as the class</li>\n</ul>\n<blockquote>\n<p>构造函数</p>\n<ul class=\"options\">\n<li>返回类型为 void</li>\n<li>一律接受两个参数</li>\n<li>始终具有私有的访问权限</li>\n<li>与类同名 ✔️</li>\n</ul>\n</blockquote>\n</li>\n<li class=\"quiz false\">\n<p>A method that gets a value from a class's field but does not change it is known as a mutator method.</p>\n<blockquote>\n<p>从类的字段获取值，但不更改它的方法称为 mutator 方法。</p>\n</blockquote>\n</li>\n<li class=\"quiz\">\n<p>Given the code below, what is the value of finalAmount when it is displayed?</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Order</span> <span class=\"token punctuation\">&#123;</span>    </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> orderNum<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token keyword\">private</span> <span class=\"token keyword\">double</span> orderAmount<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token keyword\">private</span> <span class=\"token keyword\">double</span> orderDiscount<span class=\"token punctuation\">;</span>    </pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token keyword\">public</span> <span class=\"token class-name\">Order</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> orderNumber<span class=\"token punctuation\">,</span> <span class=\"token keyword\">double</span> orderAmt<span class=\"token punctuation\">,</span><span class=\"token keyword\">double</span> orderDisc<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>    </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      orderNum <span class=\"token operator\">=</span> orderNumber<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      orderAmount <span class=\"token operator\">=</span> orderAmt<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      orderDiscount <span class=\"token operator\">=</span> orderDisc<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>   <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">getOrderAmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      <span class=\"token keyword\">return</span> orderAmount<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>   <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">getOrderDisc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>      <span class=\"token keyword\">return</span> orderDiscount<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span>        </pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CustomerOrder</span> <span class=\"token punctuation\">&#123;</span>        </pre></td></tr><tr><td data-num=\"20\"></td><td><pre>   <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>    </pre></td></tr><tr><td data-num=\"21\"></td><td><pre>      <span class=\"token keyword\">int</span> ordNum <span class=\"token operator\">=</span> <span class=\"token number\">1234</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>      <span class=\"token keyword\">double</span> ordAmount <span class=\"token operator\">=</span> <span class=\"token number\">580.00</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>      <span class=\"token keyword\">double</span> discountPer <span class=\"token operator\">=</span> <span class=\"token number\">.1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>      <span class=\"token class-name\">Order</span> order<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>      <span class=\"token keyword\">double</span> finalAmount <span class=\"token operator\">=</span> order<span class=\"token punctuation\">.</span><span class=\"token function\">getOrderAmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>             order<span class=\"token punctuation\">.</span><span class=\"token function\">getOrderAmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> order<span class=\"token punctuation\">.</span><span class=\"token function\">getOrderDisc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>      <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Final order amount = $\"</span> <span class=\"token operator\">+</span> </pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                         finalAmount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span>    </pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul class=\"options\">\n<li>580.00</li>\n<li>528.00</li>\n<li class=\"correct\">There is no value because the object order has not been created</li>\n<li>There is no value because the constructor has an error</li>\n</ul>\n<blockquote>\n<p>给定以下代码， <code>finalAmount</code>  显示时，它的值是什么？<br />\n没有值，因为尚未创建 Order 对象</p>\n</blockquote>\n</li>\n<li class=\"quiz\">\n<p>In UML diagrams, this symbol indicates that a member is private.</p>\n<ul class=\"options\">\n<li><code>#</code></li>\n<li class=\"correct\"><code>-</code> </li>\n<li><code>+</code></li>\n<li><code>\\</code></li>\n</ul>\n</li>\n<li class=\"quiz essay\">\n<p>What is Data Hiding, how why is it important, in other words, why consider it for any instance fields of a class?</p>\n<blockquote>\n<ul>\n<li>What is Data Hiding:<br />\n 什么是数据隐藏？<br />\nAllows direct access and any allowed changes to the objects internal data by the class object itself.<br />\n 允许类对象本身直接访问，和允许对对象内部数据进行任何更改。<br />\nCreate private fields to allow for data hiding.<br />\n 创建私有字段，以允许隐藏数据。</li>\n<li>how why is it important?<br />\n 为什么它如此重要，换句话说，为什么要为一个类的任何实例字段考虑它？<br />\nData hiding is important because classes are typically used as components in large software systems, involving a team of programmers.<br />\n 数据隐藏很重要，因为类通常在大型软件系统中用作组件，涉及一个团队。<br />\nData hiding helps enforce the integrity of an object's internal data.<br />\n 数据隐藏有助于增强对象内部数据的完整性。</li>\n</ul>\n</blockquote>\n</li>\n<li class=\"quiz essay\">\n<p>What is stale data and how would avoid it?</p>\n<blockquote>\n<ul>\n<li>What is stale data?<br />\n 什么是陈旧数据<br />\n Stale data is simply data that may not be recent and hence may not be good for any calculations involving up to date information from the given data source (ex. instance variable (field)).<br />\n 陈旧数据只是可能不是最近的数据，因此可能不适用于涉及给定数据源中最新信息的任何计算（例如实例变量（字段））。</li>\n<li>how would avoid it?<br />\n 怎么避免？<br />\nTo avoid stale data, it is best to calculate the value of that data within a method rather than store it in a variable.<br />\n 为了避免过时的数据，最好是在方法中计算该数据的值，而不是将其存储在变量中。</li>\n</ul>\n</blockquote>\n</li>\n<li class=\"quiz essay\">\n<p>Distinguish between a no-argument constructor and a default constructor.  How are constructors distinguished from normal methods of a class?</p>\n<blockquote>\n<p>区分无参数构造函数和默认构造函数。构造函数如何与类的常规方法区分开？<br />\nA constructor that does not accept arguments is known as a no-arg constructor. It usually intializes class level variables.<br />\n 不接受参数的构造函数称为无参数构造函数。 它通常初始化类级别的变量。<br />\nThe default constructor is a constructor that the Java compiler adds to your code if no explicit constructor is available. The default constructor is consider a no-arg constructor.<br />\n 默认构造函数是 Java 编译器在没有显式构造函数可用时，将其添加到您的代码中的构造函数。 默认构造函数被视为无参数构造函数。<br />\nEx. no-arg constructor programmer defined<br />\n 例如 无参数构造函数程序员定义</p>\n</blockquote>\n<div class=\"note default no-icon\">\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token class-name\">Rectangle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  length <span class=\"token operator\">=</span> width <span class=\"token operator\">=</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></div>\n</li>\n<li class=\"quiz essay\">\n<p>What are overloaded methods?  Why may they be used in a program?</p>\n<blockquote>\n<ul>\n<li>What are overloaded methods?<br />\n 什么是重载方法？<br />\nIt is where two or more methods (incl. the constructor) in a class have the same name but differ in their parameter lists.<br />\n 这是类中两个或多个方法（包括构造函数）名称相同，但参数列表不同的地方。</li>\n<li>Why may they be used in a program?<br />\n 为什么要在程序中使用它们？<br />\nThey are popular because of the increased readability of the code and thus cleaniness of the code base.<br />\n 之所以流行，是因为它们提高了代码的可读性，从而提高了代码库的简洁性。<br />\nMoreover method overloading is important because sometimes you need several <ins>different ways</ins> to perform <ins>the same</ins> operation (ex. adding two doubles versus two ints).<br />\n 此外，方法重载很重要，因为有时您需要几种不同的方式来执行同一操作（例如，添加两个 double 和两个 int）。</li>\n</ul>\n</blockquote>\n</li>\n<li class=\"quiz essay\">\n<p>Given the code below how would a compiler now which method to call at runtime? Hint- check out what binding and method signatures mean in the chapter.</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> num1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> num2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">int</span> sum <span class=\"token operator\">=</span> num1 <span class=\"token operator\">+</span> num2<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">return</span> sum<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> add <span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> str1<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> str2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token class-name\">String</span> combined <span class=\"token operator\">=</span> str1 <span class=\"token operator\">+</span> str2<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">return</span> combined<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><blockquote>\n<p>给定下面的代码，编译器现在将如何在运行时调用哪个方法？ 提示 - 在本章中了解什么是绑定和方法签名。<br />\nThe compiler knows which version of the overloaded method to trigger at run time by the differing metho signature, that is by the differences in the parameter list.<br />\n 编译器通过不同的方法签名（即参数列表中的差异）知道在运行时触发哪个版本的重载方法。<br />\nEx. of differing parameter lists of method calls<br />\n 例如 方法调用的不同参数列表<br />\n <code>add(int, int)</code> <br />\n <code>add(double,double)</code> <br />\nThe process of matching a method call with the correct method is known as binding.<br />\n 将方法调用与正确的方法进行匹配的过程称为绑定。<br />\nAgain the compiler uses the method signature to determine which version of the overloaded method to bind the call to.<br />\n 再次，编译器使用方法签名，来确定将调用绑定到哪个版本的重载方法。</p>\n</blockquote>\n</li>\n</ol>\n",
            "tags": [
                "计算机科学",
                "Master of Software Engineering",
                "ITMD 510. Object-Oriented App Develop",
                "Java"
            ]
        },
        {
            "id": "https://shoka.lostyu.me/computer-science/mse/itmd-534/lecture-1/",
            "url": "https://shoka.lostyu.me/computer-science/mse/itmd-534/lecture-1/",
            "title": "Lecture 1. Human computer interaction",
            "date_published": "2020-09-01T07:56:45.000Z",
            "content_html": "<h1 id=\"what-is-hci\"><a class=\"anchor\" href=\"#what-is-hci\">#</a> What is HCI?</h1>\n<p>Human computer interaction (HCI) is an interdisciplinary field in which computer scientists, engineers, psychologists, social scientists, and design professionals play important roles. The goal of HCI is to solve real problems in the design and use of technology, making computer-based systems easier to use and more effective for people and organizations. Ease of use and effectiveness are critical to the success of any systems that interact with people, including software systems, home, office and factory appliances, and web and phone applications.</p>\n<p><img data-src=\"https://i.loli.net/2020/10/12/1sXhFMlBG3OZ829.jpg\" alt=\"\" /></p>\n<h1 id=\"what-is-usability\"><a class=\"anchor\" href=\"#what-is-usability\">#</a> What is &quot;Usability&quot;?</h1>\n<ul>\n<li>Quality!</li>\n<li>Learnability</li>\n<li>Efficiency\n<ul>\n<li>Productivity</li>\n</ul>\n</li>\n<li>Memorability\n<ul>\n<li>Little &quot;re-learning&quot; required</li>\n</ul>\n</li>\n<li>Errors</li>\n<li>Satisfaction\n<ul>\n<li>Pleasurable</li>\n</ul>\n</li>\n</ul>\n<p><img data-src=\"https://i.loli.net/2020/10/12/xMw97OIXo6HGcQh.jpg\" alt=\"\" /></p>\n<h1 id=\"history\"><a class=\"anchor\" href=\"#history\">#</a> History</h1>\n<h2 id=\"sri-and-the-mouse\"><a class=\"anchor\" href=\"#sri-and-the-mouse\">#</a> SRI and the Mouse</h2>\n<p>SRI 和鼠标</p>\n<ul>\n<li>Stanford Research Institute (SRI) 斯坦福研究所</li>\n<li>Bill English and Doug Engelbartcredited with the invention of the mouse\n<ul>\n<li>W.K. English, D.C. Engelbartand M.L. Berman. &quot;Display Selection Techniques for Text Manipulation,&quot; IEEE Transactions on Human Factors in Electronics. Mar, 1967. HFE-8(1).<br />\n 凭借鼠标的发明获得了认可</li>\n</ul>\n</li>\n<li>NLS, or the &quot;oN-Line System&quot; NLS 或 “oN 线系统”\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cud2lyZWQuY29tLzIwMTAvMTIvMTIwOWNvbXB1dGVyLW1vdXNlLW1vdGhlci1vZi1hbGwtZGVtb3Mv\">&quot;The Mother of All Demos&quot; on December 9, 1968 at the Spring Joint Computer Conference in San Francisco</span></li>\n</ul>\n</li>\n<li>Never really had a decent user interface<br />\n 从未真正有过像样的用户界面</li>\n</ul>\n<p class=\"gallery\" data-height=\"220\"><img data-src=\"https://i.loli.net/2020/10/17/4c2ErpfYxOJN3b1.jpg\" alt=\"\" /><br />\n<img data-src=\"https://i.loli.net/2020/10/17/v63wHrtJa2s7mOK.jpg\" alt=\"\" /><br />\n<img data-src=\"https://i.loli.net/2020/10/17/WefLAuVjrs53g6N.jpg\" alt=\"\" /><br />\n<img data-src=\"https://i.loli.net/2020/10/17/9SH7vXqYPRAKzhf.jpg\" alt=\"\" /></p>\n<h2 id=\"xerox-parc\"><a class=\"anchor\" href=\"#xerox-parc\">#</a> Xerox PARC</h2>\n<ul>\n<li>Palo Alto Research Center (PARC)<br />\n 帕洛阿尔托研究中心</li>\n<li>Founded by Xerox in 1970<br />\n 由施乐公司于 1970 年成立\n<ul>\n<li>Still exists today, as a semi-autonomous research lab<br />\n 今天仍然存在，是一个半自治的研究实验室</li>\n</ul>\n</li>\n<li>Incredible collection of talent<br />\n 难以置信的人才储备\n<ul>\n<li>Hired many people from SRI, and many researchers and engineers<br />\n 雇用了许多来自 SRI 的人，以及许多研究人员和工程师</li>\n</ul>\n</li>\n<li>Incredible collection of inventions, 1970-1982<br />\n1970 年至 1982 年的发明创造令人难以置信\n<ul>\n<li>Hardware 硬件\n<ul>\n<li>Invented workstations, laser printing, the Ethernet<br />\n 发明工作站，激光打印，以太网</li>\n<li>Only part that Xerox made money on<br />\n 施乐只有一部分可以赚钱</li>\n<li>Bitmapped displays<br />\n 位图显示</li>\n</ul>\n</li>\n<li>Software 软件\n<ul>\n<li>Invented many of the standard OS and systems principles<br />\n 发明了许多标准的操作系统和系统原理</li>\n<li>Object oriented programming (Smalltalk)<br />\n 面向对象的编程（Smalltalk）</li>\n<li>Model-View-Controller architecture<br />\n 模型 - 视图 - 控制器架构</li>\n<li>Interpress, a resolution-independent graphical page-description language and the precursor to PostScript<br />\nInterpress 一种与分辨率无关的图形页面描述语言，是 PostScript 的前身</li>\n</ul>\n</li>\n<li>User Interfaces<br />\n 用户界面</li>\n</ul>\n</li>\n</ul>\n<p><img data-src=\"https://i.loli.net/2020/10/17/wJdstQAgCGY1TlB.jpg\" alt=\"Model-View-Controller architecture\" title=\"Model-View-Controller architecture\" /></p>\n<h2 id=\"xerox-alto-machine\"><a class=\"anchor\" href=\"#xerox-alto-machine\">#</a> Xerox Alto Machine</h2>\n<ul>\n<li>Everyone else at the time was using mainframes or &quot;mini computers&quot; that were shared<br />\n 当时其他所有人都在使用共享的大型机或 “小型计算机”\n<ul>\n<li>&quot;Time Sharing&quot;<br />\n 时间共享</li>\n</ul>\n</li>\n<li>Alto was one of the first &quot;personal workstations&quot;<br />\nAlto 是最早的 “个人工作站” 之一\n<ul>\n<li>Starting about 1973<br />\n 从 1973 年开始</li>\n</ul>\n</li>\n<li>No operating system – each program had its own libraries and low-level access mechanisms<br />\n 没有操作系统 —— 每个程序都有自己的库和低级访问机制</li>\n<li>Three button mouse with two opposing roller wheels<br />\n 三键鼠标，两个相对的滚轮\n<ul>\n<li>Red, Yellow, Green vertically<br />\n 红色，黄色，绿色垂直</li>\n<li>Later replaced with left, middle, right, with single metal roller<br />\n 后来用左，中，右，单个金属辊代替</li>\n</ul>\n</li>\n<li>Was secret for a long timebut later distributed to manyuniversities<br />\n 很长一段时间是秘密的，后来又分发给许多大学</li>\n</ul>\n<p class=\"gallery\" data-height=\"220\"><img data-src=\"https://i.loli.net/2020/10/17/MkYX2yIGucEDTsH.jpg\" alt=\"\" /><br />\n<img data-src=\"https://i.loli.net/2020/10/17/7LcmAMN81R9kvqt.jpg\" alt=\"\" /><br />\n<img data-src=\"https://i.loli.net/2020/10/17/SuUTvAzK3gfil9q.jpg\" alt=\"\" /><br />\n<img data-src=\"https://i.loli.net/2020/10/17/kTgMSDK3vxcjP24.jpg\" alt=\"\" /></p>\n<h2 id=\"apple\"><a class=\"anchor\" href=\"#apple\">#</a> Apple</h2>\n<ul>\n<li>Xerox wanted to invest in Apple<br />\n 施乐想投资苹果</li>\n<li>In exchange, Steve Jobs got the right to use all of Xerox’s ideas<br />\n 作为交换，史蒂夫・乔布斯有权使用施乐的所有创意</li>\n<li>Steve &amp; his team (Bill Atkinson) were given a demo of various Alto programs in 1979<br />\n1979 年，Steve 和他的团队（Bill Atkinson）被演示了各种 Alto 程序\n<ul>\n<li>Mouse<br />\n 鼠标</li>\n<li>Smalltalk –overlapping windows<br />\n 重叠窗口</li>\n<li>Bravo WYSIWYG editing<br />\n 所见即所得编辑</li>\n</ul>\n</li>\n<li>Apple hired Larry Tesler &amp; others, 1980<br />\n1980 年，苹果聘请了 Larry Tesler 等人</li>\n</ul>\n<h2 id=\"apple-lisa\"><a class=\"anchor\" href=\"#apple-lisa\">#</a> Apple &quot;Lisa&quot;</h2>\n<p>1983</p>\n<ul>\n<li>Original design for desktop<br />\n 桌面的原始设计\n<ul>\n<li>Bill Atkinson &amp; others</li>\n</ul>\n</li>\n<li>Novel pull-down menus (at top of screen)<br />\n 新颖的下拉菜单（位于屏幕顶部）</li>\n<li>Dialog boxes<br />\n 对话框</li>\n<li>Many other UI innovations<br />\n 许多其他 UI 创新</li>\n<li>Doesn't look or work like the Star<br />\n 看起来或工作方式不像 Star</li>\n<li>One button mouse<br />\n 一键鼠标</li>\n<li>Amazing programming expertise to get it to work on a tiny, inexpensive machine<br />\n 出色的编程专业知识，使其可以在小型、廉价的机器上工作</li>\n</ul>\n<p class=\"gallery\" data-height=\"220\"><img data-src=\"https://i.loli.net/2020/10/17/vH1Jiyp2UEWcwM3.jpg\" alt=\"\" /><br />\n<img data-src=\"https://i.loli.net/2020/10/17/Alo1Vi5Xf3eyuaL.jpg\" alt=\"\" /></p>\n<h2 id=\"original-macintosh\"><a class=\"anchor\" href=\"#original-macintosh\">#</a> Original Macintosh</h2>\n<p>1984</p>\n<ul>\n<li>Much cheaper than Lisa<br />\n 便宜很多</li>\n<li>No harddisk–just one floppy<br />\n 无硬盘 - 仅一张软盘</li>\n<li>128 k-bytes of memory<br />\n128k 字节的内存</li>\n<li>Much of code re-implemented in assembly<br />\n 在汇编中重新实现了很多代码</li>\n<li>Famous 1984 Super Bowl ad by Ridley Scott<br />\n1984 年 Ridley Scott 著名的 Super Bowl 超级杯广告<br />\n<img data-src=\"https://i.loli.net/2020/10/17/ZuFcO2A8qQgYvyG.jpg\" alt=\"\" /></li>\n</ul>\n<h2 id=\"pcs-windows\"><a class=\"anchor\" href=\"#pcs-windows\">#</a> PCs &amp; Windows</h2>\n<ul>\n<li>IBM PC – 1981\n<ul>\n<li>(IBM had missed the &quot;minicomputer&quot; phase dominated by DEC)<br />\n IBM 错过了 DEC 主导的 “微型计算机” 阶段</li>\n</ul>\n</li>\n<li>Used Microsoft's DOS 1.0 and shipped with VisiCalc<br />\n 与 VisiCalc 一起提供</li>\n<li>Windows 1.0 released in Nov, 1985 as DOS extension<br />\n 作为 DOS 扩展发行\n<ul>\n<li>Tiled window manager<br />\n 平铺的窗口管理器</li>\n</ul>\n</li>\n<li>Windows 2.0 was overlapping 1987</li>\n<li>Windows 3.0 in 1990, 3.1 in 1992\n<ul>\n<li>Was a real operating system<br />\n 是真正的操作系统</li>\n<li>Added virtual memory, protected multiple processing, etc.<br />\n 添加了虚拟内存，保护了多个进程，等等。<br />\n<img data-src=\"https://i.loli.net/2020/10/17/jDF8Kqp7WgicSdI.jpg\" alt=\"\" /></li>\n</ul>\n</li>\n</ul>\n<h1 id=\"main-principles\"><a class=\"anchor\" href=\"#main-principles\">#</a> Main Principles</h1>\n<p>重要原则</p>\n<h2 id=\"affordances-功能可见性\"><a class=\"anchor\" href=\"#affordances-功能可见性\">#</a> Affordances 功能可见性</h2>\n<ul>\n<li>&quot;Perceived and actual properties of the thing, primarily those fundamental properties that determine how the thing could possibly be used.&quot; (Norman DOET book, p. 9)<br />\n“事物的感知属性和实际属性，主要是那些决定如何使用事物的基本属性。”\n<ul>\n<li>&quot;When affordances are taken advantage of, the user knows what to do just by looking.&quot;<br />\n“利用功能可见性，用户只要看一下就知道该怎么做”</li>\n</ul>\n</li>\n<li>Helps people understand what to do with the control<br />\n 帮助人们了解如何使用控件</li>\n</ul>\n<h2 id=\"visual-affordances\"><a class=\"anchor\" href=\"#visual-affordances\">#</a> Visual Affordances</h2>\n<ul>\n<li>Perceived and actual fundamental properties of an object that determine how it could be used how it could be used<br />\n 对象的感知和实际基本属性，决定了如何使用对象\n<ul>\n<li>Chair is for sitting<br />\n 椅子是用来坐的</li>\n<li>Ball is for throwing<br />\n 球是用来投掷的</li>\n<li>Button is for pushing<br />\n 按钮是用来推动的</li>\n<li>Knob is for turning<br />\n 旋钮是用来转的</li>\n<li>Slider is for sliding<br />\n 滑块用于滑动</li>\n</ul>\n</li>\n<li>Complex things may need explanation, but simple things should not. If a simple thing requires instructions and pictures, it is likely a failed design<br />\n 复杂的事物可能需要解释，而简单的事物则不需要。 如果简单的事情需要说明和图片，则可能是设计的失败。</li>\n</ul>\n<p><img data-src=\"https://i.loli.net/2020/10/17/PDweIUZijGtkVQ1.jpg\" alt=\"\" /></p>\n<h2 id=\"conceptual-model-概念模型\"><a class=\"anchor\" href=\"#conceptual-model-概念模型\">#</a> Conceptual Model 概念模型</h2>\n<p>Designer can help user foster an appropriate conceptual model in Appearance, instructions, behavior...<br />\n 设计者可以帮助用户在外观、说明、行为等方面建立适当的概念模型。</p>\n<h3 id=\"example\"><a class=\"anchor\" href=\"#example\">#</a> Example</h3>\n<p>FAUCETS 重点<br />\n Are the two functions of setting hot/cold and adjusting pressure –clear from the designs?<br />\n 设计中是否清楚热 / 冷设置和调节压力的两项功能？</p>\n<p class=\"gallery\" data-height=\"220\"><img data-src=\"https://i.loli.net/2020/10/17/eAP2otK4iDVucFJ.jpg\" alt=\"\" /><br />\n<img data-src=\"https://i.loli.net/2020/10/17/U4tphBnqC7RQY5i.jpg\" alt=\"\" /><br />\n<img data-src=\"https://i.loli.net/2020/10/17/QTAjv6SfbuOEVly.jpg\" alt=\"\" /></p>\n<h2 id=\"visibility-可见布局\"><a class=\"anchor\" href=\"#visibility-可见布局\">#</a> Visibility 可见布局</h2>\n<p>When functionality is hidden, problems in use occur<br />\n 隐藏功能时，使用中会发生问题<br />\n When capabilities are visible, it does not require memory of how to use<br />\n 当功能可见时，它不需要记忆如何使用</p>\n<h3 id=\"example-2\"><a class=\"anchor\" href=\"#example-2\">#</a> Example</h3>\n<p>Example of an electric outlet socket.<br />\n 电源插座示例。</p>\n<p>What if both sides were “big” and you had to remember which side the “small” one went into?<br />\n 如果双方都是 “大方”，而您必须记住 “小方” 是哪一方呢？</p>\n<p><img data-src=\"https://i.loli.net/2020/10/17/7eG6WIVwcpnDzT3.jpg\" alt=\"\" /></p>\n<h2 id=\"mapping-映射\"><a class=\"anchor\" href=\"#mapping-映射\">#</a> Mapping 映射</h2>\n<p>Relationship between two objects, between control and action/result<br />\n 两个对象之间的关系，控制与动作 / 结果之间的关系</p>\n<p><img data-src=\"https://i.loli.net/2020/10/17/mHBloceiCq5pD4T.jpg\" alt=\"\" /></p>\n<ul>\n<li>Good\n<ul>\n<li>Car, various driving controls<br />\n 汽车，各种驾驶控制</li>\n<li>Mercedes Benz seat adjustment example<br />\n 奔驰座椅调整示例</li>\n</ul>\n</li>\n<li>Bad\n<ul>\n<li>Car stereo Knob for front/back speakers<br />\n 前置 / 后置扬声器的汽车立体声旋钮</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"example-3\"><a class=\"anchor\" href=\"#example-3\">#</a> Example</h3>\n<p>Stove 火炉<br />\n Layout of controls which lend themselves to better correlation with the burners.<br />\n 控件的布局可以更好地与燃烧器关联。</p>\n<p><img data-src=\"https://i.loli.net/2020/10/17/hjyzo3sGScl7kID.jpg\" alt=\"\" /></p>\n<h2 id=\"feedback-反馈\"><a class=\"anchor\" href=\"#feedback-反馈\">#</a> Feedback 反馈</h2>\n<p>Let someone know what just occurred.<br />\n 让某人知道发生了什么。</p>\n<ul>\n<li>Can be sound that is made (beep)<br />\n 可以发出声音（哔声）</li>\n<li>Can be change in physical state<br />\n 可以改变身体状态</li>\n</ul>\n<h2 id=\"constraints-约束\"><a class=\"anchor\" href=\"#constraints-约束\">#</a> Constraints 约束</h2>\n<p>Limitations on what can be done<br />\n 可以做什么的局限性</p>\n<ul>\n<li>Physical – Keys<br />\n 物理约束 - 键</li>\n<li>Semantic – Menu graying<br />\n 语义约束 – 菜单变灰</li>\n<li>Cultural – Colors<br />\n 文化约束 - 色彩</li>\n<li>Logical – When all above don't apply<br />\n 逻辑约束 - 如果以上所有条件均不适用</li>\n</ul>\n<h2 id=\"individual-differences\"><a class=\"anchor\" href=\"#individual-differences\">#</a> Individual Differences</h2>\n<p>个体差异</p>\n<ul>\n<li>Whom do you design for?<br />\n 为谁设计？\n<ul>\n<li>Everyone -Impossible<br />\n 所有人 - 不可能</li>\n<li>Average -miss half audience<br />\n 平均错失半数观众</li>\n<li>90% -Still may miss a lot<br />\n90％- 仍然可能会错过很多机会</li>\n</ul>\n</li>\n<li>Designers are not representative of the user population for whom they are designing<br />\n 设计师不能代表他们要设计的用户群</li>\n<li>Don't expect users to think and act like you<br />\n 不要指望用户像您一样思考和行动</li>\n<li>People vary in both physical and mental/cognitive attributes<br />\n 人们的身体和心理 / 认知属性各不相同</li>\n</ul>\n<h2 id=\"principles-applied\"><a class=\"anchor\" href=\"#principles-applied\">#</a> Principles applied</h2>\n<p><img data-src=\"https://i.loli.net/2020/10/17/1Tec4RXtPn3z7aL.jpg\" alt=\"\" /></p>\n<ul>\n<li>Affordances - Insert something into holes<br />\n 功能可见性 - 将某些东西插入孔中</li>\n<li>Constraints - Bigger hole for several fingers, small for thumb<br />\n 约束 - 多个手指的孔较大，拇指的孔较小</li>\n<li>Mapping - How to insert fingers into holes suggested by visible appearance<br />\n 映射 - 如何将手指插入可见外观建议的孔中</li>\n<li>Conceptual model - Suggested by how parts fit together and move<br />\n 概念模型 - 通过零件如何组装和移动来建议</li>\n</ul>\n",
            "tags": [
                "计算机科学",
                "Master of Software Engineering",
                "ITMD 534. Human Computer Interaction",
                "人机交互"
            ]
        },
        {
            "id": "https://shoka.lostyu.me/computer-science/mse/itmd-510/week-2/",
            "url": "https://shoka.lostyu.me/computer-science/mse/itmd-510/week-2/",
            "title": "Week 2. A First Look at Classes",
            "date_published": "2020-09-01T01:16:05.000Z",
            "content_html": "<h1 id=\"notes\"><a class=\"anchor\" href=\"#notes\">#</a> Notes</h1>\n<h2 id=\"use-case-scenario-uml\"><a class=\"anchor\" href=\"#use-case-scenario-uml\">#</a> Use Case Scenario (UML)</h2>\n<p><img data-src=\"https://i.loli.net/2020/09/13/8M5d1SwiqzlsrD7.png\" alt=\"\" /><br />\n<img data-src=\"https://i.loli.net/2020/09/13/pKy2YunrgkUtDqI.png\" alt=\"\" /></p>\n<h2 id=\"class-diagram-uml\"><a class=\"anchor\" href=\"#class-diagram-uml\">#</a> Class Diagram (UML)</h2>\n<p><img data-src=\"https://i.loli.net/2020/09/13/LaU2PE7xJvTdcF6.png\" alt=\"\" /><br />\n<img data-src=\"https://i.loli.net/2020/09/13/mSjV1HFiTWIE2tq.png\" alt=\"\" /></p>\n<h2 id=\"consider-an-application-sample-run-of-actions\"><a class=\"anchor\" href=\"#consider-an-application-sample-run-of-actions\">#</a> Consider an Application sample run of actions</h2>\n<pre class=\"info\"><code>Automated Teller Machine\nChoose 1 for Withdraw\nChoose 2 for Deposit\nChoose 3 for Check Balance\nChoose 4 for EXIT\nChoose the operation you want to perform:1\nEnter money to be withdrawn:2000\nPlease collect your money\n \nAutomated Teller Machine\nChoose 1 for Withdraw\nChoose 2 for Deposit\nChoose 3 for Check Balance\nChoose 4 for EXIT\nChoose the operation you want to perform:3\nBalance : 3000\n \nAutomated Teller Machine\nChoose 1 for Withdraw\nChoose 2 for Deposit\nChoose 3 for Check Balance\nChoose 4 for EXIT\nChoose the operation you want to perform:4</code></pre><figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> BANKATM <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> args<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">double</span> balance <span class=\"token operator\">=</span> <span class=\"token number\">5000</span><span class=\"token punctuation\">,</span> withdraw<span class=\"token punctuation\">,</span> deposit<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token class-name\">Scanner</span> s <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Automated Teller Machine\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Choose 1 for Withdraw\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Choose 2 for Deposit\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Choose 3 for Check Balance\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Choose 4 for EXIT\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Choose the operation you want to perform: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token keyword\">int</span> n <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                <span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Enter money to be withdrawn:\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                withdraw <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>balance <span class=\"token operator\">>=</span> withdraw<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                    balance <span class=\"token operator\">=</span> balance <span class=\"token operator\">-</span> withdraw<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Please collect your money\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Insufficient Balance\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>              </pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre> </pre></td></tr><tr><td data-num=\"32\"></td><td><pre>                <span class=\"token keyword\">case</span> <span class=\"token number\">2</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Enter money to be deposited:\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>                deposit <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>                balance <span class=\"token operator\">=</span> balance <span class=\"token operator\">+</span> deposit<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Your Money has been successfully depsited\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre> </pre></td></tr><tr><td data-num=\"40\"></td><td><pre>                <span class=\"token keyword\">case</span> <span class=\"token number\">3</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Balance : \"</span><span class=\"token operator\">+</span>balance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre> </pre></td></tr><tr><td data-num=\"45\"></td><td><pre>                <span class=\"token keyword\">case</span> <span class=\"token number\">4</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>                s<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"learning-about-classes-and-objects\"><a class=\"anchor\" href=\"#learning-about-classes-and-objects\">#</a> Learning about Classes and Objects</h2>\n<p>A class is a blueprint consisting of an idea. Think of it like a data structure.</p>\n<blockquote>\n<p>EX. Creating a building, making a cake, registering students, gradebook, simpleInterest…..</p>\n</blockquote>\n<p>A class also is an Abstract Data Type.</p>\n<blockquote>\n<p>EX.  <code>public Class Building ….</code> <br />\nwhere Building becomes the datatype!</p>\n</blockquote>\n<p>Create a Building object (variable)</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">Building</span> stuartObj <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Building</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// where stuartObj is of type Building</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token class-name\">Building</span> lsObj <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Building</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// where lsObj is of type Building</span></pre></td></tr></table></figure><blockquote>\n<p>Objects can be REPRESENTATIVES of the class.</p>\n</blockquote>\n<p>What kind of offerings does the class have for its objects??</p>\n<p>ENTER METHODS!!          (METHODS ARE BEHAVIORS OF THE CLASS)</p>\n<p>ENTER ATTRIBUTES!!      (DATA VALUES THAT AN INDIVIDUAL OBJECT HAVE OF THE CLASS)</p>\n<h1 id=\"lab\"><a class=\"anchor\" href=\"#lab\">#</a> Lab</h1>\n<ul>\n<li>PROJECT<br />\nBank account simulator program</li>\n<li>Objective<br />\nTo write a program that performs various bank transactions.</li>\n</ul>\n<h2 id=\"project-description\"><a class=\"anchor\" href=\"#project-description\">#</a> PROJECT DESCRIPTION</h2>\n<p>Bank of IIT has contacted you to write, compile and execute a complete program that creates bank account information and executes various transaction details for their clients.</p>\n<p>Your program will prompt users for options such as creating an initial balance, entering deposits or withdrawals. Also, your program will allow for the printing of account information including interest at various interest rates.</p>\n<p>Use any loops, user defined methods, conditional and relational logic and the basics of OOP to accomplish the objectives of this program.</p>\n<p><ins>Error trapping</ins> will be part of your grade so don’t forget to include some basic error trapping logic!  Always comment your code thoroughly and include brief program descriptions as well where applicable for your source files for maximum points.</p>\n<h2 id=\"project-details\"><a class=\"anchor\" href=\"#project-details\">#</a> Project Details</h2>\n<p>For this program you will create <strong>two</strong> separate Java files within your package, namely  <code>AccountHolder</code>  and  <code>AccountHolderTest</code> .</p>\n<p>The  <code>AccountHolder</code>  file <ins>must</ins> include the following class field members and data methods to allow for transaction processing.</p>\n<table>\n<thead>\n<tr>\n<th>Field Name</th>\n<th>Field Type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>annualInterestRate</td>\n<td>static / double</td>\n</tr>\n<tr>\n<td>balance</td>\n<td>double</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th>*Method Name</th>\n<th>Method (Instance)</th>\n<th>Argument</th>\n<th>Return Type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>AccountHolder</td>\n<td>Constructor</td>\n<td>double</td>\n<td>none</td>\n</tr>\n<tr>\n<td>deposit</td>\n<td>Instance</td>\n<td>double</td>\n<td>void</td>\n</tr>\n<tr>\n<td>withdrawal</td>\n<td>Instance</td>\n<td>double</td>\n<td>void</td>\n</tr>\n<tr>\n<td>monthlyInterest</td>\n<td>Instance</td>\n<td>void</td>\n<td>void</td>\n</tr>\n<tr>\n<td>getBalance</td>\n<td>Instance</td>\n<td>void</td>\n<td>double</td>\n</tr>\n</tbody>\n</table>\n<p>*assume all methods are declared as public</p>\n<p>Of course if you would like to add any extra fields or methods in your class(es) feel free<br />\nto do so.</p>\n<p>Coding detail for your methods must include the following:</p>\n<ol>\n<li>\n<p>Allow the Constructor to accept an argument representing an initial balance for the Account holder. Set your balance member equal to the value passed in via the class constructor.<br />\n<span class=\"red\">Balances cannot start off negative! Include an error message if this is the situation.</span></p>\n</li>\n<li>\n<p>Define in your monthlyInterest method body, an assignment statement to update the account holders’ balance to be affected as follows:</p>\n<p><code>balance += balance * (annualInterestRate / 12.0);</code></p>\n</li>\n<li>\n<p>For your deposit &amp; withdrawal methods, either have your method body either increase or decrease the holder’s current balance accordingly.</p>\n<p>An added rule to follow here:</p>\n<p>Disallow the withdrawal account balance to drop below $50.</p>\n</li>\n<li>\n<p>Include comments on what your method is to perform (ex. any data to be received and what to return back to the calling environment).</p>\n</li>\n</ol>\n<p>For your AccountHolderTest file, include any local variables in your main method to work the application. Include the following transactional detail from your main method, to be executed in the following order for runtime needs. Run your program twice and follow details below and snapshot your results for each run. Label snapshots accordingly in your documentation.</p>\n<h3 id=\"snapshot-1-run-1\"><a class=\"anchor\" href=\"#snapshot-1-run-1\">#</a> Snapshot 1 – run #1</h3>\n<ol>\n<li>\n<p>Create an AccountHolder object and prompt the user for an initial account balance and have the balance passed into the AccountHolder constructor.</p>\n</li>\n<li>\n<p>Allow the interest for the bank to be initially set at 4%. This can be hard coded in.</p>\n</li>\n<li>\n<p>Prompt the user to enter in a deposit amount.</p>\n</li>\n<li>\n<p>Prompt the user for a withdrawal amount. Show an example when a user enters a withdrawal that will drop their balance below $50. Display a message stating that a balance cannot go below $50.</p>\n</li>\n<li>\n<p>Display the ending or updated balance with included interest amount applied.</p>\n</li>\n</ol>\n<h3 id=\"snapshot-2-run-2\"><a class=\"anchor\" href=\"#snapshot-2-run-2\">#</a> Snapshot 2 – run #2</h3>\n<ol>\n<li>\n<p>Prompt the user for an initial account balance.  Include a negative starting balance<br />\nentry and thus allow for a positive value only to be accepted.</p>\n</li>\n<li>\n<p>Allow the interest for the bank to be initially set at 4%. This can be hard coded in.</p>\n</li>\n<li>\n<p>Prompt the user to enter in a deposit amount.</p>\n</li>\n<li>\n<p>Prompt the user for a withdrawal amount.</p>\n</li>\n<li>\n<p>Display the ending or updated balance with included interest amount applied.</p>\n</li>\n</ol>\n<h2 id=\"objectives-general-tips\"><a class=\"anchor\" href=\"#objectives-general-tips\">#</a> Objectives / General Tips</h2>\n<h3 id=\"uml-of-classes\"><a class=\"anchor\" href=\"#uml-of-classes\">#</a> UML of classes</h3>\n<pre class=\"mermaid\"><svg id=\"mermaid-1605038088787\" width=\"100%\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" height=\"235\" style=\"max-width: 208.390625px;\" viewBox=\"-20 -20 208.390625 235\"><g></g><defs><marker id=\"extensionStart\" class=\"extension\" refX=\"0\" refY=\"7\" markerWidth=\"190\" markerHeight=\"240\" orient=\"auto\"><path d=\"M 1,7 L18,13 V 1 Z\"></path></marker></defs><defs><marker id=\"extensionEnd\" refX=\"19\" refY=\"7\" markerWidth=\"20\" markerHeight=\"28\" orient=\"auto\"><path d=\"M 1,1 V 13 L18,7 Z\"></path></marker></defs><defs><marker id=\"compositionStart\" class=\"extension\" refX=\"0\" refY=\"7\" markerWidth=\"190\" markerHeight=\"240\" orient=\"auto\"><path d=\"M 18,7 L9,13 L1,7 L9,1 Z\"></path></marker></defs><defs><marker id=\"compositionEnd\" refX=\"19\" refY=\"7\" markerWidth=\"20\" markerHeight=\"28\" orient=\"auto\"><path d=\"M 18,7 L9,13 L1,7 L9,1 Z\"></path></marker></defs><defs><marker id=\"aggregationStart\" class=\"extension\" refX=\"0\" refY=\"7\" markerWidth=\"190\" markerHeight=\"240\" orient=\"auto\"><path d=\"M 18,7 L9,13 L1,7 L9,1 Z\"></path></marker></defs><defs><marker id=\"aggregationEnd\" refX=\"19\" refY=\"7\" markerWidth=\"20\" markerHeight=\"28\" orient=\"auto\"><path d=\"M 18,7 L9,13 L1,7 L9,1 Z\"></path></marker></defs><defs><marker id=\"dependencyStart\" class=\"extension\" refX=\"0\" refY=\"7\" markerWidth=\"190\" markerHeight=\"240\" orient=\"auto\"><path d=\"M 5,7 L9,13 L1,7 L9,1 Z\"></path></marker></defs><defs><marker id=\"dependencyEnd\" refX=\"19\" refY=\"7\" markerWidth=\"20\" markerHeight=\"28\" orient=\"auto\"><path d=\"M 18,7 L9,13 L14,7 L9,1 Z\"></path></marker></defs><g id=\"classid-AccountHolder-0\" class=\"classGroup\" transform=\"translate(0,0 )\"><rect x=\"0\" y=\"0\" width=\"168.390625\" height=\"98\" class=\" \"></rect><text y=\"15\" x=\"0\"><tspan class=\"title\" x=\"49.1953125\">AccountHolder</tspan></text><line x1=\"0\" y1=\"21\" y2=\"21\" x2=\"168.390625\"></line><text x=\"5\" y=\"31\" fill=\"white\" class=\"classText\"><tspan x=\"5\">-balance : double</tspan><tspan x=\"5\" dy=\"10\">+annualInterestRate : double</tspan></text><line x1=\"0\" y1=\"47\" y2=\"47\" x2=\"168.390625\"></line><text x=\"5\" y=\"62\" fill=\"white\" class=\"classText\"><tspan x=\"5\">+AccountHolder(balance : double)</tspan><tspan x=\"5\" dy=\"10\">+deposit(balance : double)</tspan><tspan x=\"5\" dy=\"10\">+withdrawal(balance : double)</tspan><tspan x=\"5\" dy=\"10\">+monthlyInterest()</tspan></text></g><g id=\"classid-AccountHolderTest-1\" class=\"classGroup\" transform=\"translate(35.0234375,148 )\"><rect x=\"0\" y=\"0\" width=\"98.34375\" height=\"47\" class=\" \"></rect><text y=\"15\" x=\"0\"><tspan class=\"title\" x=\"5\">AccountHolderTest</tspan></text><line x1=\"0\" y1=\"21\" y2=\"21\" x2=\"98.34375\"></line><text x=\"5\" y=\"31\" fill=\"white\" class=\"classText\"></text><line x1=\"0\" y1=\"26\" y2=\"26\" x2=\"98.34375\"></line><text x=\"5\" y=\"41\" fill=\"white\" class=\"classText\"><tspan x=\"5\">+main()</tspan></text></g><path d=\"M84.1953125,98L84.1953125,102.16666666666667C84.1953125,106.33333333333333,84.1953125,114.66666666666667,84.1953125,123C84.1953125,131.33333333333334,84.1953125,139.66666666666666,84.1953125,143.83333333333334L84.1953125,148\" id=\"edge0\" class=\"relation\"></path></svg></pre><h3 id=\"accessing-data\"><a class=\"anchor\" href=\"#accessing-data\">#</a> Accessing data</h3>\n<p>2 ways to access data</p>\n<ol>\n<li>\n<p>For static members (fields)<br />\n <code>ClassName.staticmember</code></p>\n<p>Ex.</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">AccountHolder</span><span class=\"token punctuation\">.</span>annualInterestRate <span class=\"token operator\">=</span> <span class=\"token number\">.04</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n<li>\n<p>For instance members (fields)<br />\n <code>objectName.method()</code></p>\n</li>\n</ol>\n<h3 id=\"the-constructor\"><a class=\"anchor\" href=\"#the-constructor\">#</a> The Constructor</h3>\n<p>When object is created the Constructor is called automatically.</p>\n<p>Ex.</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">AccountHolder</span> accObj1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AccountHolder</span><span class=\"token punctuation\">(</span>balance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"error-trappings\"><a class=\"anchor\" href=\"#error-trappings\">#</a> Error trappings!</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>balance <span class=\"token operator\">&lt;</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>         <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">IllegalArgumentException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"balance must be non-negative\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>other:</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    balance <span class=\"token operator\">=</span> sc<span class=\"token punctuation\">.</span><span class=\"token function\">nextDouble</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>balance <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Pls. reenter a positive beginning balance\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">else</span> </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"avoiding-self-referential-assigning\"><a class=\"anchor\" href=\"#avoiding-self-referential-assigning\">#</a> Avoiding Self-Referential assigning!</h3>\n<p>*Use this (which refers to a current object’s instance) keyword in a method to avoid self referential integrity!<br />\n <code>this.balance = balance;</code></p>\n<p>ex.</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// constructor, creates a new account with the specified balance</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token class-name\">AccountHolder</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span> balance<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>balance <span class=\"token operator\">=</span> balance<span class=\"token punctuation\">;</span>      <span class=\"token comment\">//assign local variable to class member </span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"print-formatting\"><a class=\"anchor\" href=\"#print-formatting\">#</a> Print formatting</h3>\n<p>Use various print formatting with the format specifier  <code>%</code>  symbol followed by a converter.</p>\n<p>Popular converters to use include:</p>\n<table>\n<tbody>\n<tr>\n<td><code>%f</code></td>\n<td>float</td>\n</tr>\n<tr>\n<td><code>%d</code></td>\n<td>int</td>\n</tr>\n<tr>\n<td><code>%s</code></td>\n<td>string</td>\n</tr>\n<tr>\n<td><code>%n</code></td>\n<td>newline</td>\n</tr>\n</tbody>\n</table>\n<p>Ex.</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$%.2f\"</span><span class=\"token punctuation\">,</span> balance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//print currency style</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span>format <span class=\"token punctuation\">(</span><span class=\"token string\">\"%-10s%n\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Total balance\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"code\"><a class=\"anchor\" href=\"#code\">#</a> code</h2>\n<p><img data-src=\"https://i.loli.net/2020/09/13/OPJnGdpUAZ9v3fq.png\" alt=\"Snapshot 1\" title=\"Snapshot 1 – run #1\" /><br />\n<img data-src=\"https://i.loli.net/2020/09/13/eY973H5Psbx8FGU.png\" alt=\"Snapshot 2\" title=\"Snapshot 2 – run #2\" /></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>AccountHolder.java</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AccountHolder</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\">// class level data members</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">double</span> balance<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">static</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">double</span> annualInterestRate<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\">/* class methods */</span>    </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>     * constructor method</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>     * Create a new account with the specified balance</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>     * </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>     * @param balance</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">AccountHolder</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span> balance<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>balance <span class=\"token operator\">=</span> balance<span class=\"token punctuation\">;</span> <span class=\"token comment\">// assign local variable to class member </span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>     * Set a deposit</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>     * </pre></td></tr><tr><td data-num=\"21\"></td><td><pre>     * @param balance</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">deposit</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span> balance<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>balance <span class=\"token operator\">+=</span> balance<span class=\"token punctuation\">;</span>   <span class=\"token comment\">//ADD to existing BALANCE local variable</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>     * Set a withdrawal</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>     * </pre></td></tr><tr><td data-num=\"30\"></td><td><pre>     * @param balance</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">withdrawal</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span> balance<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token comment\">/* Check the existing balance!!!</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>         * DO NOT allow the balance to go below $50</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>         */</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>balance <span class=\"token operator\">-</span> balance <span class=\"token operator\">&lt;</span> <span class=\"token number\">50.0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">IllegalArgumentException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Disallow the withdrawal account balance to drop below $50.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>balance <span class=\"token operator\">-=</span> balance<span class=\"token punctuation\">;</span>   <span class=\"token comment\">//SUBTRACT from existing BALANCE local variable</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"46\"></td><td><pre>     * Monthly Interest</pre></td></tr><tr><td data-num=\"47\"></td><td><pre>     * </pre></td></tr><tr><td data-num=\"48\"></td><td><pre>     * update the account holders’ balance based on annualInterestRate / 12.0</pre></td></tr><tr><td data-num=\"49\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">monthlyInterest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        balance <span class=\"token operator\">+=</span> balance <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>annualInterestRate <span class=\"token operator\">/</span> <span class=\"token number\">12.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    <span class=\"token comment\">// getters</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">double</span> <span class=\"token function\">getBalance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>        <span class=\"token keyword\">return</span> balance<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>AccountHolderTest.java</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">InputMismatchException</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AccountHolderTest</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token comment\">//set up program local variables</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token class-name\">Scanner</span> in <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">double</span> balance <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Automated Teller Machine\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token comment\">// prompt the user for an initial account balance </span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Please enter your initial balance: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                balance <span class=\"token operator\">=</span> in<span class=\"token punctuation\">.</span><span class=\"token function\">nextDouble</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>balance <span class=\"token operator\">&lt;</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// Balances cannot start off negative</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                    <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">IllegalArgumentException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Balance must be non-negative. Please re-enter a positive beginning balance.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">InputMismatchException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>err<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Illegal value. Please re-enter a double.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                in<span class=\"token punctuation\">.</span><span class=\"token function\">nextLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>err<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token comment\">//set AccountHolder object</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token class-name\">AccountHolder</span> accObj <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AccountHolder</span><span class=\"token punctuation\">(</span>balance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token comment\">//set interest rate at 4%</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token class-name\">AccountHolder</span><span class=\"token punctuation\">.</span>annualInterestRate <span class=\"token operator\">=</span> <span class=\"token number\">.04</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\nA new account created successfully. Initial balance \"</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>                <span class=\"token operator\">+</span> <span class=\"token string\">\"is $%.2f.\\n\"</span> <span class=\"token punctuation\">,</span> balance <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//new line</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        <span class=\"token comment\">// Operation selector</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>            <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Choose 1 for Deposit\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Choose 2 for Withdraw\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Choose 3 for Check Balance\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Choose 4 for EXIT\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Choose the operation you want to perform: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>                </pre></td></tr><tr><td data-num=\"55\"></td><td><pre>                <span class=\"token keyword\">int</span> n <span class=\"token operator\">=</span> in<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>                </pre></td></tr><tr><td data-num=\"57\"></td><td><pre>                <span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>                    <span class=\"token comment\">// set a deposit</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>                    <span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>                    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>                    </pre></td></tr><tr><td data-num=\"61\"></td><td><pre>                        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>                            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//new line</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>                            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Please enter a deposit: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>                            </pre></td></tr><tr><td data-num=\"65\"></td><td><pre>                            balance <span class=\"token operator\">=</span> in<span class=\"token punctuation\">.</span><span class=\"token function\">nextDouble</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>                            accObj<span class=\"token punctuation\">.</span><span class=\"token function\">deposit</span><span class=\"token punctuation\">(</span>balance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>                            </pre></td></tr><tr><td data-num=\"68\"></td><td><pre>                            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Your Money has been successfully depsited.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>                            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>                        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">InputMismatchException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>                            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>err<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Illegal value. Please re-enter a correct value.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>                            in<span class=\"token punctuation\">.</span><span class=\"token function\">nextLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>                        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>                    </pre></td></tr><tr><td data-num=\"76\"></td><td><pre>                    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>                    </pre></td></tr><tr><td data-num=\"78\"></td><td><pre>                    <span class=\"token comment\">// set a withdrawal</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>                    <span class=\"token keyword\">case</span> <span class=\"token number\">2</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>                    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>                    </pre></td></tr><tr><td data-num=\"81\"></td><td><pre>                        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>                            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//new line</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>                            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Please enter a withdrawal: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>                            </pre></td></tr><tr><td data-num=\"85\"></td><td><pre>                            balance <span class=\"token operator\">=</span> in<span class=\"token punctuation\">.</span><span class=\"token function\">nextDouble</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>                            accObj<span class=\"token punctuation\">.</span><span class=\"token function\">withdrawal</span><span class=\"token punctuation\">(</span>balance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>                            </pre></td></tr><tr><td data-num=\"88\"></td><td><pre>                            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Please collect your money.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>                            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>                        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">InputMismatchException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>                            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>err<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Illegal value. Please re-enter a correct value.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>                            in<span class=\"token punctuation\">.</span><span class=\"token function\">nextLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>                        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>                            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>err<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>                        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>                    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>     </pre></td></tr><tr><td data-num=\"99\"></td><td><pre>                    <span class=\"token comment\">// check balance</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>                    <span class=\"token keyword\">case</span> <span class=\"token number\">3</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>                    <span class=\"token comment\">// update the account holders’ balance with included interest amount applied</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>                    accObj<span class=\"token punctuation\">.</span><span class=\"token function\">monthlyInterest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>                    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\nBalance with interest applied \"</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>                            <span class=\"token operator\">+</span> <span class=\"token string\">\"= $%.2f \\n\"</span> <span class=\"token punctuation\">,</span> accObj<span class=\"token punctuation\">.</span><span class=\"token function\">getBalance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>                    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>                    </pre></td></tr><tr><td data-num=\"107\"></td><td><pre>                    <span class=\"token comment\">// exit the system</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>                    <span class=\"token keyword\">case</span> <span class=\"token number\">4</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>                    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\nThanks for using this system. See you next time.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>                    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>                    in<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>                    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>                    </pre></td></tr><tr><td data-num=\"114\"></td><td><pre>                    <span class=\"token keyword\">default</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>                    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>err<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\nChoosing the wrong option, please reselect.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>                    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"119\"></td><td><pre>                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//new line</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">InputMismatchException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>err<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Illegal value. Please re-enter a correct value.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>                in<span class=\"token punctuation\">.</span><span class=\"token function\">nextLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span>            </pre></td></tr><tr><td data-num=\"125\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "计算机科学",
                "Master of Software Engineering",
                "ITMD 510. Object-Oriented App Develop",
                "Java"
            ]
        },
        {
            "id": "https://shoka.lostyu.me/computer-science/mse/itmd-510/week-1/",
            "url": "https://shoka.lostyu.me/computer-science/mse/itmd-510/week-1/",
            "title": "Week 1. Java Fundamental / Best programming practices",
            "date_published": "2020-08-24T02:23:05.000Z",
            "content_html": "<h1 id=\"notes\"><a class=\"anchor\" href=\"#notes\">#</a> Notes</h1>\n<h2 id=\"best-programming-practices\"><a class=\"anchor\" href=\"#best-programming-practices\">#</a> Best programming practices</h2>\n<h3 id=\"what-is-a-program\"><a class=\"anchor\" href=\"#what-is-a-program\">#</a> What is a program</h3>\n<p>A program is a sequence of instructions that specifies how to perform a computation. The computation might be something mathematical, such as solving a system of mathematical equations or finding the roots of a polynomial, but it can also be a symbolic computation, such as searching and replacing text in a document or something graphical, like processing user input on an ATM device.</p>\n<h3 id=\"essence-or-workflow-of-a-program\"><a class=\"anchor\" href=\"#essence-or-workflow-of-a-program\">#</a> Essence or &quot;Workflow&quot; of a Program</h3>\n<pre class=\"mermaid graph\"><svg id=\"mermaid-1605038080636\" width=\"100%\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" height=\"71\" style=\"max-width: 807.1875px;\" viewBox=\"0 0 807.1875 71\"><g><g class=\"output\"><g class=\"clusters\"></g><g class=\"edgePaths\"><g class=\"edgePath LS-A LE-B\" id=\"L-A-B\" style=\"opacity: 1;\"><path class=\"path\" d=\"M204.734375,35.5L248.6640625,35.5L292.59375,35.5\" marker-end=\"url(#arrowhead14)\" style=\"fill:none\"></path><defs><marker id=\"arrowhead14\" viewBox=\"0 0 10 10\" refX=\"9\" refY=\"5\" markerUnits=\"strokeWidth\" markerWidth=\"8\" markerHeight=\"6\" orient=\"auto\"><path d=\"M 0 0 L 10 5 L 0 10 z\" class=\"arrowheadPath\" style=\"stroke-width: 1; stroke-dasharray: 1, 0;\"></path></marker></defs></g><g class=\"edgePath LS-B LE-C\" id=\"L-B-C\" style=\"opacity: 1;\"><path class=\"path\" d=\"M562.90625,35.5L613.171875,35.5L663.4375,35.5\" marker-end=\"url(#arrowhead15)\" style=\"fill:none\"></path><defs><marker id=\"arrowhead15\" viewBox=\"0 0 10 10\" refX=\"9\" refY=\"5\" markerUnits=\"strokeWidth\" markerWidth=\"8\" markerHeight=\"6\" orient=\"auto\"><path d=\"M 0 0 L 10 5 L 0 10 z\" class=\"arrowheadPath\" style=\"stroke-width: 1; stroke-dasharray: 1, 0;\"></path></marker></defs></g></g><g class=\"edgeLabels\"><g class=\"edgeLabel\" transform=\"translate(248.6640625,35.5)\" style=\"opacity: 1;\"><g transform=\"translate(-18.9296875,-9.5)\" class=\"label\"><rect rx=\"0\" ry=\"0\" width=\"38.0625\" height=\"18.546875\"></rect><text><tspan xml:space=\"preserve\" dy=\"1em\" x=\"1\">Input</tspan></text></g></g><g class=\"edgeLabel\" transform=\"translate(613.171875,35.5)\" style=\"opacity: 1;\"><g transform=\"translate(-25.265625,-9.5)\" class=\"label\"><rect rx=\"0\" ry=\"0\" width=\"50.734375\" height=\"18.546875\"></rect><text><tspan xml:space=\"preserve\" dy=\"1em\" x=\"1\">Output</tspan></text></g></g></g><g class=\"nodes\"><g class=\"node default\" id=\"flowchart-A-4\" transform=\"translate(106.3671875,35.5)\" style=\"opacity: 1;\"><rect rx=\"0\" ry=\"0\" x=\"-98.3671875\" y=\"-19.5\" width=\"196.734375\" height=\"39\" class=\"label-container\"></rect><g class=\"label\" transform=\"translate(0,0)\"><g transform=\"translate(-88.3671875,-9.5)\"><text style=\"\"><tspan xml:space=\"preserve\" dy=\"1em\" x=\"1\">A list of positive number</tspan></text></g></g></g><g class=\"node default\" id=\"flowchart-B-5\" transform=\"translate(427.75,35.5)\" style=\"opacity: 1;\"><rect rx=\"5\" ry=\"5\" x=\"-135.15625\" y=\"-27.5\" width=\"270.3125\" height=\"55\" class=\"label-container\"></rect><g class=\"label\" transform=\"translate(0,0)\"><g transform=\"translate(-125.15625,-17.5)\"><text style=\"\"><tspan xml:space=\"preserve\" dy=\"1em\" x=\"1\">Progress </tspan><tspan xml:space=\"preserve\" dy=\"1em\" x=\"1\"> find the largest number of the list</tspan></text></g></g></g><g class=\"node default\" id=\"flowchart-C-7\" transform=\"translate(731.3125,35.5)\" style=\"opacity: 1;\"><rect rx=\"0\" ry=\"0\" x=\"-67.875\" y=\"-19.5\" width=\"135.75\" height=\"39\" class=\"label-container\"></rect><g class=\"label\" transform=\"translate(0,0)\"><g transform=\"translate(-57.875,-9.5)\"><text style=\"\"><tspan xml:space=\"preserve\" dy=\"1em\" x=\"1\">A single number</tspan></text></g></g></g></g></g></g></svg></pre><dl>\n<dt>input</dt>\n<dd>Get data from the &quot;outside world&quot;. This might be reading data from the keyboard or a file, or even some kind of sensor like a microphone or GPS.</dd>\n<dt>process</dt>\n<dd>Perform computions by the CPU (Central Processing Unit) of the device</dd>\n<dt>output</dt>\n<dd>Display the results of the program on a screen or store them in a file or perhaps write them to a device like a speaker to play music or speak text.</dd>\n</dl>\n<h3 id=\"design-aspects-for-problem-solving\"><a class=\"anchor\" href=\"#design-aspects-for-problem-solving\">#</a> Design Aspects for problem solving</h3>\n<p><img data-src=\"https://i.loli.net/2020/09/12/BC5P3uYgKzwvDOT.png\" alt=\"\" /></p>\n<h3 id=\"basic-building-block-of-a-program\"><a class=\"anchor\" href=\"#basic-building-block-of-a-program\">#</a> Basic Building Block of a Program</h3>\n<p>Every program goes thru either or all of the following flows</p>\n<ol>\n<li>Sequential (Top Down execution)</li>\n<li>Selective (Decision making execution)</li>\n<li>Iterative or &quot;Loop repetition&quot;</li>\n</ol>\n<p><img data-src=\"https://i.loli.net/2020/09/12/fCatylRmzLjcvrK.png\" alt=\"\" /></p>\n<h2 id=\"java-fundamentals\"><a class=\"anchor\" href=\"#java-fundamentals\">#</a> Java Fundamentals</h2>\n<h3 id=\"variables\"><a class=\"anchor\" href=\"#variables\">#</a> Variables</h3>\n<p>Defined: a value stored in memory that can change</p>\n<ol>\n<li>\n<p>Declarations<br />\nEstablish good naming conventions!</p>\n<p>Ex.  <code>emp_Rate</code>   or  <code>empRate</code>    <code>empHours</code> ,  <code>empId</code></p>\n</li>\n<li>\n<p>Scope (variable visibility)</p>\n<p>Variables can be defined to be &quot;visible&quot; or seen at the local vs. class level (static).</p>\n</li>\n</ol>\n<h3 id=\"constants\"><a class=\"anchor\" href=\"#constants\">#</a> Constants</h3>\n<p>Defined: a value stored in memory that cannot change</p>\n<p>Use of keyword -&gt;  <code>final</code></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> ival <span class=\"token operator\">=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//value needed immediately upon declaration!</span></pre></td></tr></table></figure><h3 id=\"basic-data-types\"><a class=\"anchor\" href=\"#basic-data-types\">#</a> Basic Data Types</h3>\n<table>\n<thead>\n<tr>\n<th>Primitives (8)</th>\n<th>Reference or Class based examples</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>byte</td>\n<td>Random</td>\n</tr>\n<tr>\n<td>boolean</td>\n<td>String</td>\n</tr>\n<tr>\n<td>float</td>\n<td>Float</td>\n</tr>\n<tr>\n<td>double</td>\n<td>Double</td>\n</tr>\n<tr>\n<td>int</td>\n<td>Integer</td>\n</tr>\n<tr>\n<td>short</td>\n<td>Short</td>\n</tr>\n<tr>\n<td>long</td>\n<td>Long</td>\n</tr>\n<tr>\n<td>char</td>\n<td>Character</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> j<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> k<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">double</span> a <span class=\"token operator\">=</span> <span class=\"token number\">2.0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">double</span> b <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><span class=\"red\">Avoid a common pitfall!</span></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> result <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token operator\">/</span><span class=\"token number\">4</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//0 as truncation occurs</span></pre></td></tr></table></figure><h3 id=\"operators\"><a class=\"anchor\" href=\"#operators\">#</a> Operators</h3>\n<p>Know operator precedence and associativities!</p>\n<p>Order of operations (highest to lowest)</p>\n<ol>\n<li>Arithmetic</li>\n<li>Conditionals  <code>(</code>  and  <code>&amp;&amp;</code> , or  <code>||</code> , not  <code>!</code>  )</li>\n<li>Relational (  <code>&gt;</code> ,  <code>&lt;</code> ,  <code>&gt;=</code> ,  <code>&lt;=</code> ,  <code>!=</code> ,  <code>==</code>  )</li>\n</ol>\n<p>Keynote: use shortcut operators in assignment statements</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">++</span>count<span class=\"token punctuation\">;</span>  <span class=\"token comment\">//pre increment operator (change to variable takes place immediately) </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// vs.</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>count<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//post increment operator (change to variable takes place after assignment ends)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// same as</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>count <span class=\"token operator\">=</span> count <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// or</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>count<span class=\"token operator\">+=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><span class=\"red\">Avoid a common pitfall!</span> -Checking for equality!!</p>\n<p>FOR NUMERIC TYPES USE</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> a <span class=\"token operator\">=</span> <span class=\"token number\">12</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">(</span><span class=\"token number\">5</span> <span class=\"token operator\">==</span> a<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>FOR STRING TYPES USE EQUALS METHOD!</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">String</span> name1 <span class=\"token operator\">=</span> <span class=\"token string\">\"Joe\"</span><span class=\"token punctuation\">,</span> name2 <span class=\"token operator\">=</span> <span class=\"token string\">\"Jack\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">(</span>name1<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>name2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"conditionals\"><a class=\"anchor\" href=\"#conditionals\">#</a> Conditionals</h3>\n<h4 id=\"if-statements\"><a class=\"anchor\" href=\"#if-statements\">#</a> if statements</h4>\n<p>format:</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>a<span class=\"token operator\">></span>b<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre> <span class=\"token comment\">//if true do something</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre> <span class=\"token comment\">//if false do something else</span></pre></td></tr></table></figure><p>Make use of curly bracies  <code>&#123; &#125;</code>  to combine statements</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>Example</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>a<span class=\"token operator\">></span>b<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre> result <span class=\"token operator\">=</span> a<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Value = \"</span> <span class=\"token operator\">+</span> result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre> result <span class=\"token operator\">=</span> b<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Value = \"</span> <span class=\"token operator\">+</span> result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4 id=\"other-forms-multi-branched-nested\"><a class=\"anchor\" href=\"#other-forms-multi-branched-nested\">#</a> Other forms- multi branched, nested</h4>\n<p>if alternative – the CEO (Conditional Expression Operator)</p>\n<p>Known as a ternary operator  -    <code>? :</code></p>\n<p>format:  <code>conditon ? true expression : false expression</code></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>Example</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> result <span class=\"token operator\">=</span> a<span class=\"token operator\">></span>b <span class=\"token operator\">?</span> a <span class=\"token operator\">:</span> b<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// if statement equivalent</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>a<span class=\"token operator\">></span>b<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre> result <span class=\"token operator\">=</span> a<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre> result <span class=\"token operator\">=</span> b<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h4 id=\"truth-tables\"><a class=\"anchor\" href=\"#truth-tables\">#</a> Truth tables</h4>\n<table>\n<thead>\n<tr>\n<th colspan=\"2\">And  <code>&amp;&amp;</code>  Expression-  <code>a&gt;b &amp;&amp; b&gt;c</code></th>\n<th colspan=\"2\">Or  <code>||</code>  Expression-  <code>a&gt;b || b&gt;c</code></th>\n<th rowspan=\"2\">Not  <code>!</code>  Expression-  <code>!(a&gt;b)</code></th>\n</tr>\n<tr>\n<th>Cond.</th>\n<th>Result</th>\n<th>Cond.</th>\n<th>Result</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>T &amp;&amp; T</code></td>\n<td>T</td>\n<td><code>T || T</code></td>\n<td>T</td>\n<td><code>!T = F</code></td>\n</tr>\n<tr>\n<td><code>F &amp;&amp;  T</code></td>\n<td>F</td>\n<td><code>F || T</code></td>\n<td>T</td>\n<td><code>!F= T</code></td>\n</tr>\n<tr>\n<td><code>T &amp;&amp; F</code></td>\n<td>F</td>\n<td><code>T || F</code></td>\n<td>T</td>\n</tr>\n<tr>\n<td><code>F &amp;&amp; F</code></td>\n<td>F</td>\n<td><code>F || F</code></td>\n<td>F</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"loops\"><a class=\"anchor\" href=\"#loops\">#</a> Loops</h3>\n<p>while, do-while, for, for enhanced</p>\n<p>format:  <code>while (some condition holds true)</code></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>Example</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> count <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>count<span class=\"token operator\">&lt;</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre> <span class=\"token comment\">//do something</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre> count<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//increment counter variable</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"arrays\"><a class=\"anchor\" href=\"#arrays\">#</a> Arrays</h3>\n<ul>\n<li>\n<p>Index or subscript based</p>\n</li>\n<li>\n<p>Holds a series or list of values</p>\n</li>\n<li>\n<p>Can be fixed or dynamic</p>\n</li>\n<li>\n<p>Chief advantages<br />\nCan be sorted, searched, averaged, find max/min values, printed…</p>\n</li>\n<li>\n<p>Any disadvantages???</p>\n</li>\n</ul>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> array<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>array<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token number\">14</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//update array at subscript 2, element #3</span></pre></td></tr></table></figure><table>\n<thead>\n<tr>\n<th>Element number</th>\n<th>Subscript number (or index)</th>\n<th>Value at subscript position</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>0</td>\n<td>1</td>\n</tr>\n<tr>\n<td>2</td>\n<td>1</td>\n<td>2</td>\n</tr>\n<tr>\n<td>3</td>\n<td>2</td>\n<td>14</td>\n</tr>\n<tr>\n<td>4</td>\n<td>3</td>\n<td>4</td>\n</tr>\n<tr>\n<td>5</td>\n<td>4</td>\n<td>5</td>\n</tr>\n</tbody>\n</table>\n<p>Ex. Cycle thru array up to array length - 1</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> array<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h1 id=\"review\"><a class=\"anchor\" href=\"#review\">#</a> Review</h1>\n<h2 id=\"truefalse\"><a class=\"anchor\" href=\"#truefalse\">#</a> True/False</h2>\n<ol>\n<li class=\"quiz false\">\n<p>The first step to the problem-solving process is to implement the algorithm in a programming language, such as Java, and verify that the algorithm works.</p>\n<blockquote>\n<p>译：解决问题过程的第一步是用一种编程语言（例如 Java）实现该算法，并验证该算法是否有效。</p>\n<ol>\n<li>Define Problem 定义问题</li>\n<li>Create (suggest) a solution (s) 创建一个解决方案</li>\n<li>Code away!! 编写代码</li>\n<li>Test 测试</li>\n<li>Maintenance (ongoing) （持续）维护</li>\n</ol>\n</blockquote>\n</li>\n<li class=\"quiz false\">\n<p>The symbol  <code>'5'</code>  does not belong to the char data type because 5 is a digit.</p>\n<blockquote>\n<p>char letter = 'a';<br />\nString letter = &quot;a&quot;;</p>\n</blockquote>\n</li>\n<li class=\"quiz false\">\n<p>If  <code>++x</code>  is used in an expression, first the expression is evaluated, and then the value of  <code>x</code>  is incremented by  <code>1</code> .</p>\n<blockquote>\n<p><code>++x;</code>  same as =&gt;  <code>x = x + 1;</code> <br />\n <code>++x;</code> (先加再运算)<br />\n <code>x = x + 1;</code>  (update to variable occurs AFTER expression is evalutated 对变量的更新发生在表达式被赋值之后)</p>\n</blockquote>\n</li>\n<li class=\"quiz true\">\n<p>In Java,  <code>!</code> ,  <code>&amp;&amp;</code> , and  <code>||</code>  are called logical operators.</p>\n<blockquote>\n<ol>\n<li>Arithmetic 算数</li>\n<li>Conditional 条件</li>\n<li>Relational 关系</li>\n</ol>\n</blockquote>\n</li>\n<li class=\"quiz true\">\n<p>Suppose  <code>P</code>  and  <code>Q</code>  are logical expressions. The logical expression  <code>P &amp;&amp; Q</code>  is false if both  <code>P</code>  and  <code>Q</code>  are false.</p>\n<blockquote>\n<p>Ex.  <code>P</code>  =&gt;   <code>A&gt;B</code>    ,   <code>Q</code>  =&gt;  <code>A==2</code>  is  <code>P&amp;&amp;Q</code>  a true outcome</p>\n</blockquote>\n</li>\n<li class=\"quiz false\">\n<p>The output of the Java code, assuming that all variables are properly declared, is 32.</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>num <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>num <span class=\"token operator\">&lt;=</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   \tnum <span class=\"token operator\">=</span> num <span class=\"token operator\">+</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><blockquote>\n<p>Result:<br />\n15 20 25 30 35<br />\nEnding value is 35</p>\n</blockquote>\n<div class=\"note default no-icon\">\n<p>Loop Trace!</p>\n<table>\n<thead>\n<tr>\n<th>Loop count (cycle)</th>\n<th>Result (num)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>15</td>\n</tr>\n<tr>\n<td>2</td>\n<td>20</td>\n</tr>\n<tr>\n<td>3</td>\n<td>25</td>\n</tr>\n<tr>\n<td>4</td>\n<td>30</td>\n</tr>\n<tr>\n<td>5</td>\n<td>35</td>\n</tr>\n</tbody>\n</table>\n</div>\n</li>\n<li class=\"quiz false\">\n<p>A <span class=\"red\">constructor</span> has no type and is therefore a void method.</p>\n<blockquote>\n<p>译：构造函数没有类型，因此是一个空方法。<br />\nPURPOSE: SET THE OBJECT(S) TO AN INITIAL STATE.<br />\n 目的：将对象设置为初始状态。<br />\n构造函数没有 返回类型，所以没有 void。</p>\n</blockquote>\n</li>\n<li class=\"quiz true\">\n<p>Given the declaration</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">double</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> numList <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">double</span><span class=\"token punctuation\">[</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//0-19 INDICIE</span></pre></td></tr></table></figure><p>the statement</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>numList<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> numList<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> numList<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>updates the content of the thirteenth component of the array numList.</p>\n</li>\n<li class=\"quiz true\">\n<p>A subclass can override  <code>public</code>  methods of a superclass.</p>\n<blockquote>\n<p>子类可以重写父类的方法</p>\n</blockquote>\n</li>\n<li class=\"quiz true\">\n<p>If an exception occurs in a try block and that exception is caught by a catch block, then the remaining catch blocks associated with that try block are ignored.</p>\n<blockquote>\n<p>如果在一个 try 块中发生异常，并且该异常被 catch 块捕获，那么与该 try 块关联的其余 catch 块将被忽略。</p>\n</blockquote>\n</li>\n</ol>\n<h2 id=\"multiple-choice\"><a class=\"anchor\" href=\"#multiple-choice\">#</a> Multiple Choice</h2>\n<ol start=\"11\">\n<li class=\"quiz\">\n<p>To develop a program to solve a problem, you start by <span class=\"gap\"></span>.</p>\n<ul class=\"options\">\n<li class=\"correct\">analyzing the problem</li>\n<li>implementing the solution in Java</li>\n<li>designing the algorithm</li>\n<li>entering the solution into a computer system</li>\n</ul>\n<blockquote>\n<ul class=\"options\">\n<li class=\"correct\">分析问题</li>\n<li>用 JAVA 实现解决方案</li>\n<li>设计算法</li>\n<li>将解决方案输入计算机系统</li>\n</ul>\n</blockquote>\n</li>\n<li class=\"quiz\">\n<p>The first step in OOD is to identify the components called <span class=\"gap\"></span>.</p>\n<ul class=\"options\">\n<li>classes</li>\n<li class=\"correct\">objects</li>\n<li>methods</li>\n<li>data</li>\n</ul>\n<blockquote>\n<p>OOD：Object-Oriented Design，即面向对象设计</p>\n</blockquote>\n</li>\n<li class=\"quiz\">\n<p>Which of the following is a valid int value?</p>\n<ul class=\"options\">\n<li class=\"correct\"><code>3279</code> </li>\n<li><code>3,279</code></li>\n<li><code>3270.00</code></li>\n<li><code>-922337203684547758808</code></li>\n</ul>\n<blockquote>\n<p>For letter b response above, you can include a character like a comma ( , ) to be stored as a numeric value<br />\nFor letter c response above, you can't include a decimal ( . ) to be stored as a 'int' numeric value<br />\nFor letter d response above, the value is too large to be stored as an 'int'. Try coding the variable with that value as an assignment and see the error message.</p>\n</blockquote>\n</li>\n<li class=\"quiz\">\n<p>Which of the following is a valid statement?</p>\n<p>(i)  <code>int num = new int(67);</code> <br />\n(ii)  <code>String name = new (&quot;Doe&quot;);</code> <br />\n(iii)  <code>String name = &quot;Doe&quot;;</code></p>\n<ul class=\"options\">\n<li>Only (i)</li>\n<li>Only (i) and (ii)</li>\n<li class=\"correct\">Only (iii)</li>\n<li>Only (ii) and (iii)</li>\n</ul>\n<blockquote>\n<p>Syntax for ( i ) is invalid. Type should be Integer not 'int' when creating an integer type object<br />\nSyntax for ( ii ) s/b String name = new String (&quot;Doe&quot;);</p>\n</blockquote>\n</li>\n<li class=\"quiz\">\n<p>Declaring a class level variable as static means <span class=\"gap\"></span>.</p>\n<ul class=\"options\">\n<li>access is obtainable only thru a class object</li>\n<li class=\"correct\">any method (static, instance) can have access</li>\n<li>no methods can have access</li>\n<li>none of the above</li>\n</ul>\n<blockquote>\n<p>将类声明为静态意味着什么？</p>\n<ul class=\"options\">\n<li>只能通过类对象进行访问</li>\n<li class=\"correct\">任何方法 (静态、实例) 都可以访问</li>\n<li>没有方法可以访问</li>\n<li>以上都不正确</li>\n</ul>\n</blockquote>\n</li>\n<li class=\"quiz\">\n<p>Consider the following statements.</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">double</span> x<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\">String</span> y<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>y <span class=\"token operator\">=</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%.2f\"</span><span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>If  <code>x = 285.679</code> , what is the value of y?</p>\n<ul class=\"options\">\n<li><code>&quot;285.00&quot;</code></li>\n<li><code>&quot;285.680&quot;</code></li>\n<li class=\"correct\"><code>&quot;285.68&quot;</code> </li>\n<li><code>&quot;285.068&quot;</code></li>\n</ul>\n<blockquote>\n<p>保留两位小数</p>\n</blockquote>\n</li>\n<li class=\"quiz\">\n<p>What is the output of the following Java code?</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> x <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"positive \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"zero \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"negative\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul class=\"options\">\n<li>zero</li>\n<li>negative</li>\n<li class=\"correct\">zero negative</li>\n<li>positive zero negative</li>\n</ul>\n<blockquote>\n<p>Notice that the second statement although aligned under the  <code>if</code>  statement namely  <code>System.out.println(&quot;zero &quot;);</code>  executes no matter what as the  <code>if</code>  statement has no braces  <code>&#123; &#125;</code>  to encompass the 2nd  <code>println</code>  statement.<br />\n 尽管第二个语句 <code>System.out.println(&quot;zero &quot;);</code>  与  <code>if</code>  语句对齐，但 <code>if</code>  语句没有用大括号 <code>&#123;&#125;</code>  将第二个  <code>println</code>  语句括起来，因此它总是会被执行。</p>\n</blockquote>\n</li>\n</ol>\n<ul>\n<li>\n<p>For the executions using the compareTo built-in java method that follows (questions 18-20), outcomes are basically as follows</p>\n<p>If str1  &gt; str2 when comparing characters from (left to right each time) the outcome will be some positive number result<br />\nIf str1  &lt; str2 when comparing characters from (left to right each time) the outcome will be some negative number result<br />\nIf str1  == str2 when comparing characters from (left to right each time) the outcome will be 0.</p>\n<p>Comparisons like the above are good when sorting data.</p>\n</li>\n</ul>\n<ol start=\"18\">\n<li class=\"quiz\">\n<p>If str1 is &quot;Hello&quot; and str2 is &quot;Hi&quot;, which of the following could be a result of  <code>str1.compareTo(str2);</code> ?</p>\n<ul class=\"options\">\n<li>4</li>\n<li class=\"correct\">-4</li>\n<li>-1</li>\n<li>1</li>\n</ul>\n<blockquote>\n<p>Here when comparing<br />\nH e l l o with<br />\nH i<br />\nThe  <code>e</code>  and the  <code>i</code>  when comparing characters from each string from left to right show a lexographical difference of 4 characters.<br />\nAs str1 &gt; str2, a negative result appears by a distance of 4 characters yielding a -4.</p>\n</blockquote>\n</li>\n<li class=\"quiz\">\n<p>If str1 is &quot;Hello&quot; and str2 is &quot;Hi&quot;, which of the following could be a result of  <code>str2.compareTo(str1);</code> ?</p>\n<ul class=\"options\">\n<li class=\"correct\">4</li>\n<li>-4</li>\n<li>-1</li>\n<li>1</li>\n</ul>\n<blockquote>\n<p>Here similarly to question 18 result there is a difference of 4 characters, yielding a positive 4 as str2 is greater than str1.</p>\n</blockquote>\n</li>\n<li class=\"quiz\">\n<p>If str1 is &quot;Hello&quot; and str2 is &quot;Hello&quot;, which of the following could be a result of  <code>str1.compareTo(str2);</code> ?</p>\n<ul class=\"options\">\n<li>4</li>\n<li>-4</li>\n<li class=\"correct\">0</li>\n<li>1</li>\n</ul>\n<blockquote>\n<p>Here comparisons between string values (characters) are equal, hence the 0 outcome.</p>\n</blockquote>\n</li>\n</ol>\n",
            "tags": [
                "计算机科学",
                "Master of Software Engineering",
                "ITMD 510. Object-Oriented App Develop",
                "Java"
            ]
        },
        {
            "id": "https://shoka.lostyu.me/computer-science/note/theme-shoka-doc/special/",
            "url": "https://shoka.lostyu.me/computer-science/note/theme-shoka-doc/special/",
            "title": "Step.4 主题特殊功能",
            "date_published": "2020-08-13T13:45:48.000Z",
            "content_html": "<div class=\"note primary\">\n<p><a href=\"/computer-science/note/theme-shoka-doc/\">🚀快速开始</a> - <a href=\"/computer-science/note/theme-shoka-doc/dependents/\">💌依赖插件</a> - <a href=\"/computer-science/note/theme-shoka-doc/config/\">📌基本配置</a> - <a href=\"/computer-science/note/theme-shoka-doc/display/\">🌈界面显示</a> - <a href=\"/computer-science/note/theme-shoka-doc/special/\"><strong>🦄特殊功能</strong></a></p>\n</div>\n<div class=\"note info\">\n<p>以下介绍可以使用的 markdown 或者标签代码。<br />\n功能大部分基于 <code>hexo-renderer-multi-markdown-it</code>  渲染器，尤其是代码块的显示，与默认渲染器不兼容。</p>\n</div>\n<h1 id=\"links-链接块\"><a class=\"anchor\" href=\"#links-链接块\">#</a>  <code>links</code>  链接块</h1>\n<p>本功能参考 NexT，基于 Hexo Tag 功能，用来建立友链或其他网址链接功能。</p>\n<p>文章中的使用格式：</p>\n<ol>\n<li>使用 <code>links</code>  标签块，包围 <code>yml</code>  语法书写的内容，字段包括</li>\n</ol>\n<table>\n<tbody>\n<tr>\n<td><code>site</code></td>\n<td>站点名称</td>\n<td>必填</td>\n</tr>\n<tr>\n<td><code>owner</code></td>\n<td>管理员名字</td>\n<td>可选，默认为 <code>site</code>  的值</td>\n</tr>\n<tr>\n<td><code>url</code></td>\n<td>站点链接</td>\n<td>必填</td>\n</tr>\n<tr>\n<td><code>desc</code></td>\n<td>站点描述</td>\n<td>可选，默认为 <code>url</code>  的值</td>\n</tr>\n<tr>\n<td><code>image</code></td>\n<td>站点图片</td>\n<td>可选，默认为 <code>images/404.png</code></td>\n</tr>\n<tr>\n<td><code>color</code></td>\n<td>方块颜色</td>\n<td>可选，默认为 <code>#666</code></td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>&#123;% links %&#125;</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>- site: #站点名称</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  owner: #管理员名字</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  url: #站点网址</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  desc: #简短描述</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  image: #一张图片</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  color: #颜色代码</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>&#123;% endlinks %&#125;</pre></td></tr></table></figure><p>举个栗子：</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>&#123;% links %&#125;</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>- site: 優萌初華</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  owner: 霜月琉璃</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  url: https:&#x2F;&#x2F;shoka.lostyu.me</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  desc: 琉璃的医学 &amp; 编程笔记</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  image: https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;amehime&#x2F;shoka@latest&#x2F;images&#x2F;avatar.jpg</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  color: &quot;#e9546b&quot;</pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>- site: 優萌初華</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  owner: 霜月琉璃</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  url: https:&#x2F;&#x2F;shoka.lostyu.me</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  image: images&#x2F;avatar.jpg</pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>- site: 優萌初華</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  url: https:&#x2F;&#x2F;shoka.lostyu.me</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  desc: 琉璃的医学 &amp; 编程笔记</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  color: &quot;#9d5b8b&quot;</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>&#123;% endlinks %&#125;</pre></td></tr></table></figure><p><div class=\"links\"><div class=\"item\" title=\"霜月琉璃\" style=\"--block-color:#e9546b;\"><a href=\"https://shoka.lostyu.me\" class=\"image\" data-background-image=\"https://cdn.jsdelivr.net/gh/amehime/shoka@latest/images/avatar.jpg\"></a>\n          <div class=\"info\">\n          <a href=\"https://shoka.lostyu.me\" class=\"title\">優萌初華</a>\n          <p class=\"desc\">琉璃的医学 & 编程笔记</p>\n          </div></div><div class=\"item\" title=\"霜月琉璃\"><a href=\"https://shoka.lostyu.me\" class=\"image\" data-background-image=\"/images/avatar.jpg\"></a>\n          <div class=\"info\">\n          <a href=\"https://shoka.lostyu.me\" class=\"title\">優萌初華</a>\n          <p class=\"desc\">https://shoka.lostyu.me</p>\n          </div></div><div class=\"item\" title=\"優萌初華\" style=\"--block-color:#9d5b8b;\"><a href=\"https://shoka.lostyu.me\" class=\"image\" data-background-image=\"/images/404.png\"></a>\n          <div class=\"info\">\n          <a href=\"https://shoka.lostyu.me\" class=\"title\">優萌初華</a>\n          <p class=\"desc\">琉璃的医学 & 编程笔记</p>\n          </div></div></div></p>\n<ol start=\"2\">\n<li>以上标签块里的内容，还可以保存到一个 <code>yml</code>  文件中，然后使用 <code>linksfile</code>  标签。<br />\n其中， <code>path</code>  位于 <code>&lt;root&gt;/source</code>  目录下。</li>\n</ol>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>&#123;% linksfile [path] %&#125;</pre></td></tr></table></figure><p>举个栗子：</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>&#123;% linksfile friends&#x2F;_data.yml %&#125;</pre></td></tr></table></figure><h1 id=\"code代码块\"><a class=\"anchor\" href=\"#code代码块\">#</a>  <code>code</code>  代码块</h1>\n<p>使用 <code>markdown-it-prism</code>  进行代码高亮，支持显示行号、行高亮 <code>mark</code> 、命令行提示符 <code>command</code> 、代码块标题。</p>\n<p>基本格式： <code>[language] [title] [url] [link text] [mark] [command]</code></p>\n<table>\n<thead>\n<tr>\n<th>选项</th>\n<th>描述</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>\n<p>language</p>\n</td>\n<td>\n<ul>\n<li>支持的语言<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wcmlzbWpzLmNvbS8jc3VwcG9ydGVkLWxhbmd1YWdlcw==\">戳此</span></li>\n<li>如果不需要代码高亮，但希望显示代码块样式，则设为 <code>raw</code></li>\n<li>留空或设为 <code>info</code> ，将不显示代码高亮和代码块样式</li>\n</ul>\n</td>\n<td>\n<p>null</p>\n</td>\n</tr>\n<tr>\n<td>title</td>\n<td>代码块的标题文字</td>\n<td>null</td>\n</tr>\n<tr>\n<td>url</td>\n<td>代码块标题右侧显示的链接</td>\n<td>null</td>\n</tr>\n<tr>\n<td>link text</td>\n<td>上述链接显示的标题</td>\n<td>link</td>\n</tr>\n<tr>\n<td>\n<p>mark</p>\n</td>\n<td>\n<p>行高亮显示，格式为 <code>mark:行号,行号开始-行号结束,其他行号</code> 。<br />\n例如 <code>mark:1,4-7,10</code> ，将高亮显示第 1、4、5、6、7、10 行</p>\n</td>\n<td>\n<p>null</p>\n</td>\n</tr>\n<tr>\n<td>\n<p>command</p>\n</td>\n<td>\n<p>命令行提示符，格式为 <code>command:(&quot;提示内容&quot;:行号,行号||&quot;提示内容&quot;:行号开始-行号结束)</code> <br />\n 例如 <code>command:(&quot;[root@localhost] $&quot;:1,9-10||&quot;[admin@remotehost] #&quot;:4-6)</code></p>\n</td>\n<td>\n<p>null</p>\n</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>&#96;&#96;&#96;java 行高亮 https:&#x2F;&#x2F;shoka.lostyu.me 参考链接 mark:1,6-7</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>import java.util.Scanner;</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>...</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Scanner in &#x3D; new Scanner (System.in);</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>&#x2F;&#x2F; 输入 Scan 之后，按下键盘 Alt + “&#x2F;” 键，Eclipse 下自动补全。</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>System.out.println (in.nextLine ());</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>System.out.println (&quot;Hello&quot; + &quot;world.&quot;);</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>&#96;&#96;&#96;</pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>&#96;&#96;&#96;bash 命令行提示符 command:(&quot;[root@localhost] $&quot;:1,9-10||&quot;[admin@remotehost] #&quot;:4-6)</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>pwd</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>&#x2F;usr&#x2F;home&#x2F;chris&#x2F;bin</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>ls -la</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>total 2</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>drwxr-xr-x   2 chris  chris     11 Jan 10 16:48 .</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>drwxr--r-x  45 chris  chris     92 Feb 14 11:10 ..</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>-rwxr-xr-x   1 chris  chris    444 Aug 25  2013 backup</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>-rwxr-xr-x   1 chris  chris    642 Jan 17 14:42 deploy</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>git add -A</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>git commit -m &quot;update&quot;</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>git push</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>&#96;&#96;&#96;</pre></td></tr></table></figure><figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>行高亮</span><a href=\"https://shoka.lostyu.me\">参考链接</a></figcaption><table><tr class=\"marked\"><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token class-name\">Scanner</span> in <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 输入 Scan 之后，按下键盘 Alt + “/” 键，Eclipse 下自动补全。</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr class=\"marked\"><td data-num=\"6\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>in<span class=\"token punctuation\">.</span><span class=\"token function\">nextLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr class=\"marked\"><td data-num=\"7\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello\"</span> <span class=\"token operator\">+</span> <span class=\"token string\">\" world.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>命令行提示符</span></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"[root@localhost] $\"></td><td><pre><span class=\"token builtin class-name\">pwd</span></pre></td></tr><tr><td data-num=\"2\"></td><td data-command=\"\"></td><td><pre>/usr/home/chris/bin</pre></td></tr><tr><td data-num=\"3\"></td><td data-command=\"\"></td><td><pre><span class=\"token function\">ls</span> -la</pre></td></tr><tr><td data-num=\"4\"></td><td data-command=\"[admin@remotehost] #\"></td><td><pre>total <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"5\"></td><td data-command=\"[admin@remotehost] #\"></td><td><pre>drwxr-xr-x   <span class=\"token number\">2</span> chris  chris     <span class=\"token number\">11</span> Jan <span class=\"token number\">10</span> <span class=\"token number\">16</span>:48 <span class=\"token builtin class-name\">.</span></pre></td></tr><tr><td data-num=\"6\"></td><td data-command=\"[admin@remotehost] #\"></td><td><pre>drwxr--r-x  <span class=\"token number\">45</span> chris  chris     <span class=\"token number\">92</span> Feb <span class=\"token number\">14</span> <span class=\"token number\">11</span>:10 <span class=\"token punctuation\">..</span></pre></td></tr><tr><td data-num=\"7\"></td><td data-command=\"\"></td><td><pre>-rwxr-xr-x   <span class=\"token number\">1</span> chris  chris    <span class=\"token number\">444</span> Aug <span class=\"token number\">25</span>  <span class=\"token number\">2013</span> backup</pre></td></tr><tr><td data-num=\"8\"></td><td data-command=\"\"></td><td><pre>-rwxr-xr-x   <span class=\"token number\">1</span> chris  chris    <span class=\"token number\">642</span> Jan <span class=\"token number\">17</span> <span class=\"token number\">14</span>:42 deploy</pre></td></tr><tr><td data-num=\"9\"></td><td data-command=\"[root@localhost] $\"></td><td><pre><span class=\"token function\">git</span> <span class=\"token function\">add</span> -A</pre></td></tr><tr><td data-num=\"10\"></td><td data-command=\"[root@localhost] $\"></td><td><pre><span class=\"token function\">git</span> commit -m <span class=\"token string\">\"update\"</span></pre></td></tr><tr><td data-num=\"11\"></td><td data-command=\"\"></td><td><pre><span class=\"token function\">git</span> push</pre></td></tr></table></figure><h1 id=\"quiz-练习题与答案\"><a class=\"anchor\" href=\"#quiz-练习题与答案\">#</a>  <code>quiz</code>  练习题与答案</h1>\n<p>这个功能是用来显示练习题的。<br />\n需要在 Front Matter 中添加 <code>quiz: true</code> ，以正确显示题型标签。</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"><span>几个例子</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>---</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>title: 练习题与答案</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>quiz: true</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>---</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>1. 编译时多态主要指运算符重载与函数重载，而运行时多态主要指虚函数。 &#123;.quiz .true&#125;</pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>2. 有基类 &#96;SHAPE&#96;，派生类 &#96;CIRCLE&#96;，声明如下变量：  &#123;.quiz .multi&#125;</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    &#96;&#96;&#96;cpp</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    SHAPE shape1,*p1;</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    CIRCLE circle1,*q1;</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    &#96;&#96;&#96;</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    下列哪些项是 “派生类对象替换基类对象”。</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    - &#96;p1&#x3D;&amp;circle1;&#96; &#123;.correct&#125;</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    - &#96;q1&#x3D;&amp;shape1;&#96;</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    - &#96;shape1&#x3D;circle1;&#96; &#123;.correct&#125;</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    - &#96;circle1&#x3D;shape1;&#96;</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>&#123;.options&#125;</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    &gt; - :heavy_check_mark: 令基类对象的指针指向派生类对象</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    &gt; - :x: 派生类指针指向基类的引用</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    &gt; - :heavy_check_mark: 派生类对象给基类对象赋值</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    &gt; - :x: 基类对象给派生类对象赋值</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    &gt; &#123;.options&#125;</pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>3. 下列叙述正确的是 []&#123;.gap&#125; 。 &#123;.quiz&#125;</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    - 虚函数只能定义成无参函数</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    - 虚函数不能有返回值</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    - 能定义虚构造函数</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    - A、B、C 都不对 &#123;.correct&#125;</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>&#123;.options&#125;</pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>10. 如果定义 &#96;int e&#x3D;8; double f&#x3D;6.4, g&#x3D;8.9;&#96;，则表达式 &#96;f+int (e&#x2F;3*int (f+g)&#x2F;2)%4&#96; 的值为 [9.4]&#123;.gap&#125;。 &#123;.quiz .fill&#125;</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    &gt; 注意运算顺序和数据类型</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    &gt; [8.4]&#123;.mistake&#125;</pre></td></tr></table></figure><p>点击选项可以显示答案，以及答案解析。</p>\n<ol>\n<li class=\"quiz\">\n<p>下列叙述正确的是 <span class=\"gap\"></span> 。</p>\n<ul class=\"options\">\n<li>虚函数只能定义成无参函数</li>\n<li>虚函数不能有返回值</li>\n<li>能定义虚构造函数</li>\n<li class=\"correct\">A、B、C 都不对</li>\n</ul>\n</li>\n<li class=\"quiz multi\">\n<p>有基类 <code>SHAPE</code> ，派生类 <code>CIRCLE</code> ，声明如下变量： </p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>SHAPE shape1<span class=\"token punctuation\">,</span><span class=\"token operator\">*</span>p1<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>CIRCLE circle1<span class=\"token punctuation\">,</span><span class=\"token operator\">*</span>q1<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>下列哪些项是 “派生类对象替换基类对象”。</p>\n<ul class=\"options\">\n<li class=\"correct\"><code>p1=&amp;circle1;</code> </li>\n<li><code>q1=&amp;shape1;</code></li>\n<li class=\"correct\"><code>shape1=circle1;</code> </li>\n<li><code>circle1=shape1;</code></li>\n</ul>\n<blockquote>\n<ul class=\"options\">\n<li>✔️ 令基类对象的指针指向派生类对象</li>\n<li>❌ 派生类指针指向基类的引用</li>\n<li>✔️ 派生类对象给基类对象赋值</li>\n<li>❌ 基类对象给派生类对象赋值</li>\n</ul>\n</blockquote>\n</li>\n<li class=\"quiz true\">\n<p>编译时多态主要指运算符重载与函数重载，而运行时多态主要指虚函数。</p>\n</li>\n<li class=\"quiz fill\">\n<p>如果定义 <code>int e=8; double f=6.4, g=8.9;</code> ，则表达式  <code>f+int(e/3*int(f+g)/2)%4</code>  的值为 <span class=\"gap\">9.4</span>。</p>\n<blockquote>\n<p>注意运算顺序和数据类型<br />\n<span class=\"mistake\"> 8.4</span></p>\n</blockquote>\n</li>\n</ol>\n<h2 id=\"使用说明\"><a class=\"anchor\" href=\"#使用说明\">#</a> 使用说明</h2>\n<p>本功能基于 <code>markdown-it-bracketed-spans</code>  和 <code>markdown-it-attrs</code></p>\n<table>\n<thead>\n<tr>\n<th>标签</th>\n<th>含义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>&#123;.quiz&#125;</code></td>\n<td>选择题</td>\n</tr>\n<tr>\n<td><code>&#123;.quiz .multi&#125;</code></td>\n<td>多选题</td>\n</tr>\n<tr>\n<td><code>&#123;.quiz .true&#125;</code></td>\n<td>正确的判断题</td>\n</tr>\n<tr>\n<td><code>&#123;.quiz .false&#125;</code></td>\n<td>错误的判断题</td>\n</tr>\n<tr>\n<td><code>&#123;.quiz .fill&#125;</code></td>\n<td>填空题</td>\n</tr>\n<tr>\n<td><code>[]&#123;.gap&#125;</code></td>\n<td>空白下划线</td>\n</tr>\n<tr>\n<td><code>[答案内容]&#123;.gap&#125;</code></td>\n<td>答案内容带下划线</td>\n</tr>\n<tr>\n<td><code>&#123;.options&#125;</code></td>\n<td>ABCDE 选项</td>\n</tr>\n<tr>\n<td><code>&#123;.correct&#125;</code></td>\n<td>选择题的正确选项</td>\n</tr>\n<tr>\n<td><code>&gt;</code></td>\n<td>答案解析</td>\n</tr>\n<tr>\n<td><code>[8.4]&#123;.mistake&#125;</code></td>\n<td>错题备注</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"emoji-绘文字\"><a class=\"anchor\" href=\"#emoji-绘文字\">#</a>  <code>emoji</code>  绘文字</h1>\n<p>本功能基于 <code>markdown-it-emoji</code> ，所有<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL21hcmtkb3duLWl0L21hcmtkb3duLWl0LWVtb2ppL2Jsb2IvbWFzdGVyL2xpYi9kYXRhL2Z1bGwuanNvbg==\">标签参考戳此</span></p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>:kissing_heart:</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>:ring:</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>:notes:</pre></td></tr></table></figure><p>😘 💍 🎶</p>\n<h1 id=\"effects-文字特效\"><a class=\"anchor\" href=\"#effects-文字特效\">#</a>  <code>effects</code>  文字特效</h1>\n<p>本功能基于 <code>markdown-it-ins</code> 、  <code>markdown-it-bracketed-spans</code>  和 <code>markdown-it-attrs</code></p>\n<blockquote>\n<p>本主题风格颜色通用样式：default、primary、success、info、warning、danger</p>\n</blockquote>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>++ 下划线 ++</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>++ 波浪线 ++&#123;.wavy&#125;</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>++ 着重点 ++&#123;.dot&#125;</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>++ 紫色下划线 ++&#123;.primary&#125;</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>++ 绿色波浪线 ++&#123;.wavy .success&#125;</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>++ 黄色着重点 ++&#123;.dot .warning&#125;</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>~~ 删除线～～</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>~~ 红色删除线～～&#123;.danger&#125;</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>&#x3D;&#x3D; 荧光高亮 &#x3D;&#x3D;</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>[赤橙黄绿青蓝紫]&#123;.rainbow&#125;</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>[红色]&#123;.red&#125;</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>[粉色]&#123;.pink&#125;</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>[橙色]&#123;.orange&#125;</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>[红色]&#123;.yellow&#125;</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>[绿色]&#123;.green&#125;</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>[靛青]&#123;.aqua&#125;</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>[蓝色]&#123;.blue&#125;</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>[紫色]&#123;.purple&#125;</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>[灰色]&#123;.grey&#125;</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>快捷键 [Ctrl]&#123;.kbd&#125; + [C]&#123;.kbd .red&#125;</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>H~2~0</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>29^th^</pre></td></tr></table></figure><div class=\"note warning\">\n<p>这段代码因为自动被 pangu.js 处理了一下，加了几个空格，导致直接复制代码不能正常显示。<br />\n正确的代码是 <code>++下划线++</code>   <code>~~删除线~~</code>   <code>==荧光高亮==</code> ，不能有空格哦。</p>\n</div>\n<p><ins>下划线</ins><br />\n<ins class=\"wavy\">波浪线</ins><br />\n<ins class=\"dot\">着重点</ins><br />\n<ins class=\"primary\">紫色下划线</ins><br />\n<ins class=\"wavy success\">绿色波浪线</ins><br />\n<ins class=\"dot warning\">黄色着重点</ins><br />\n<s>删除线</s><br />\n<s class=\"danger\">红色删除线</s><br />\n<mark>荧光高亮</mark><br />\n<span class=\"rainbow\">赤橙黄绿青蓝紫</span><br />\n<span class=\"red\">红色</span><br />\n<span class=\"pink\">粉色</span><br />\n<span class=\"orange\">橙色</span><br />\n<span class=\"yellow\">黄色</span><br />\n<span class=\"green\">绿色</span><br />\n<span class=\"aqua\">靛青</span><br />\n<span class=\"blue\">蓝色</span><br />\n<span class=\"purple\">紫色</span><br />\n<span class=\"grey\">灰色</span><br />\n快捷键 <span class=\"kbd\">Ctrl</span> + <span class=\"kbd red\">C</span><br />\nH<sub>2</sub>0<br />\n29<sup>th</sup></p>\n<h1 id=\"spoiler隐藏文字\"><a class=\"anchor\" href=\"#spoiler隐藏文字\">#</a>  <code>spoiler</code>  隐藏文字</h1>\n<p>本功能基于 <code>markdown-it-spoiler</code>  和 <code>markdown-it-attrs</code></p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>!! 黑幕黑幕黑幕黑幕黑幕黑幕！！： 鼠标滑过显示内容</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>!! 模糊模糊模糊模糊模糊模糊！！&#123;.bulr&#125; ： 选中文字显示内容</pre></td></tr></table></figure><p><span class=\"spoiler\" title=\"你知道得太多了\">黑幕黑幕黑幕黑幕黑幕黑幕</span> ： 鼠标滑过显示内容<br />\n<span class=\"spoiler bulr\" title=\"你知道得太多了\">模糊模糊模糊模糊模糊模糊</span> ： 选中文字显示内容</p>\n<h1 id=\"label-标签块\"><a class=\"anchor\" href=\"#label-标签块\">#</a>  <code>label</code>  标签块</h1>\n<p>本功能基于 <code>markdown-it-bracketed-spans</code>  和 <code>markdown-it-attrs</code> <br />\n 有以下颜色可选</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>[default]&#123;.label&#125;</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>[primary]&#123;.label .primary&#125;</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>[info]&#123;.label .info&#125;</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>[:heavy_check_mark:success]&#123;.label .success&#125;</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>[warning]&#123;.label .warning&#125;</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>[:broken_heart:danger]&#123;.label .danger&#125;</pre></td></tr></table></figure><p><span class=\"label\">default</span><br />\n<span class=\"label primary\">primary</span><br />\n<span class=\"label info\">info</span><br />\n<span class=\"label success\">✔️success</span><br />\n<span class=\"label warning\">warning</span><br />\n<span class=\"label danger\">💔danger</span></p>\n<h1 id=\"note-提醒块\"><a class=\"anchor\" href=\"#note-提醒块\">#</a>  <code>note</code>  提醒块</h1>\n<p>本功能基于 <code>markdown-it-container</code> <br />\n 标签为：</p>\n<table>\n<tbody>\n<tr>\n<td>开始行</td>\n<td><code>:::[风格颜色]</code></td>\n</tr>\n<tr>\n<td>结束行</td>\n<td><code>:::</code></td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>:::default</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>默认默认</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>:::</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>:::primary</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>基本基本</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>:::</pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>:::info</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>提示提示</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>:::</pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>:::success</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>成功成功</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>:::</pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>:::warning</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>警告警告</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>:::</pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>:::danger</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>危险危险</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>:::</pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>:::danger no-icon</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>危险危险</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>:::</pre></td></tr></table></figure><div class=\"note default\">\n<p>默认默认</p>\n</div>\n<div class=\"note primary\">\n<p>基本基本</p>\n</div>\n<div class=\"note info\">\n<p>提示提示</p>\n</div>\n<div class=\"note success\">\n<p>成功成功</p>\n</div>\n<div class=\"note warning\">\n<p>警告警告</p>\n</div>\n<div class=\"note danger\">\n<p>危险危险</p>\n</div>\n<div class=\"note danger no-icon\">\n<p>没有图标</p>\n</div>\n<h1 id=\"tab标签卡\"><a class=\"anchor\" href=\"#tab标签卡\">#</a>  <code>tab</code>  标签卡</h1>\n<p>本功能基于 <code>markdown-it-container</code> <br />\n 标签为：</p>\n<table>\n<tbody>\n<tr>\n<td>开始行</td>\n<td><code>;;;[同一ID] [标签名称]</code></td>\n</tr>\n<tr>\n<td>结束行</td>\n<td><code>;;;</code></td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>;;;id1 卡片 1</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>这里是卡片 1 的内容</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>** 加粗 **</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>[success]&#123;.label .success&#125;</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>&#123;% links %&#125;</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>- site: 優萌初華</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  owner: 霜月琉璃</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  url: https:&#x2F;&#x2F;shoka.lostyu.me</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  desc: 琉璃的医学 &amp; 编程笔记</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  image: https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;amehime&#x2F;shoka@latest&#x2F;images&#x2F;avatar.jpg</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  color: &quot;#e9546b&quot;</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>&#123;% endlinks %&#125;</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>;;;</pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>;;;id1 卡片 2</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>这里是卡片 2 的内容</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>:::danger</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>危险危险</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>:::</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>- 第一行</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>- 第二行</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>;;;</pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>;;;id2 ②号标签卡片 1</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>这里是卡片 1 的内容</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>;;;</pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>;;;id2 ②号标签卡片 2</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>这里是卡片 2 的内容</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>;;;</pre></td></tr></table></figure><div class=\"tab\" data-id=\"id1\" data-title=\"卡片1\">\n<p>这里是卡片 1 的内容<br />\n<strong>加粗</strong><br />\n<span class=\"label success\"> success</span></p>\n<p><div class=\"links\"><div class=\"item\" title=\"霜月琉璃\" style=\"--block-color:#e9546b;\"><a href=\"https://shoka.lostyu.me\" class=\"image\" data-background-image=\"https://cdn.jsdelivr.net/gh/amehime/shoka@latest/images/avatar.jpg\"></a>\n          <div class=\"info\">\n          <a href=\"https://shoka.lostyu.me\" class=\"title\">優萌初華</a>\n          <p class=\"desc\">琉璃的医学 & 编程笔记</p>\n          </div></div></div></p>\n</div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"卡片2\">\n<p>这里是卡片 2 的内容</p>\n<div class=\"note danger\">\n<p>危险危险</p>\n</div>\n<ul>\n<li>第一行</li>\n<li>第二行</li>\n</ul>\n</div>\n<div class=\"tab\" data-id=\"id2\" data-title=\"②号标签卡片1\">\n<p>这里是卡片 1 的内容</p>\n</div>\n<div class=\"tab\" data-id=\"id2\" data-title=\"②号标签卡片2\">\n<p>这里是卡片 2 的内容</p>\n</div>\n<h1 id=\"collapse-折叠块\"><a class=\"anchor\" href=\"#collapse-折叠块\">#</a>  <code>collapse</code>  折叠块</h1>\n<p>本功能基于 <code>markdown-it-container</code> <br />\n 标签为：</p>\n<table>\n<tbody>\n<tr>\n<td>开始行</td>\n<td><code>+++[风格颜色] [标题文字]</code></td>\n</tr>\n<tr>\n<td>结束行</td>\n<td><code>+++</code></td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>+++ 默认默认 这里是一段文字</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>++ 下划线 ++</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>+++</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>+++primary 紫色</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>:::info</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>参考信息</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>:::</pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>- 第一行</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>- 第二行</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>+++</pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>+++info  蓝色</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>;;;id3 卡片 1</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>这里是卡片 1 的内容</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>;;;</pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>;;;id3 卡片 2</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>这里是卡片 2 的内容</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>;;;</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>+++</pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>+++success 绿色</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>&#123;% links %&#125;</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>- site: 優萌初華</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>  url: https:&#x2F;&#x2F;shoka.lostyu.me</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>  color: &quot;#e9546b&quot;</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>&#123;% endlinks %&#125;</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>+++</pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>+++warning 黄色</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>!! 警告警告警告警告警告！！&#123;.bulr&#125;</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>[label]&#123;.label .success&#125;</pre></td></tr><tr><td data-num=\"37\"></td><td><pre>+++</pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>+++danger 红色</pre></td></tr><tr><td data-num=\"40\"></td><td><pre>[danger]&#123;.label .danger&#125;</pre></td></tr><tr><td data-num=\"41\"></td><td><pre>+++</pre></td></tr></table></figure><details><summary>默认默认 这里是一段文字</summary><div>\n<p><ins>下划线</ins></p>\n</div></details>\n<details class=\"primary\"><summary>紫色</summary><div>\n<div class=\"note info\">\n<p>参考信息</p>\n</div>\n<ul>\n<li>第一行</li>\n<li>第二行</li>\n</ul>\n</div></details>\n<details class=\"info\"><summary>蓝色</summary><div>\n<div class=\"tab\" data-id=\"id3\" data-title=\"卡片1\">\n<p>这里是卡片 1 的内容<br />\n<ins class=\"wavy\">波浪线</ins></p>\n</div>\n<div class=\"tab\" data-id=\"id3\" data-title=\"卡片2\">\n<p>这里是卡片 2 的内容</p>\n</div>\n</div></details>\n<details class=\"success\"><summary>绿色</summary><div>\n<p><div class=\"links\"><div class=\"item\" title=\"優萌初華\" style=\"--block-color:#e9546b;\"><a href=\"https://shoka.lostyu.me\" class=\"image\" data-background-image=\"/images/404.png\"></a>\n          <div class=\"info\">\n          <a href=\"https://shoka.lostyu.me\" class=\"title\">優萌初華</a>\n          <p class=\"desc\">https://shoka.lostyu.me</p>\n          </div></div></div></p>\n</div></details>\n<details class=\"warning\"><summary>黄色</summary><div>\n<p><span class=\"spoiler bulr\" title=\"你知道得太多了\">警告警告警告警告警告</span><br />\n<span class=\"label success\"> label</span></p>\n</div></details>\n<details class=\"danger\"><summary>红色</summary><div>\n<p><span class=\"label danger\">danger</span></p>\n</div></details>\n<h1 id=\"tasklist-待办事项\"><a class=\"anchor\" href=\"#tasklist-待办事项\">#</a>  <code>taskList</code>  待办事项</h1>\n<p>本功能基于 <code>markdown-it-task-checkbox</code> 。<br />\n可以利用 <code>markdown-it-attrs</code>  添加风格颜色，只可以给 <code>ul</code>  标签添加，需要新建两行。</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>- [ ] 这是一个小叉叉</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>- [x] 这是一个红色勾勾</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>&#123;.danger&#125;</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>- [ ] 未完成</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>- [x] 完成</pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>&#123;.primary&#125;</pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>- [ ] 未完成</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>- [x] 默认颜色</pre></td></tr></table></figure><ul class=\"task-list danger\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_0\" disabled=\"true\" /><label for=\"cbx_0\"> 这是一个小叉叉</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_1\" checked=\"true\" disabled=\"true\" /><label for=\"cbx_1\"> 这是一个红色勾勾</label></li>\n</ul>\n<ul class=\"task-list primary\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_2\" disabled=\"true\" /><label for=\"cbx_2\"> 未完成</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_3\" checked=\"true\" disabled=\"true\" /><label for=\"cbx_3\"> 完成</label></li>\n</ul>\n<ul class=\"task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_4\" disabled=\"true\" /><label for=\"cbx_4\"> 未完成</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_5\" checked=\"true\" disabled=\"true\" /><label for=\"cbx_5\"> 默认颜色</label></li>\n</ul>\n<h1 id=\"furigana文字注音\"><a class=\"anchor\" href=\"#furigana文字注音\">#</a>  <code>furigana</code>  文字注音</h1>\n<p>原本用于日语汉字假名注音，但别的注音也可以。<br />\n为了兼容性，采用 <code>markdown-it-ruby</code>  的基本格式： <code>&#123;文字^注音&#125;</code> ，并且为了兼容表格，将分隔符由 <code>|</code>  换成了 <code>^</code> 。<br />\n注音分隔基于 <code>furigana-markdown-it</code> <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvZnVyaWdhbmEtbWFya2Rvd24taXQjcXVpY2stdXNhZ2U=\"> 显示说明看这里</span></p>\n<table>\n<tbody>\n<tr>\n<td><code>&#123;取り返す^とりかえす&#125;</code></td>\n<td><ruby>取<rp> (</rp><rt>と</rt><rp>)</rp> り<rt></rt>返<rp> (</rp><rt>かえ</rt><rp>)</rp> す<rt></rt></ruby></td>\n</tr>\n<tr>\n<td><code>&#123;可愛い犬^か+わい・い・いぬ&#125;</code></td>\n<td><ruby>可愛<rp> (</rp><rt>かわい</rt><rp>)</rp> い<rt></rt>犬<rp> (</rp><rt>いぬ</rt><rp>)</rp></ruby></td>\n</tr>\n<tr>\n<td><code>&#123;可愛い犬^か・わい・いいぬ&#125;</code></td>\n<td><ruby>可<rp> (</rp><rt>か</rt><rp>)</rp> 愛<rp> (</rp><rt>わい</rt><rp>)</rp> い<rt></rt>犬<rp> (</rp><rt>いぬ</rt><rp>)</rp></ruby></td>\n</tr>\n<tr>\n<td><code>&#123;アクセラレータ^accelerator&#125;</code></td>\n<td><ruby>アクセラレータ<rp> (</rp><rt>accelerator</rt><rp>)</rp></ruby></td>\n</tr>\n<tr>\n<td><code>&#123;accelerator^アクセラレータ&#125;</code></td>\n<td><ruby>accelerator<rp>(</rp><rt>アクセラレータ</rt><rp>)</rp></ruby></td>\n</tr>\n<tr>\n<td><code>&#123;食べる^たべる&#125;</code></td>\n<td><ruby>食<rp> (</rp><rt>た</rt><rp>)</rp> べる<rt></rt></ruby></td>\n</tr>\n<tr>\n<td><code>&#123;食べる^=たべる&#125;</code></td>\n<td><ruby>食べる<rp> (</rp><rt>たべる</rt><rp>)</rp></ruby></td>\n</tr>\n<tr>\n<td><code>&#123;あいうえお^*&#125;</code></td>\n<td><ruby>あ<rt>●</rt>い<rt>●</rt>う<rt>●</rt>え<rt>●</rt>お<rt>●</rt></ruby></td>\n</tr>\n<tr>\n<td><code>&#123;あいうえお^*❤&#125;</code></td>\n<td><ruby>あ<rt>❤</rt>い<rt>❤</rt>う<rt>❤</rt>え<rt>❤</rt>お<rt>❤</rt></ruby></td>\n</tr>\n<tr>\n<td><code>&#123;常用账号^contact&#125;</code></td>\n<td><ruby>常用账号<rp> (</rp><rt>contact</rt><rp>)</rp></ruby></td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"media多媒体\"><a class=\"anchor\" href=\"#media多媒体\">#</a>  <code>media</code>  多媒体</h1>\n<p>本功能基于 Hexo Tag 功能，使用 <code>media</code>  标签，目前可选择两种类型，即 <code>audio</code>  和 <code>video</code> 。</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>&#123;% media audio %&#125;</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>... 音频列表</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>&#123;% endmedia %&#125;</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>&#123;% media video %&#125;</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>... 视频列表</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>&#123;% endmedia %&#125;</pre></td></tr></table></figure><p>标签包绕一段 <code>yml</code>  格式的内容，格式与<a href=\"../config/#%E8%83%8C%E6%99%AF%E9%9F%B3%E4%B9%90\">背景音乐</a>的配置类似。</p>\n<p>亦可以直接使用网易云、虾米、QQ 音乐的播放列表、单曲。</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"><span>举个栗子</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>&#123;% media audio %&#125;</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>- title: 列表 1</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  list:</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    - https:&#x2F;&#x2F;music.163.com&#x2F;#&#x2F;playlist?id&#x3D;2943811283</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    - https:&#x2F;&#x2F;music.163.com&#x2F;#&#x2F;playlist?id&#x3D;2297706586</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>- title: 列表 2</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  list:</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    - https:&#x2F;&#x2F;music.163.com&#x2F;#&#x2F;playlist?id&#x3D;2031842656</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>&#123;% endmedia %&#125;</pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>&#123;% media video %&#125;</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>- name: &quot;测试 1&quot;</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  url: https:&#x2F;&#x2F;cdn.kastatic.org&#x2F;ka-youtube-converted&#x2F;O_nY1TM2RZM.mp4&#x2F;O_nY1TM2RZM.mp4#t&#x3D;0</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>- name: &quot;测试 2&quot;</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  url: https:&#x2F;&#x2F;cdn.kastatic.org&#x2F;ka-youtube-converted&#x2F;O_nY1TM2RZM.mp4&#x2F;O_nY1TM2RZM.mp4#t&#x3D;0</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>&#123;% endmedia %&#125;</pre></td></tr></table></figure><p><div class=\"media-container\"><div class=\"player\" data-type=\"audio\" data-src='[{\"title\":\"列表1\",\"list\":[\"https://music.163.com/#/playlist?id=2943811283\",\"https://music.163.com/#/playlist?id=2297706586\"]},{\"title\":\"列表2\",\"list\":[\"https://music.163.com/#/playlist?id=2031842656\"]}]'></div></div></p>\n<p><div class=\"media-container\"><div class=\"player\" data-type=\"video\" data-src='[{\"name\":\"测试1\",\"url\":\"https://cdn.kastatic.org/ka-youtube-converted/O_nY1TM2RZM.mp4/O_nY1TM2RZM.mp4#t=0\"},{\"name\":\"测试2\",\"url\":\"https://cdn.kastatic.org/ka-youtube-converted/O_nY1TM2RZM.mp4/O_nY1TM2RZM.mp4#t=0\"}]'></div></div></p>\n<h1 id=\"math数学公式\"><a class=\"anchor\" href=\"#math数学公式\">#</a>  <code>math</code>  数学公式</h1>\n<p>本功能基于 <code>markdown-it-katex</code> <br />\n 在 Front Matter 中添加 <code>math: true</code>  以支持<span class=\"exturl\" data-url=\"aHR0cHM6Ly9rYXRleC5vcmcv\"> KaTex</span></p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>---</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>title: 数学公式显示</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>math: true</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>---</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>行内公式：$\\sqrt &#123;3x-1&#125;+(1+x)^2$</pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>独立块显示：</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>$$\\begin &#123;array&#125;&#123;c&#125;</pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\\nabla \\times \\vec &#123;\\mathbf &#123;B&#125;&#125; -\\, \\frac1c\\, \\frac &#123;\\partial\\vec &#123;\\mathbf &#123;E&#125;&#125;&#125;&#123;\\partial t&#125; &amp;</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>&#x3D; \\frac &#123;4\\pi&#125;&#123;c&#125;\\vec &#123;\\mathbf &#123;j&#125;&#125;    \\nabla \\cdot \\vec &#123;\\mathbf &#123;E&#125;&#125; &amp; &#x3D; 4 \\pi \\rho \\\\</pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\\nabla \\times \\vec &#123;\\mathbf &#123;E&#125;&#125;\\, +\\, \\frac1c\\, \\frac &#123;\\partial\\vec &#123;\\mathbf &#123;B&#125;&#125;&#125;&#123;\\partial t&#125; &amp; &#x3D; \\vec &#123;\\mathbf &#123;0&#125;&#125; \\\\</pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\\nabla \\cdot \\vec &#123;\\mathbf &#123;B&#125;&#125; &amp; &#x3D; 0</pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\\end &#123;array&#125;$$</pre></td></tr></table></figure><p>行内公式：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msqrt><mrow><mn>3</mn><mi>x</mi><mo>−</mo><mn>1</mn></mrow></msqrt><mo>+</mo><mo stretchy=\"false\">(</mo><mn>1</mn><mo>+</mo><mi>x</mi><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\sqrt{3x-1}+(1+x)^2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.04em;vertical-align:-0.17444499999999996em;\"></span><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8655550000000001em;\"><span class=\"svg-align\" style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\" style=\"padding-left:0.833em;\"><span class=\"mord\">3</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">1</span></span></span><span style=\"top:-2.825555em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"hide-tail\" style=\"min-width:0.853em;height:1.08em;\"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702\nc-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14\nc0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54\nc44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10\ns173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429\nc69,-144,104.5,-217.7,106.5,-221\nl0 -0\nc5.3,-9.3,12,-14,20,-14\nH400000v40H845.2724\ns-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7\nc-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z\nM834 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.17444499999999996em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span></p>\n<p>独立块显示：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.15999999999999992em\" columnalign=\"center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi mathvariant=\"normal\">∇</mi><mo>×</mo><mover accent=\"true\"><mi mathvariant=\"bold\">B</mi><mo>⃗</mo></mover><mo>−</mo><mtext> </mtext><mfrac><mn>1</mn><mi>c</mi></mfrac><mtext> </mtext><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mover accent=\"true\"><mi mathvariant=\"bold\">E</mi><mo>⃗</mo></mover></mrow><mrow><mi mathvariant=\"normal\">∂</mi><mi>t</mi></mrow></mfrac></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>=</mo><mfrac><mrow><mn>4</mn><mi>π</mi></mrow><mi>c</mi></mfrac><mover accent=\"true\"><mi mathvariant=\"bold\">j</mi><mo>⃗</mo></mover><mi mathvariant=\"normal\">∇</mi><mo>⋅</mo><mover accent=\"true\"><mi mathvariant=\"bold\">E</mi><mo>⃗</mo></mover></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>=</mo><mn>4</mn><mi>π</mi><mi>ρ</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi mathvariant=\"normal\">∇</mi><mo>×</mo><mover accent=\"true\"><mi mathvariant=\"bold\">E</mi><mo>⃗</mo></mover><mtext> </mtext><mo>+</mo><mtext> </mtext><mfrac><mn>1</mn><mi>c</mi></mfrac><mtext> </mtext><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mover accent=\"true\"><mi mathvariant=\"bold\">B</mi><mo>⃗</mo></mover></mrow><mrow><mi mathvariant=\"normal\">∂</mi><mi>t</mi></mrow></mfrac></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>=</mo><mover accent=\"true\"><mn mathvariant=\"bold\">0</mn><mo>⃗</mo></mover></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi mathvariant=\"normal\">∇</mi><mo>⋅</mo><mover accent=\"true\"><mi mathvariant=\"bold\">B</mi><mo>⃗</mo></mover></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>=</mo><mn>0</mn></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{array}{c}\n\n\\nabla \\times \\vec{\\mathbf{B}} -\\, \\frac1c\\, \\frac{\\partial\\vec{\\mathbf{E}}}{\\partial t} &amp;\n= \\frac{4\\pi}{c}\\vec{\\mathbf{j}}    \\nabla \\cdot \\vec{\\mathbf{E}} &amp; = 4 \\pi \\rho \\\\\n\n\\nabla \\times \\vec{\\mathbf{E}}\\, +\\, \\frac1c\\, \\frac{\\partial\\vec{\\mathbf{B}}}{\\partial t} &amp; = \\vec{\\mathbf{0}} \\\\\n\n\\nabla \\cdot \\vec{\\mathbf{B}} &amp; = 0\n\n\\end{array}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:4.1938640000000005em;vertical-align:-1.846932em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.3469320000000002em;\"><span style=\"top:-4.346932000000001em;\"><span class=\"pstrut\" style=\"height:3.072377em;\"></span><span class=\"mord\"><span class=\"mord\">∇</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9691099999999999em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">B</span></span></span></span><span style=\"top:-3.25511em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.15216em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.845108em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">c</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.072377em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\">t</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9691099999999999em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathbf mtight\">E</span></span></span></span><span style=\"top:-2.96911em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.15216em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span><span style=\"top:-2.9145549999999996em;\"><span class=\"pstrut\" style=\"height:3.072377em;\"></span><span class=\"mord\"><span class=\"mord\">∇</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9691099999999999em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">E</span></span></span></span><span style=\"top:-3.25511em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.15216em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.845108em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">c</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.072377em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\">t</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9691099999999999em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathbf mtight\">B</span></span></span></span><span style=\"top:-2.96911em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.15216em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span><span style=\"top:-1.585445em;\"><span class=\"pstrut\" style=\"height:3.072377em;\"></span><span class=\"mord\"><span class=\"mord\">∇</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9691099999999999em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">B</span></span></span></span><span style=\"top:-3.25511em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.15216em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.846932em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.3469320000000002em;\"><span style=\"top:-4.346932000000001em;\"><span class=\"pstrut\" style=\"height:3.072377em;\"></span><span class=\"mord\"><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.845108em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">c</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">4</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">π</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9774399999999999em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">j</span></span></span></span><span style=\"top:-3.26344em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2355em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.19444em;\"><span></span></span></span></span></span><span class=\"mord\">∇</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9691099999999999em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">E</span></span></span></span><span style=\"top:-3.25511em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.15216em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span></span></span><span style=\"top:-2.9145549999999996em;\"><span class=\"pstrut\" style=\"height:3.072377em;\"></span><span class=\"mord\"><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.92744em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">0</span></span></span></span><span style=\"top:-3.21344em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2355em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span></span></span><span style=\"top:-1.585445em;\"><span class=\"pstrut\" style=\"height:3.072377em;\"></span><span class=\"mord\"><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.846932em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.3469320000000002em;\"><span style=\"top:-4.346932000000001em;\"><span class=\"pstrut\" style=\"height:3.072377em;\"></span><span class=\"mord\"><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\">4</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">π</span><span class=\"mord mathnormal\">ρ</span></span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span></span></span></span></span></span></span></p>\n<h1 id=\"mermaid流程图\"><a class=\"anchor\" href=\"#mermaid流程图\">#</a>  <code>mermaid</code>  流程图</h1>\n<p>本功能基于 <code>markdown-it-mermaid</code> <br />\n 在 Front Matter 中添加 <code>mermaid: true</code>  以支持<span class=\"exturl\" data-url=\"aHR0cHM6Ly9tZXJtYWlkLWpzLmdpdGh1Yi5pby9tZXJtYWlkLyMv\"> Mermaid</span></p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>---</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>title: 流程图显示</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>mermaid: true</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>---</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>&#96;&#96;&#96;mermaid</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>graph LR</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    A [Square Rect] -- Link text --&gt; B ((Circle))</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    A --&gt; C (Round Rect)</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    B --&gt; D &#123;Rhombus&#125;</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    C --&gt; D</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>&#96;&#96;&#96;</pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>&#96;&#96;&#96;mermaid</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>sequenceDiagram</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    loop Daily query</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        Alice-&gt;&gt;Bob: Hello Bob, how are you?</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        alt is sick</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            Bob-&gt;&gt;Alice: Not so good :(</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        else is well</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            Bob-&gt;&gt;Alice: Feeling fresh like a daisy</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        end</pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        opt Extra response</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            Bob-&gt;&gt;Alice: Thanks for asking</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        end</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    end</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>&#96;&#96;&#96;</pre></td></tr></table></figure><pre class=\"mermaid graph\"><svg id=\"mermaid-1605038091070\" width=\"100%\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" height=\"167\" style=\"max-width: 497.7718811035156px;\" viewBox=\"0 0 497.7718811035156 167\"><g><g class=\"output\"><g class=\"clusters\"></g><g class=\"edgePaths\"><g class=\"edgePath LS-A LE-B\" id=\"L-A-B\" style=\"opacity: 1;\"><path class=\"path\" d=\"M103.65391791044776,69.75L171.0390625,39L247.625,39\" marker-end=\"url(#arrowhead15)\" style=\"fill:none\"></path><defs><marker id=\"arrowhead15\" viewBox=\"0 0 10 10\" refX=\"9\" refY=\"5\" markerUnits=\"strokeWidth\" markerWidth=\"8\" markerHeight=\"6\" orient=\"auto\"><path d=\"M 0 0 L 10 5 L 0 10 z\" class=\"arrowheadPath\" style=\"stroke-width: 1; stroke-dasharray: 1, 0;\"></path></marker></defs></g><g class=\"edgePath LS-A LE-C\" id=\"L-A-C\" style=\"opacity: 1;\"><path class=\"path\" d=\"M103.65391791044776,108.75L171.0390625,139.5L228.234375,139.5\" marker-end=\"url(#arrowhead16)\" style=\"fill:none\"></path><defs><marker id=\"arrowhead16\" viewBox=\"0 0 10 10\" refX=\"9\" refY=\"5\" markerUnits=\"strokeWidth\" markerWidth=\"8\" markerHeight=\"6\" orient=\"auto\"><path d=\"M 0 0 L 10 5 L 0 10 z\" class=\"arrowheadPath\" style=\"stroke-width: 1; stroke-dasharray: 1, 0;\"></path></marker></defs></g><g class=\"edgePath LS-B LE-D\" id=\"L-B-D\" style=\"opacity: 1;\"><path class=\"path\" d=\"M309.625,39L354.015625,39L400.8184709260876,68.44715483685182\" marker-end=\"url(#arrowhead17)\" style=\"fill:none\"></path><defs><marker id=\"arrowhead17\" viewBox=\"0 0 10 10\" refX=\"9\" refY=\"5\" markerUnits=\"strokeWidth\" markerWidth=\"8\" markerHeight=\"6\" orient=\"auto\"><path d=\"M 0 0 L 10 5 L 0 10 z\" class=\"arrowheadPath\" style=\"stroke-width: 1; stroke-dasharray: 1, 0;\"></path></marker></defs></g><g class=\"edgePath LS-C LE-D\" id=\"L-C-D\" style=\"opacity: 1;\"><path class=\"path\" d=\"M329.015625,139.5L354.015625,139.5L400.81846998718345,111.05284575012297\" marker-end=\"url(#arrowhead18)\" style=\"fill:none\"></path><defs><marker id=\"arrowhead18\" viewBox=\"0 0 10 10\" refX=\"9\" refY=\"5\" markerUnits=\"strokeWidth\" markerWidth=\"8\" markerHeight=\"6\" orient=\"auto\"><path d=\"M 0 0 L 10 5 L 0 10 z\" class=\"arrowheadPath\" style=\"stroke-width: 1; stroke-dasharray: 1, 0;\"></path></marker></defs></g></g><g class=\"edgeLabels\"><g class=\"edgeLabel\" transform=\"translate(171.0390625,39)\" style=\"opacity: 1;\"><g transform=\"translate(-32.1953125,-9.5)\" class=\"label\"><rect rx=\"0\" ry=\"0\" width=\"64.359375\" height=\"19.03125\"></rect><text><tspan xml:space=\"preserve\" dy=\"1em\" x=\"1\">Link text</tspan></text></g></g><g class=\"edgeLabel\" transform=\"\" style=\"opacity: 1;\"><g transform=\"translate(0,0)\" class=\"label\"><rect rx=\"0\" ry=\"0\" width=\"0\" height=\"0\"></rect><text><tspan xml:space=\"preserve\" dy=\"1em\" x=\"1\"></tspan></text></g></g><g class=\"edgeLabel\" transform=\"\" style=\"opacity: 1;\"><g transform=\"translate(0,0)\" class=\"label\"><rect rx=\"0\" ry=\"0\" width=\"0\" height=\"0\"></rect><text><tspan xml:space=\"preserve\" dy=\"1em\" x=\"1\"></tspan></text></g></g><g class=\"edgeLabel\" transform=\"\" style=\"opacity: 1;\"><g transform=\"translate(0,0)\" class=\"label\"><rect rx=\"0\" ry=\"0\" width=\"0\" height=\"0\"></rect><text><tspan xml:space=\"preserve\" dy=\"1em\" x=\"1\"></tspan></text></g></g></g><g class=\"nodes\"><g class=\"node default\" id=\"flowchart-A-8\" transform=\"translate(60.921875,89.25)\" style=\"opacity: 1;\"><rect rx=\"0\" ry=\"0\" x=\"-52.921875\" y=\"-19.5\" width=\"105.84375\" height=\"39\" class=\"label-container\"></rect><g class=\"label\" transform=\"translate(0,0)\"><g transform=\"translate(-42.921875,-9.5)\"><text style=\"\"><tspan xml:space=\"preserve\" dy=\"1em\" x=\"1\">Square Rect</tspan></text></g></g></g><g class=\"node default\" id=\"flowchart-B-9\" transform=\"translate(278.625,39)\" style=\"opacity: 1;\"><circle x=\"-31\" y=\"-19.5\" r=\"31\" class=\"label-container\"></circle><g class=\"label\" transform=\"translate(0,0)\"><g transform=\"translate(-21,-9.5)\"><text style=\"\"><tspan xml:space=\"preserve\" dy=\"1em\" x=\"1\">Circle</tspan></text></g></g></g><g class=\"node default\" id=\"flowchart-C-11\" transform=\"translate(278.625,139.5)\" style=\"opacity: 1;\"><rect rx=\"5\" ry=\"5\" x=\"-50.390625\" y=\"-19.5\" width=\"100.78125\" height=\"39\" class=\"label-container\"></rect><g class=\"label\" transform=\"translate(0,0)\"><g transform=\"translate(-40.390625,-9.5)\"><text style=\"\"><tspan xml:space=\"preserve\" dy=\"1em\" x=\"1\">Round Rect</tspan></text></g></g></g><g class=\"node default\" id=\"flowchart-D-13\" transform=\"translate(434.39374923706055,89.25)\" style=\"opacity: 1;\"><polygon points=\"55.378125000000004,0 110.75625000000001,-55.378125000000004 55.378125000000004,-110.75625000000001 0,-55.378125000000004\" transform=\"translate(-55.378125000000004,55.378125000000004)\" class=\"label-container\"></polygon><g class=\"label\" transform=\"translate(0,0)\"><g transform=\"translate(-32.03125,-9.5)\"><text style=\"\"><tspan xml:space=\"preserve\" dy=\"1em\" x=\"1\">Rhombus</tspan></text></g></g></g></g></g></g></svg></pre><pre class=\"mermaid\"><svg id=\"mermaid-1605038091825\" width=\"100%\" xmlns=\"http://www.w3.org/2000/svg\" height=\"563\" style=\"max-width: 498px;\" viewBox=\"-50 -10 498 563\"><g></g><g><line id=\"actor0\" x1=\"75\" y1=\"5\" x2=\"75\" y2=\"552\" class=\"actor-line\" stroke-width=\"0.5px\" stroke=\"#999\"></line><rect x=\"0\" y=\"0\" fill=\"#eaeaea\" stroke=\"#666\" width=\"150\" height=\"65\" rx=\"3\" ry=\"3\" class=\"actor\"></rect><text x=\"75\" y=\"32.5\" dominant-baseline=\"central\" alignment-baseline=\"central\" class=\"actor\" style=\"text-anchor: middle; font-size: 14px; font-weight: 400; font-family: Open-Sans, sans-serif;\"><tspan x=\"75\" dy=\"0\">Alice</tspan></text></g><g><line id=\"actor1\" x1=\"323\" y1=\"5\" x2=\"323\" y2=\"552\" class=\"actor-line\" stroke-width=\"0.5px\" stroke=\"#999\"></line><rect x=\"248\" y=\"0\" fill=\"#eaeaea\" stroke=\"#666\" width=\"150\" height=\"65\" rx=\"3\" ry=\"3\" class=\"actor\"></rect><text x=\"323\" y=\"32.5\" dominant-baseline=\"central\" alignment-baseline=\"central\" class=\"actor\" style=\"text-anchor: middle; font-size: 14px; font-weight: 400; font-family: Open-Sans, sans-serif;\"><tspan x=\"323\" dy=\"0\">Bob</tspan></text></g><defs><marker id=\"arrowhead\" refX=\"5\" refY=\"2\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\"><path d=\"M 0,0 V 4 L6,2 Z\"></path></marker></defs><defs><marker id=\"crosshead\" markerWidth=\"15\" markerHeight=\"8\" orient=\"auto\" refX=\"16\" refY=\"4\"><path fill=\"black\" stroke=\"#000000\" stroke-width=\"1px\" d=\"M 9,2 V 6 L16,4 Z\" style=\"stroke-dasharray: 0, 0;\"></path><path fill=\"none\" stroke=\"#000000\" stroke-width=\"1px\" d=\"M 0,1 L 6,7 M 6,1 L 0,7\" style=\"stroke-dasharray: 0, 0;\"></path></marker></defs><defs><marker id=\"sequencenumber\" refX=\"15\" refY=\"15\" markerWidth=\"60\" markerHeight=\"40\" orient=\"auto\"><circle cx=\"15\" cy=\"15\" r=\"6\"></circle></marker></defs><text x=\"199\" y=\"125\" text-anchor=\"middle\" dominant-baseline=\"middle\" alignment-baseline=\"middle\" class=\"messageText\" dy=\"1em\" style=\"font-family: &quot;trebuchet ms&quot;, verdana, arial; font-size: 16px; font-weight: 400;\">Hello Bob, how are you?</text><line x1=\"75\" y1=\"158\" x2=\"323\" y2=\"158\" class=\"messageLine0\" stroke-width=\"2\" stroke=\"none\" marker-end=\"url(#arrowhead)\" style=\"fill: none;\"></line><text x=\"199\" y=\"218\" text-anchor=\"middle\" dominant-baseline=\"middle\" alignment-baseline=\"middle\" class=\"messageText\" dy=\"1em\" style=\"font-family: &quot;trebuchet ms&quot;, verdana, arial; font-size: 16px; font-weight: 400;\">Not so good :(</text><line x1=\"323\" y1=\"251\" x2=\"75\" y2=\"251\" class=\"messageLine0\" stroke-width=\"2\" stroke=\"none\" marker-end=\"url(#arrowhead)\" style=\"fill: none;\"></line><text x=\"199\" y=\"311\" text-anchor=\"middle\" dominant-baseline=\"middle\" alignment-baseline=\"middle\" class=\"messageText\" dy=\"1em\" style=\"font-family: &quot;trebuchet ms&quot;, verdana, arial; font-size: 16px; font-weight: 400;\">Feeling fresh like a daisy</text><line x1=\"323\" y1=\"344\" x2=\"75\" y2=\"344\" class=\"messageLine0\" stroke-width=\"2\" stroke=\"none\" marker-end=\"url(#arrowhead)\" style=\"fill: none;\"></line><g><line x1=\"65\" y1=\"168\" x2=\"333\" y2=\"168\" class=\"loopLine\"></line><line x1=\"333\" y1=\"168\" x2=\"333\" y2=\"354\" class=\"loopLine\"></line><line x1=\"65\" y1=\"354\" x2=\"333\" y2=\"354\" class=\"loopLine\"></line><line x1=\"65\" y1=\"168\" x2=\"65\" y2=\"354\" class=\"loopLine\"></line><line x1=\"65\" y1=\"266\" x2=\"333\" y2=\"266\" class=\"loopLine\" style=\"stroke-dasharray: 3, 3;\"></line><polygon points=\"65,168 115,168 115,181 106.6,188 65,188\" class=\"labelBox\"></polygon><text x=\"90\" y=\"181\" text-anchor=\"middle\" dominant-baseline=\"middle\" alignment-baseline=\"middle\" class=\"labelText\" style=\"font-family: &quot;trebuchet ms&quot;, verdana, arial; font-size: 16px; font-weight: 400;\">alt</text><text x=\"224\" y=\"186\" text-anchor=\"middle\" class=\"loopText\" style=\"font-family: &quot;trebuchet ms&quot;, verdana, arial; font-size: 16px; font-weight: 400;\"><tspan x=\"224\">[is sick]</tspan></text><text x=\"199\" y=\"284\" text-anchor=\"middle\" class=\"loopText\" style=\"font-family: &quot;trebuchet ms&quot;, verdana, arial; font-size: 16px; font-weight: 400;\">[is well]</text></g><text x=\"199\" y=\"414\" text-anchor=\"middle\" dominant-baseline=\"middle\" alignment-baseline=\"middle\" class=\"messageText\" dy=\"1em\" style=\"font-family: &quot;trebuchet ms&quot;, verdana, arial; font-size: 16px; font-weight: 400;\">Thanks for asking</text><line x1=\"323\" y1=\"447\" x2=\"75\" y2=\"447\" class=\"messageLine0\" stroke-width=\"2\" stroke=\"none\" marker-end=\"url(#arrowhead)\" style=\"fill: none;\"></line><g><line x1=\"65\" y1=\"364\" x2=\"333\" y2=\"364\" class=\"loopLine\"></line><line x1=\"333\" y1=\"364\" x2=\"333\" y2=\"457\" class=\"loopLine\"></line><line x1=\"65\" y1=\"457\" x2=\"333\" y2=\"457\" class=\"loopLine\"></line><line x1=\"65\" y1=\"364\" x2=\"65\" y2=\"457\" class=\"loopLine\"></line><polygon points=\"65,364 115,364 115,377 106.6,384 65,384\" class=\"labelBox\"></polygon><text x=\"90\" y=\"377\" text-anchor=\"middle\" dominant-baseline=\"middle\" alignment-baseline=\"middle\" class=\"labelText\" style=\"font-family: &quot;trebuchet ms&quot;, verdana, arial; font-size: 16px; font-weight: 400;\">opt</text><text x=\"224\" y=\"382\" text-anchor=\"middle\" class=\"loopText\" style=\"font-family: &quot;trebuchet ms&quot;, verdana, arial; font-size: 16px; font-weight: 400;\"><tspan x=\"224\">[Extra response]</tspan></text></g><g><line x1=\"55\" y1=\"75\" x2=\"343\" y2=\"75\" class=\"loopLine\"></line><line x1=\"343\" y1=\"75\" x2=\"343\" y2=\"467\" class=\"loopLine\"></line><line x1=\"55\" y1=\"467\" x2=\"343\" y2=\"467\" class=\"loopLine\"></line><line x1=\"55\" y1=\"75\" x2=\"55\" y2=\"467\" class=\"loopLine\"></line><polygon points=\"55,75 105,75 105,88 96.6,95 55,95\" class=\"labelBox\"></polygon><text x=\"80\" y=\"88\" text-anchor=\"middle\" dominant-baseline=\"middle\" alignment-baseline=\"middle\" class=\"labelText\" style=\"font-family: &quot;trebuchet ms&quot;, verdana, arial; font-size: 16px; font-weight: 400;\">loop</text><text x=\"224\" y=\"93\" text-anchor=\"middle\" class=\"loopText\" style=\"font-family: &quot;trebuchet ms&quot;, verdana, arial; font-size: 16px; font-weight: 400;\"><tspan x=\"224\">[Daily query]</tspan></text></g><g><rect x=\"0\" y=\"487\" fill=\"#eaeaea\" stroke=\"#666\" width=\"150\" height=\"65\" rx=\"3\" ry=\"3\" class=\"actor\"></rect><text x=\"75\" y=\"519.5\" dominant-baseline=\"central\" alignment-baseline=\"central\" class=\"actor\" style=\"text-anchor: middle; font-size: 14px; font-weight: 400; font-family: Open-Sans, sans-serif;\"><tspan x=\"75\" dy=\"0\">Alice</tspan></text></g><g><rect x=\"248\" y=\"487\" fill=\"#eaeaea\" stroke=\"#666\" width=\"150\" height=\"65\" rx=\"3\" ry=\"3\" class=\"actor\"></rect><text x=\"323\" y=\"519.5\" dominant-baseline=\"central\" alignment-baseline=\"central\" class=\"actor\" style=\"text-anchor: middle; font-size: 14px; font-weight: 400; font-family: Open-Sans, sans-serif;\"><tspan x=\"323\" dy=\"0\">Bob</tspan></text></g></svg></pre>",
            "tags": [
                "计算机科学",
                "二进制杂谈",
                "Theme Shoka Documentation",
                "Hexo",
                "教程"
            ]
        },
        {
            "id": "https://shoka.lostyu.me/computer-science/note/theme-shoka-doc/display/",
            "url": "https://shoka.lostyu.me/computer-science/note/theme-shoka-doc/display/",
            "title": "Step.3 界面显示",
            "date_published": "2020-08-13T13:12:48.000Z",
            "content_html": "<div class=\"note primary\">\n<p><a href=\"/computer-science/note/theme-shoka-doc/\">🚀快速开始</a> - <a href=\"/computer-science/note/theme-shoka-doc/dependents/\">💌依赖插件</a> - <a href=\"/computer-science/note/theme-shoka-doc/config/\">📌基本配置</a> - <a href=\"/computer-science/note/theme-shoka-doc/display/\"><strong>🌈界面显示</strong></a> - <a href=\"/computer-science/note/theme-shoka-doc/special/\">🦄特殊功能</a></p>\n</div>\n<h1 id=\"首页置顶文章\"><a class=\"anchor\" href=\"#首页置顶文章\">#</a> 首页置顶文章</h1>\n<p>在文章的 Front Matter 设置 <code>sticky: true</code> ，则该文章将显示在首页最上方的 <code>置顶文章</code> 列。<br />\n多篇文章按照发布时间倒序排列，不分页。</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>---</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>title: 置顶文章</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>sticky: true</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>---</pre></td></tr></table></figure><h1 id=\"首页精选分类\"><a class=\"anchor\" href=\"#首页精选分类\">#</a> 首页精选分类</h1>\n<p>想要在首页显示分类翻转块，需要按照以下示例的方式，给需要显示的分类加上封面图。</p>\n<ol>\n<li>\n<p>首先，修改站点配置：<br />\n找到 <code>category_map:</code> ，配置每个分类对应的英文映射，比如：</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">category_map</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">计算机科学</span><span class=\"token punctuation\">:</span> computer<span class=\"token punctuation\">-</span>science</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token key atrule\">Java</span><span class=\"token punctuation\">:</span> java</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token key atrule\">C++</span><span class=\"token punctuation\">:</span> cpp</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token key atrule\">二进制杂谈</span><span class=\"token punctuation\">:</span> note</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token key atrule\">计算机程序设计（C++）-西安交通大学</span><span class=\"token punctuation\">:</span> course<span class=\"token punctuation\">-</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token key atrule\">零基础学Java语言-浙江大学-翁恺</span><span class=\"token punctuation\">:</span> course<span class=\"token punctuation\">-</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token key atrule\">面向对象程序设计-Java语言-浙江大学-翁恺</span><span class=\"token punctuation\">:</span> course<span class=\"token punctuation\">-</span><span class=\"token number\">2</span></pre></td></tr></table></figure><blockquote>\n<p>注意：hexo 会自动处理路径中的特殊字符，~`!@#$%<span></span>^&amp;*()-_+=<span></span>{}|\\;:&quot;'&lt;&gt;,.? 以及空格，这些全部会被替换成 <code>-</code> <br />\n 所以避免在设置中使用上述字符，否则可导致无法抓取到目录下的 <code>cover.jpg</code></p>\n</blockquote>\n</li>\n<li>\n<p>在 <code>&lt;root&gt;/source/_posts</code>  文件夹相应的目录里，存放封面图<br />\n例子：如 <a href=\"https://shoka.lostyu.me/computer-science/java/course-1/week-1/\">第 1 周 计算</a> 这篇文章。<br />\n所处的分类是</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">categories</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">-</span> <span class=\"token punctuation\">[</span>计算机科学<span class=\"token punctuation\">,</span> Java<span class=\"token punctuation\">,</span> 零基础学Java语言<span class=\"token punctuation\">-</span>浙江大学<span class=\"token punctuation\">-</span>翁恺<span class=\"token punctuation\">]</span></pre></td></tr></table></figure><p>现在需要在首页显示 <code>零基础学Java语言-浙江大学-翁恺</code> 这个分类，翻转卡片后，显示这个分类下的文章们。<br />\n而该分类经过英文映射，它的路径将是 <code>/computer-science/java/course-1/</code> 。</p>\n<p>那么，请在 <code>&lt;root&gt;/source/_posts/computer-science/java/course-1/</code>  的目录下放置 <code>cover.jpg</code>  文件。<br />\n只要 <code>分类路径</code> 对应的目录下<strong>存在</strong> <code>cover.jpg</code>  文件，这个分类就会在首页显示。<br />\n在进行 <code>hexo g</code>  时，本分类的封面图会自动被复制到 public 目录里相应的位置。</p>\n</li>\n<li>\n<p>事实上，为了方便文章管理，这个分类下所有文章的 md 文件，我都会放在 <code>&lt;root&gt;/source/_posts/computer-science/java/course-1/</code>  这个目录下。</p>\n<p>且站点配置文件里，永久链接设置如下</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">permalink</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">:</span>title/</pre></td></tr></table></figure><p><code>hexo g</code>  后，文章的 html 文件们将全部生成到 <code>&lt;root&gt;/public/computer-science/java/course-1/</code>  目录。<br />\n具体可以查看<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2FtZWhpbWUvc2hva2E=\">本博客的 github 仓库</span>。</p>\n</li>\n<li>\n<p>文章详情界面中的 <code>系列文章</code> ，显示的是与当前文章同一分类的其他文章，并按照文章名正序排序。</p>\n</li>\n</ol>\n<blockquote>\n<p>o (*￣▽￣*) ゞ<br />\n其实，不设置 <code>category_map</code>  也可以，只要在分类路径对应的文件夹下存在 <code>cover.jpg</code>  文件就行。<br />\n现在，这项功能与 <code>category_dir</code>  的配置也无关， <code>hexo g</code>  生成后，图片会自动被转移到 <code>category_dir</code>  的相关子目录下。</p>\n</blockquote>\n<h1 id=\"文章封面图\"><a class=\"anchor\" href=\"#文章封面图\">#</a> 文章封面图</h1>\n<ul>\n<li>\n<p>如果文章的 Front Matter 设置了 <code>cover: image path</code> ，则封面会显示这张图片。</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"><span>举个栗子</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">title</span><span class=\"token punctuation\">:</span> Images</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key atrule\">cover</span><span class=\"token punctuation\">:</span> assets/wallpaper<span class=\"token punctuation\">-</span>2572384.jpg</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 或者写成</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token key atrule\">cover</span><span class=\"token punctuation\">:</span> http<span class=\"token punctuation\">:</span>//placehold.it/350x150.jpg</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">---</span></pre></td></tr></table></figure><p>这里 <code>cover</code>  的值可以是位于 <code>source</code>  目录里的图片文件，此处是 <code>&lt;root&gt;/source/assets/wallpaper-2572384.jpg</code>  文件，也可以是一个某网址。</p>\n</li>\n<li>\n<p>如果文章是一个 <code>gallery post</code> ，即 Front Matter 设置了 <code>photos</code> ，则会封面会显示设置的第一张图片。</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"><span>举个栗子</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">title</span><span class=\"token punctuation\">:</span> Gallery Post</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key atrule\">photos</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">-</span> assets/wallpaper<span class=\"token punctuation\">-</span>2572384.jpg</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">-</span> assets/wallpaper<span class=\"token punctuation\">-</span>2311325.jpg</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">-</span> assets/wallpaper<span class=\"token punctuation\">-</span>878514.jpg</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">-</span> http<span class=\"token punctuation\">:</span>//placehold.it/350x150.jpg</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">---</span></pre></td></tr></table></figure><p>此时默认会显示第一个图片，即位于 <code>&lt;root&gt;/source/assets/</code>  目录里的 <code>wallpaper-2572384.jpg</code> 。</p>\n</li>\n<li>\n<p>如果站点配置中设置了 <code>post_asset_folder: true</code> ，那么上述本地图片路径应为 <code>&lt;root&gt;/source/_posts/文章同名的文件夹/assets/wallpaper-2572384.jpg</code> ，当然此时 <code>assets</code>  目录可以省掉。</p>\n</li>\n<li>\n<p>如果以上设置均不存在，将显示一张随机图片，<a href=\"../config/#%E9%9A%8F%E6%9C%BA%E5%9B%BE%E5%BA%93\">随机图库配置戳此</a>。</p>\n</li>\n</ul>\n<h1 id=\"图片展示与相册\"><a class=\"anchor\" href=\"#图片展示与相册\">#</a> 图片展示与相册</h1>\n<p>在文章的 Front Matter 设置 <code>fancybox: false</code> ，可以关闭文章页的图片展示功能。<br />\n使用<span class=\"exturl\" data-url=\"aHR0cDovL21pcm9tYW5uaW5vLmdpdGh1Yi5pby9KdXN0aWZpZWQtR2FsbGVyeS8=\"> Justified-Gallery</span> 对 Gallery Post 内图案进行排列。</p>\n<p>下面介绍一些小技巧：</p>\n<ol>\n<li>让图案下方显示 <code>title</code>  的 markdown 代码</li>\n</ol>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>![这里是 alt](https:&#x2F;&#x2F;tva3.sinaimg.cn&#x2F;large&#x2F;6833939bly1gicis081o9j20zk0m8dmr.jpg &quot;这里是 title&quot;)</pre></td></tr></table></figure><p><img data-src=\"https://tva3.sinaimg.cn/large/6833939bly1gicis081o9j20zk0m8dmr.jpg\" alt=\"这里是alt\" title=\"这里是title\" /></p>\n<ol start=\"2\">\n<li>除了在 Front Matter 里配置 <code>photos</code>  可以显示相册图案列表外，还可以这样写</li>\n</ol>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>## 图案列表 No.1</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>![](https:&#x2F;&#x2F;tva3.sinaimg.cn&#x2F;large&#x2F;6833939bly1giclfdu6exj20zk0m87hw.jpg &quot;这里是 title&quot;)</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>![](https:&#x2F;&#x2F;tva3.sinaimg.cn&#x2F;large&#x2F;6833939bly1giclflwv2aj20zk0m84qp.jpg)</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>![](https:&#x2F;&#x2F;tva3.sinaimg.cn&#x2F;large&#x2F;6833939bly1giclg5ms2rj20zk0m8u0x.jpg)</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>![](https:&#x2F;&#x2F;tva3.sinaimg.cn&#x2F;large&#x2F;6833939bly1giclhnx9glj20zk0m8npd.jpg)</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>&#123;.gallery&#125;</pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>## 图案列表 No.2</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>![](https:&#x2F;&#x2F;tva3.sinaimg.cn&#x2F;large&#x2F;6833939bly1gicitht3xtj20zk0m8k5v.jpg)</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>![](https:&#x2F;&#x2F;tva3.sinaimg.cn&#x2F;large&#x2F;6833939bly1giclil3m4ej20zk0m8tn8.jpg)</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>![](https:&#x2F;&#x2F;tva3.sinaimg.cn&#x2F;large&#x2F;6833939bly1gicljgocqbj20zk0m8e81.jpg)</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>![](https:&#x2F;&#x2F;tva3.sinaimg.cn&#x2F;large&#x2F;6833939bly1gipetfk5zwj20zk0m8e81.jpg)</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>&#123;.gallery data-height&#x3D;&quot;220&quot;&#125;</pre></td></tr></table></figure><p><code>data-height</code>  用来设置每行的高度，默认为 <code>120</code></p>\n<h2 id=\"图案列表no1\"><a class=\"anchor\" href=\"#图案列表no1\">#</a> 图案列表 No.1</h2>\n<p class=\"gallery\"><img data-src=\"https://tva3.sinaimg.cn/large/6833939bly1giclfdu6exj20zk0m87hw.jpg\" alt=\"\" title=\"这里是title\" /><br />\n<img data-src=\"https://tva3.sinaimg.cn/large/6833939bly1giclflwv2aj20zk0m84qp.jpg\" alt=\"\" /><br />\n<img data-src=\"https://tva3.sinaimg.cn/large/6833939bly1giclg5ms2rj20zk0m8u0x.jpg\" alt=\"\" /><br />\n<img data-src=\"https://tva3.sinaimg.cn/large/6833939bly1giclhnx9glj20zk0m8npd.jpg\" alt=\"\" /></p>\n<h2 id=\"图案列表no2\"><a class=\"anchor\" href=\"#图案列表no2\">#</a> 图案列表 No.2</h2>\n<p class=\"gallery\" data-height=\"220\"><img data-src=\"https://tva3.sinaimg.cn/large/6833939bly1gicitht3xtj20zk0m8k5v.jpg\" alt=\"\" /><br />\n<img data-src=\"https://tva3.sinaimg.cn/large/6833939bly1giclil3m4ej20zk0m8tn8.jpg\" alt=\"\" /><br />\n<img data-src=\"https://tva3.sinaimg.cn/large/6833939bly1gicljgocqbj20zk0m8e81.jpg\" alt=\"\" /><br />\n<img data-src=\"https://tva3.sinaimg.cn/large/6833939bly1gipetfk5zwj20zk0m8e81.jpg\" alt=\"\" /></p>\n<h1 id=\"自定义页面配色\"><a class=\"anchor\" href=\"#自定义页面配色\">#</a> 自定义页面配色</h1>\n<p>主题配色全部在 <code>&lt;root&gt;/themes/shoka/source/css/_colors.styl</code>  文件中，可以自行查看。</p>\n<p>在 <code>&lt;root&gt;/source/_data/</code>  目录新建文件 <code>colors.styl</code> ，在此文件中添改样式。</p>\n<blockquote>\n<p>自定义 <code>colors.styl</code>  文件将覆盖主题默认样式，为了避免出错，请保证原有样式名均存在，在原有样式基础上进行增删改。</p>\n</blockquote>\n<p>主题支持在 <code>&lt;root&gt;/source/_data/</code>  目录建立三个自定义 <code>styl</code>  文件：</p>\n<table>\n<thead>\n<tr>\n<th>自定义文件名</th>\n<th>对应默认样式文件</th>\n<th>样式功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>colors.styl</code></td>\n<td><code>_colors.styl</code></td>\n<td>页面配色</td>\n</tr>\n<tr>\n<td><code>iconfont.styl</code></td>\n<td><code>_iconfont.styl</code></td>\n<td><a href=\"../config/#iconfont%E5%9B%BE%E6%A0%87\">图标样式</a></td>\n</tr>\n<tr>\n<td><code>custom.styl</code></td>\n<td>-</td>\n<td>任意自定义样式</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"自定义主题图片\"><a class=\"anchor\" href=\"#自定义主题图片\">#</a> 自定义主题图片</h1>\n<p>如果想要修改主题的 <code>&lt;root&gt;/themes/shoka/source/images/</code>  目录内的某张图片，请在 <code>&lt;root&gt;/source/_data/</code>  目录新建目录 <code>images</code> ，并在这个文件夹中添加<ins>同名</ins>文件，部署时将自动覆盖主题内的默认图片。</p>\n<p>可以用此方法自定义头像、打赏二维码等图片，并且避免覆盖更新主题时遗失自定义文件。</p>\n<h1 id=\"自定义语言包\"><a class=\"anchor\" href=\"#自定义语言包\">#</a> 自定义语言包</h1>\n<p>本功能参考 NexT，主要可以用来定义菜单等处显示的文字，且可以方便主题无脑覆盖升级。</p>\n<p>在 <code>&lt;root&gt;/source/_data/</code>  目录新建文件 <code>languages.yml</code> 。</p>\n<p>按照以下格式添加配置项：</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># language</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key atrule\">zh-CN</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token comment\"># items</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token key atrule\">post</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token key atrule\">copyright</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token comment\"># the translation you perfer</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token key atrule\">author</span><span class=\"token punctuation\">:</span> 本文博主</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token key atrule\">en</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token key atrule\">menu</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token key atrule\">travellings</span><span class=\"token punctuation\">:</span> Travellings</pre></td></tr></table></figure><p>可以参考主题目录下的 <code>example/source/_data</code>  文件夹。</p>\n<blockquote>\n<p>站点配置及文件的 Front Matter 中， <code>language</code>  项只支持 <code>zh-CN</code> 、 <code>zh-HK</code> 、 <code>zh-TW</code> 、 <code>ja</code> 、 <code>en</code> 。<br />\n类似写成 <code>zh_CN</code>  这样是不可以的。</p>\n</blockquote>\n",
            "tags": [
                "计算机科学",
                "二进制杂谈",
                "Theme Shoka Documentation",
                "Hexo",
                "教程"
            ]
        }
    ]
}